<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WindowsBase.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.WindowsBaseDelegates">
            <summary>包含用于 WindowsBase 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager">
            <summary>System.Collections.Specialized.CollectionChangedEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.#ctor(System.Collections.Specialized.CollectionChangedEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.AddHandlerINotifyCollectionChangedEventHandlerOfNotifyCollectionChangedEventArgs">
            <summary>设置 CollectionChangedEventManager.AddHandler(INotifyCollectionChanged source, EventHandler`1&lt;NotifyCollectionChangedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.AddListenerINotifyCollectionChangedIWeakEventListener">
            <summary>设置 CollectionChangedEventManager.AddListener(INotifyCollectionChanged source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="T:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.AllInstances.StartListeningObject">
            <summary>设置 CollectionChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.AllInstances.StopListeningObject">
            <summary>设置 CollectionChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.Constructor">
            <summary>设置 CollectionChangedEventManager.CollectionChangedEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.RemoveHandlerINotifyCollectionChangedEventHandlerOfNotifyCollectionChangedEventArgs">
            <summary>设置 CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged source, EventHandler`1&lt;NotifyCollectionChangedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.RemoveListenerINotifyCollectionChangedIWeakEventListener">
            <summary>设置 CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.StartListeningObject">
            <summary>设置 CollectionChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Collections.Specialized.Fakes.ShimCollectionChangedEventManager.StopListeningObject">
            <summary>设置 CollectionChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangedEventManager">
            <summary>System.ComponentModel.CurrentChangedEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.#ctor(System.ComponentModel.CurrentChangedEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.AddHandlerICollectionViewEventHandlerOfEventArgs">
            <summary>设置 CurrentChangedEventManager.AddHandler(ICollectionView source, EventHandler`1&lt;EventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.AddListenerICollectionViewIWeakEventListener">
            <summary>设置 CurrentChangedEventManager.AddListener(ICollectionView source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.AllInstances.StartListeningObject">
            <summary>设置 CurrentChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.AllInstances.StopListeningObject">
            <summary>设置 CurrentChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.Constructor">
            <summary>设置 CurrentChangedEventManager.CurrentChangedEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.RemoveHandlerICollectionViewEventHandlerOfEventArgs">
            <summary>设置 CurrentChangedEventManager.RemoveHandler(ICollectionView source, EventHandler`1&lt;EventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.RemoveListenerICollectionViewIWeakEventListener">
            <summary>设置 CurrentChangedEventManager.RemoveListener(ICollectionView source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.StartListeningObject">
            <summary>设置 CurrentChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangedEventManager.StopListeningObject">
            <summary>设置 CurrentChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs">
            <summary>System.ComponentModel.CurrentChangingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.#ctor(System.ComponentModel.CurrentChangingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.AllInstances.CancelGet">
            <summary>设置 CurrentChangingEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.AllInstances.CancelSetBoolean">
            <summary>设置 CurrentChangingEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.AllInstances.IsCancelableGet">
            <summary>设置 CurrentChangingEventArgs.get_IsCancelable() 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.CancelGet">
            <summary>设置 CurrentChangingEventArgs.get_Cancel() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.CancelSetBoolean">
            <summary>设置 CurrentChangingEventArgs.set_Cancel(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.Constructor">
            <summary>设置 CurrentChangingEventArgs.CurrentChangingEventArgs() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.ConstructorBoolean">
            <summary>设置 CurrentChangingEventArgs.CurrentChangingEventArgs(Boolean isCancelable) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventArgs.IsCancelableGet">
            <summary>设置 CurrentChangingEventArgs.get_IsCancelable() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangingEventManager">
            <summary>System.ComponentModel.CurrentChangingEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.#ctor(System.ComponentModel.CurrentChangingEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.AddHandlerICollectionViewEventHandlerOfCurrentChangingEventArgs">
            <summary>设置 CurrentChangingEventManager.AddHandler(ICollectionView source, EventHandler`1&lt;CurrentChangingEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.AddListenerICollectionViewIWeakEventListener">
            <summary>设置 CurrentChangingEventManager.AddListener(ICollectionView source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.AllInstances.StartListeningObject">
            <summary>设置 CurrentChangingEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.AllInstances.StopListeningObject">
            <summary>设置 CurrentChangingEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.Constructor">
            <summary>设置 CurrentChangingEventManager.CurrentChangingEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.RemoveHandlerICollectionViewEventHandlerOfCurrentChangingEventArgs">
            <summary>设置 CurrentChangingEventManager.RemoveHandler(ICollectionView source, EventHandler`1&lt;CurrentChangingEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.RemoveListenerICollectionViewIWeakEventListener">
            <summary>设置 CurrentChangingEventManager.RemoveListener(ICollectionView source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.StartListeningObject">
            <summary>设置 CurrentChangingEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimCurrentChangingEventManager.StopListeningObject">
            <summary>设置 CurrentChangingEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor">
            <summary>System.ComponentModel.DependencyPropertyDescriptor 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.#ctor(System.ComponentModel.DependencyPropertyDescriptor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AddValueChangedObjectEventHandler">
            <summary>设置 DependencyPropertyDescriptor.AddValueChanged(Object component, EventHandler handler) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.AddValueChangedObjectEventHandler">
            <summary>设置 DependencyPropertyDescriptor.AddValueChanged(Object component, EventHandler handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.AttributesGet">
            <summary>设置 DependencyPropertyDescriptor.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.CanResetValueObject">
            <summary>设置 DependencyPropertyDescriptor.CanResetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.CategoryGet">
            <summary>设置 DependencyPropertyDescriptor.get_Category() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.ComponentTypeGet">
            <summary>设置 DependencyPropertyDescriptor.get_ComponentType() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.Constructor">
            <summary>设置 DependencyPropertyDescriptor.DependencyPropertyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.ConverterGet">
            <summary>设置 DependencyPropertyDescriptor.get_Converter() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DependencyPropertyGet">
            <summary>设置 DependencyPropertyDescriptor.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DescriptionGet">
            <summary>设置 DependencyPropertyDescriptor.get_Description() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DesignTimeOnlyGet">
            <summary>设置 DependencyPropertyDescriptor.get_DesignTimeOnly() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DesignerCoerceValueCallbackGet">
            <summary>设置 DependencyPropertyDescriptor.get_DesignerCoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DesignerCoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 DependencyPropertyDescriptor.set_DesignerCoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.DisplayNameGet">
            <summary>设置 DependencyPropertyDescriptor.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.EqualsObject">
            <summary>设置 DependencyPropertyDescriptor.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.GetChildPropertiesObjectAttributeArray">
            <summary>设置 DependencyPropertyDescriptor.GetChildProperties(Object instance, Attribute[] filter) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.GetEditorType">
            <summary>设置 DependencyPropertyDescriptor.GetEditor(Type editorBaseType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.GetHashCode01">
            <summary>设置 DependencyPropertyDescriptor.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.GetValueObject">
            <summary>设置 DependencyPropertyDescriptor.GetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.IsAttachedGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsAttached() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.IsBrowsableGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsBrowsable() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.IsLocalizableGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsLocalizable() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.IsReadOnlyGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.MetadataGet">
            <summary>设置 DependencyPropertyDescriptor.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.PropertyTypeGet">
            <summary>设置 DependencyPropertyDescriptor.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.RemoveValueChangedObjectEventHandler">
            <summary>设置 DependencyPropertyDescriptor.RemoveValueChanged(Object component, EventHandler handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.ResetValueObject">
            <summary>设置 DependencyPropertyDescriptor.ResetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.SetValueObjectObject">
            <summary>设置 DependencyPropertyDescriptor.SetValue(Object component, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.ShouldSerializeValueObject">
            <summary>设置 DependencyPropertyDescriptor.ShouldSerializeValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.SupportsChangeEventsGet">
            <summary>设置 DependencyPropertyDescriptor.get_SupportsChangeEvents() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AllInstances.ToString01">
            <summary>设置 DependencyPropertyDescriptor.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.AttributesGet">
            <summary>设置 DependencyPropertyDescriptor.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.CanResetValueObject">
            <summary>设置 DependencyPropertyDescriptor.CanResetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.CategoryGet">
            <summary>设置 DependencyPropertyDescriptor.get_Category() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ClearCache">
            <summary>设置 DependencyPropertyDescriptor.ClearCache() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ComponentTypeGet">
            <summary>设置 DependencyPropertyDescriptor.get_ComponentType() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.Constructor">
            <summary>设置 DependencyPropertyDescriptor.DependencyPropertyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ConverterGet">
            <summary>设置 DependencyPropertyDescriptor.get_Converter() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DependencyPropertyGet">
            <summary>设置 DependencyPropertyDescriptor.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DescriptionGet">
            <summary>设置 DependencyPropertyDescriptor.get_Description() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DesignTimeOnlyGet">
            <summary>设置 DependencyPropertyDescriptor.get_DesignTimeOnly() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DesignerCoerceValueCallbackGet">
            <summary>设置 DependencyPropertyDescriptor.get_DesignerCoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DesignerCoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 DependencyPropertyDescriptor.set_DesignerCoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.DisplayNameGet">
            <summary>设置 DependencyPropertyDescriptor.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.EqualsObject">
            <summary>设置 DependencyPropertyDescriptor.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.FromNameStringTypeType">
            <summary>设置 DependencyPropertyDescriptor.FromName(String name, Type ownerType, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.FromNameStringTypeTypeBoolean">
            <summary>设置 DependencyPropertyDescriptor.FromName(String name, Type ownerType, Type targetType, Boolean ignorePropertyType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.FromPropertyDependencyPropertyType">
            <summary>设置 DependencyPropertyDescriptor.FromProperty(DependencyProperty dependencyProperty, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.FromPropertyDependencyPropertyTypeTypeBoolean">
            <summary>设置 DependencyPropertyDescriptor.FromProperty(DependencyProperty dependencyProperty, Type ownerType, Type targetType, Boolean ignorePropertyType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.FromPropertyPropertyDescriptor">
            <summary>设置 DependencyPropertyDescriptor.FromProperty(PropertyDescriptor property) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.GetChildPropertiesObjectAttributeArray">
            <summary>设置 DependencyPropertyDescriptor.GetChildProperties(Object instance, Attribute[] filter) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.GetEditorType">
            <summary>设置 DependencyPropertyDescriptor.GetEditor(Type editorBaseType) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.GetHashCode">
            <summary>设置 DependencyPropertyDescriptor.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.GetValueObject">
            <summary>设置 DependencyPropertyDescriptor.GetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.IsAttachedGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsAttached() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.IsBrowsableGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsBrowsable() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.IsLocalizableGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsLocalizable() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.IsReadOnlyGet">
            <summary>设置 DependencyPropertyDescriptor.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.MetadataGet">
            <summary>设置 DependencyPropertyDescriptor.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.PropertyTypeGet">
            <summary>设置 DependencyPropertyDescriptor.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.RemoveValueChangedObjectEventHandler">
            <summary>设置 DependencyPropertyDescriptor.RemoveValueChanged(Object component, EventHandler handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ResetValueObject">
            <summary>设置 DependencyPropertyDescriptor.ResetValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.SetValueObjectObject">
            <summary>设置 DependencyPropertyDescriptor.SetValue(Object component, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ShouldSerializeValueObject">
            <summary>设置 DependencyPropertyDescriptor.ShouldSerializeValue(Object component) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.StaticConstructor">
            <summary>设置 DependencyPropertyDescriptor.DependencyPropertyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.SupportsChangeEventsGet">
            <summary>设置 DependencyPropertyDescriptor.get_SupportsChangeEvents() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimDependencyPropertyDescriptor.ToString">
            <summary>设置 DependencyPropertyDescriptor.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimErrorsChangedEventManager">
            <summary>System.ComponentModel.ErrorsChangedEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.#ctor(System.ComponentModel.ErrorsChangedEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.AddHandlerINotifyDataErrorInfoEventHandlerOfDataErrorsChangedEventArgs">
            <summary>设置 ErrorsChangedEventManager.AddHandler(INotifyDataErrorInfo source, EventHandler`1&lt;DataErrorsChangedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.AllInstances.StartListeningObject">
            <summary>设置 ErrorsChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.AllInstances.StopListeningObject">
            <summary>设置 ErrorsChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.Constructor">
            <summary>设置 ErrorsChangedEventManager.ErrorsChangedEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.RemoveHandlerINotifyDataErrorInfoEventHandlerOfDataErrorsChangedEventArgs">
            <summary>设置 ErrorsChangedEventManager.RemoveHandler(INotifyDataErrorInfo source, EventHandler`1&lt;DataErrorsChangedEventArgs&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.StartListeningObject">
            <summary>设置 ErrorsChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimErrorsChangedEventManager.StopListeningObject">
            <summary>设置 ErrorsChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimGroupDescription">
            <summary>System.ComponentModel.GroupDescription 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimGroupDescription.#ctor(System.ComponentModel.GroupDescription)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.GroupNamesGet">
            <summary>设置 GroupDescription.get_GroupNames() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.NamesMatchObjectObject">
            <summary>设置 GroupDescription.NamesMatch(Object groupName, Object itemName) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 GroupDescription.OnPropertyChanged(PropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 GroupDescription.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 GroupDescription.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>设置 GroupDescription.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>设置 GroupDescription.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.AllInstances.ShouldSerializeGroupNames">
            <summary>设置 GroupDescription.ShouldSerializeGroupNames() 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimGroupDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimGroupDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimGroupDescription.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.Constructor">
            <summary>设置 GroupDescription.GroupDescription() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.GroupNamesGet">
            <summary>设置 GroupDescription.get_GroupNames() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.NamesMatchObjectObject">
            <summary>设置 GroupDescription.NamesMatch(Object groupName, Object itemName) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 GroupDescription.OnPropertyChanged(PropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 GroupDescription.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 GroupDescription.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>设置 GroupDescription.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>设置 GroupDescription.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimGroupDescription.ShouldSerializeGroupNames">
            <summary>设置 GroupDescription.ShouldSerializeGroupNames() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimItemPropertyInfo">
            <summary>System.ComponentModel.ItemPropertyInfo 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimItemPropertyInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimItemPropertyInfo.#ctor(System.ComponentModel.ItemPropertyInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimItemPropertyInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.AllInstances.DescriptorGet">
            <summary>设置 ItemPropertyInfo.get_Descriptor() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.AllInstances.NameGet">
            <summary>设置 ItemPropertyInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.AllInstances.PropertyTypeGet">
            <summary>设置 ItemPropertyInfo.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimItemPropertyInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimItemPropertyInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.ConstructorStringTypeObject">
            <summary>设置 ItemPropertyInfo.ItemPropertyInfo(String name, Type type, Object descriptor) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.DescriptorGet">
            <summary>设置 ItemPropertyInfo.get_Descriptor() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.NameGet">
            <summary>设置 ItemPropertyInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimItemPropertyInfo.PropertyTypeGet">
            <summary>设置 ItemPropertyInfo.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimPropertyChangedEventManager">
            <summary>System.ComponentModel.PropertyChangedEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.#ctor(System.ComponentModel.PropertyChangedEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AddHandlerINotifyPropertyChangedEventHandlerOfPropertyChangedEventArgsString">
            <summary>设置 PropertyChangedEventManager.AddHandler(INotifyPropertyChanged source, EventHandler`1&lt;PropertyChangedEventArgs&gt; handler, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AddListenerINotifyPropertyChangedIWeakEventListenerString">
            <summary>设置 PropertyChangedEventManager.AddListener(INotifyPropertyChanged source, IWeakEventListener listener, String propertyName) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AllInstances.PurgeObjectObjectBoolean">
            <summary>设置 PropertyChangedEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AllInstances.StartListeningObject">
            <summary>设置 PropertyChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.AllInstances.StopListeningObject">
            <summary>设置 PropertyChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.Constructor">
            <summary>设置 PropertyChangedEventManager.PropertyChangedEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.PurgeObjectObjectBoolean">
            <summary>设置 PropertyChangedEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.RemoveHandlerINotifyPropertyChangedEventHandlerOfPropertyChangedEventArgsString">
            <summary>设置 PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged source, EventHandler`1&lt;PropertyChangedEventArgs&gt; handler, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.RemoveListenerINotifyPropertyChangedIWeakEventListenerString">
            <summary>设置 PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged source, IWeakEventListener listener, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.StartListeningObject">
            <summary>设置 PropertyChangedEventManager.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.StaticConstructor">
            <summary>设置 PropertyChangedEventManager.PropertyChangedEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyChangedEventManager.StopListeningObject">
            <summary>设置 PropertyChangedEventManager.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimPropertyFilterAttribute">
            <summary>System.ComponentModel.PropertyFilterAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.AllInstances.EqualsObject">
            <summary>设置 PropertyFilterAttribute.Equals(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.AllInstances.FilterGet">
            <summary>设置 PropertyFilterAttribute.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.AllInstances.GetHashCode01">
            <summary>设置 PropertyFilterAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.AllInstances.MatchObject">
            <summary>设置 PropertyFilterAttribute.Match(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.ConstructorPropertyFilterOptions">
            <summary>设置 PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions filter) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.EqualsObject">
            <summary>设置 PropertyFilterAttribute.Equals(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.FilterGet">
            <summary>设置 PropertyFilterAttribute.get_Filter() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.GetHashCode">
            <summary>设置 PropertyFilterAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.MatchObject">
            <summary>设置 PropertyFilterAttribute.Match(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimPropertyFilterAttribute.StaticConstructor">
            <summary>设置 PropertyFilterAttribute.PropertyFilterAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimSortDescription">
            <summary>System.ComponentModel.SortDescription 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescription.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimSortDescription.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescription.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescription.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescription.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescription.EqualityOpSortDescriptionSortDescription">
            <summary>设置 SortDescription.op_Equality(SortDescription sd1, SortDescription sd2) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescription.InequalityOpSortDescriptionSortDescription">
            <summary>设置 SortDescription.op_Inequality(SortDescription sd1, SortDescription sd2) 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimSortDescriptionCollection">
            <summary>System.ComponentModel.SortDescriptionCollection 的填充码类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.#ctor(System.ComponentModel.SortDescriptionCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.ClearItems">
            <summary>设置 SortDescriptionCollection.ClearItems() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedaddNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedremoveNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.InsertItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.InsertItem(Int32 index, SortDescription item) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.RemoveItemInt32">
            <summary>设置 SortDescriptionCollection.RemoveItem(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.AllInstances.SetItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.SetItem(Int32 index, SortDescription item) 的 填充码</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Specialized.INotifyCollectionChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Generic.ICollection{System.ComponentModel.SortDescription})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Generic.IEnumerable{System.ComponentModel.SortDescription})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Generic.IList{System.ComponentModel.SortDescription})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Generic.IReadOnlyCollection{System.ComponentModel.SortDescription})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Bind(System.Collections.Generic.IReadOnlyList{System.ComponentModel.SortDescription})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.ClearItems">
            <summary>设置 SortDescriptionCollection.ClearItems() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.CollectionChangedAddNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.CollectionChangedRemoveNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedaddNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.CollectionChangedSystemCollectionsSpecializedINotifyCollectionChangedremoveNotifyCollectionChangedEventHandler">
            <summary>设置 SortDescriptionCollection.System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.Constructor">
            <summary>设置 SortDescriptionCollection.SortDescriptionCollection() 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.InsertItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.InsertItem(Int32 index, SortDescription item) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.RemoveItemInt32">
            <summary>设置 SortDescriptionCollection.RemoveItem(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.SetItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.SetItem(Int32 index, SortDescription item) 的 填充码</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.ShimSortDescriptionCollection.StaticConstructor">
            <summary>设置 SortDescriptionCollection.SortDescriptionCollection() 的 填充码</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubCurrentChangingEventArgs">
            <summary>System.ComponentModel.CurrentChangingEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.InitializeStub">
            <summary>初始化 type StubCurrentChangingEventArgs 的新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubCurrentChangingEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubGroupDescription">
            <summary>System.ComponentModel.GroupDescription 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGroupDescription.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGroupDescription.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
            <summary>设置 GroupDescription.GroupNameFromItem(Object item, Int32 level, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGroupDescription.GroupNameFromItemObjectInt32CultureInfo">
            <summary>设置 GroupDescription.GroupNameFromItem(Object item, Int32 level, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGroupDescription.InitializeStub">
            <summary>初始化 type StubGroupDescription 的新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGroupDescription.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubGroupDescription.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGroupDescription.NamesMatch(System.Object,System.Object)">
            <summary>设置 GroupDescription.NamesMatch(Object groupName, Object itemName) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGroupDescription.NamesMatchObjectObject">
            <summary>设置 GroupDescription.NamesMatch(Object groupName, Object itemName) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubGroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 GroupDescription.OnPropertyChanged(PropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubGroupDescription.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 GroupDescription.OnPropertyChanged(PropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubICollectionView">
            <summary>System.ComponentModel.ICollectionView 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.#ctor">
            <summary>初始化 type StubICollectionView 的新实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.AttachBackingFieldToCulture">
            <summary>附加委托以将 StubICollectionView.Culture 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.AttachBackingFieldToFilter">
            <summary>附加委托以将 StubICollectionView.Filter 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#CanFilter">
            <summary>设置 ICollectionView.get_CanFilter() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CanFilterGet">
            <summary>设置 ICollectionView.get_CanFilter() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#CanGroup">
            <summary>设置 ICollectionView.get_CanGroup() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CanGroupGet">
            <summary>设置 ICollectionView.get_CanGroup() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#CanSort">
            <summary>设置 ICollectionView.get_CanSort() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CanSortGet">
            <summary>设置 ICollectionView.get_CanSort() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.ContainsObject">
            <summary>设置 ICollectionView.Contains(Object item) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#Culture">
            <summary>设置 ICollectionView.get_Culture() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CultureGet">
            <summary>设置 ICollectionView.get_Culture() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CultureSetCultureInfo">
            <summary>设置 ICollectionView.set_Culture(CultureInfo value) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#CurrentItem">
            <summary>设置 ICollectionView.get_CurrentItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CurrentItemGet">
            <summary>设置 ICollectionView.get_CurrentItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#CurrentPosition">
            <summary>设置 ICollectionView.get_CurrentPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.CurrentPositionGet">
            <summary>设置 ICollectionView.get_CurrentPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.DeferRefresh">
            <summary>设置 ICollectionView.DeferRefresh() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#Filter">
            <summary>设置 ICollectionView.get_Filter() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.FilterGet">
            <summary>设置 ICollectionView.get_Filter() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.FilterSetPredicateOfObject">
            <summary>设置 ICollectionView.set_Filter(Predicate`1&lt;Object&gt; value) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#GroupDescriptions">
            <summary>设置 ICollectionView.get_GroupDescriptions() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.GroupDescriptionsGet">
            <summary>设置 ICollectionView.get_GroupDescriptions() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#Groups">
            <summary>设置 ICollectionView.get_Groups() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.GroupsGet">
            <summary>设置 ICollectionView.get_Groups() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#IsCurrentAfterLast">
            <summary>设置 ICollectionView.get_IsCurrentAfterLast() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.IsCurrentAfterLastGet">
            <summary>设置 ICollectionView.get_IsCurrentAfterLast() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#IsCurrentBeforeFirst">
            <summary>设置 ICollectionView.get_IsCurrentBeforeFirst() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.IsCurrentBeforeFirstGet">
            <summary>设置 ICollectionView.get_IsCurrentBeforeFirst() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#IsEmpty">
            <summary>设置 ICollectionView.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.IsEmptyGet">
            <summary>设置 ICollectionView.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToFirst">
            <summary>设置 ICollectionView.MoveCurrentToFirst() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToLast">
            <summary>设置 ICollectionView.MoveCurrentToLast() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToNext">
            <summary>设置 ICollectionView.MoveCurrentToNext() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToObject">
            <summary>设置 ICollectionView.MoveCurrentTo(Object item) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToPositionInt32">
            <summary>设置 ICollectionView.MoveCurrentToPosition(Int32 position) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.MoveCurrentToPrevious">
            <summary>设置 ICollectionView.MoveCurrentToPrevious() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.Refresh">
            <summary>设置 ICollectionView.Refresh() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#SortDescriptions">
            <summary>设置 ICollectionView.get_SortDescriptions() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.SortDescriptionsGet">
            <summary>设置 ICollectionView.get_SortDescriptions() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#SourceCollection">
            <summary>设置 ICollectionView.get_SourceCollection() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionView.SourceCollectionGet">
            <summary>设置 ICollectionView.get_SourceCollection() 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#Collections#IEnumerable#GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#Contains(System.Object)">
            <summary>设置 ICollectionView.Contains(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#DeferRefresh">
            <summary>设置 ICollectionView.DeferRefresh() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentTo(System.Object)">
            <summary>设置 ICollectionView.MoveCurrentTo(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentToFirst">
            <summary>设置 ICollectionView.MoveCurrentToFirst() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentToLast">
            <summary>设置 ICollectionView.MoveCurrentToLast() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentToNext">
            <summary>设置 ICollectionView.MoveCurrentToNext() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentToPosition(System.Int32)">
            <summary>设置 ICollectionView.MoveCurrentToPosition(Int32 position) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#MoveCurrentToPrevious">
            <summary>设置 ICollectionView.MoveCurrentToPrevious() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionView.System#ComponentModel#ICollectionView#Refresh">
            <summary>设置 ICollectionView.Refresh() 的 存根</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubICollectionViewFactory">
            <summary>System.ComponentModel.ICollectionViewFactory 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewFactory.#ctor">
            <summary>初始化 type StubICollectionViewFactory 的新实例</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewFactory.CreateView">
            <summary>设置 ICollectionViewFactory.CreateView() 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewFactory.System#ComponentModel#ICollectionViewFactory#CreateView">
            <summary>设置 ICollectionViewFactory.CreateView() 的 存根</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubICollectionViewLiveShaping">
            <summary>System.ComponentModel.ICollectionViewLiveShaping 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.#ctor">
            <summary>初始化 type StubICollectionViewLiveShaping 的新实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.AttachBackingFieldToIsLiveFiltering">
            <summary>附加委托以将 StubICollectionViewLiveShaping.IsLiveFiltering 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.AttachBackingFieldToIsLiveGrouping">
            <summary>附加委托以将 StubICollectionViewLiveShaping.IsLiveGrouping 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.AttachBackingFieldToIsLiveSorting">
            <summary>附加委托以将 StubICollectionViewLiveShaping.IsLiveSorting 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#CanChangeLiveFiltering">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveFiltering() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.CanChangeLiveFilteringGet">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveFiltering() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#CanChangeLiveGrouping">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveGrouping() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.CanChangeLiveGroupingGet">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveGrouping() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#CanChangeLiveSorting">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveSorting() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.CanChangeLiveSortingGet">
            <summary>设置 ICollectionViewLiveShaping.get_CanChangeLiveSorting() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#IsLiveFiltering">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveFiltering() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveFilteringGet">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveFiltering() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveFilteringSetNullableOfBoolean">
            <summary>设置 ICollectionViewLiveShaping.set_IsLiveFiltering(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#IsLiveGrouping">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveGrouping() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveGroupingGet">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveGrouping() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveGroupingSetNullableOfBoolean">
            <summary>设置 ICollectionViewLiveShaping.set_IsLiveGrouping(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#IsLiveSorting">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveSorting() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveSortingGet">
            <summary>设置 ICollectionViewLiveShaping.get_IsLiveSorting() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.IsLiveSortingSetNullableOfBoolean">
            <summary>设置 ICollectionViewLiveShaping.set_IsLiveSorting(Nullable`1&lt;Boolean&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#LiveFilteringProperties">
            <summary>设置 ICollectionViewLiveShaping.get_LiveFilteringProperties() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.LiveFilteringPropertiesGet">
            <summary>设置 ICollectionViewLiveShaping.get_LiveFilteringProperties() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#LiveGroupingProperties">
            <summary>设置 ICollectionViewLiveShaping.get_LiveGroupingProperties() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.LiveGroupingPropertiesGet">
            <summary>设置 ICollectionViewLiveShaping.get_LiveGroupingProperties() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.System#ComponentModel#ICollectionViewLiveShaping#LiveSortingProperties">
            <summary>设置 ICollectionViewLiveShaping.get_LiveSortingProperties() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubICollectionViewLiveShaping.LiveSortingPropertiesGet">
            <summary>设置 ICollectionViewLiveShaping.get_LiveSortingProperties() 的 stub</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIEditableCollectionView">
            <summary>System.ComponentModel.IEditableCollectionView 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.#ctor">
            <summary>初始化 type StubIEditableCollectionView 的新实例</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.AddNew">
            <summary>设置 IEditableCollectionView.AddNew() 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.AttachBackingFieldToNewItemPlaceholderPosition">
            <summary>附加委托以将 StubIEditableCollectionView.NewItemPlaceholderPosition 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CanAddNew">
            <summary>设置 IEditableCollectionView.get_CanAddNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CanAddNewGet">
            <summary>设置 IEditableCollectionView.get_CanAddNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
            <summary>设置 IEditableCollectionView.get_CanCancelEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CanCancelEditGet">
            <summary>设置 IEditableCollectionView.get_CanCancelEdit() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CanRemove">
            <summary>设置 IEditableCollectionView.get_CanRemove() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CanRemoveGet">
            <summary>设置 IEditableCollectionView.get_CanRemove() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CancelEdit">
            <summary>设置 IEditableCollectionView.CancelEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CancelNew">
            <summary>设置 IEditableCollectionView.CancelNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CommitEdit">
            <summary>设置 IEditableCollectionView.CommitEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CommitNew">
            <summary>设置 IEditableCollectionView.CommitNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
            <summary>设置 IEditableCollectionView.get_CurrentAddItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CurrentAddItemGet">
            <summary>设置 IEditableCollectionView.get_CurrentAddItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
            <summary>设置 IEditableCollectionView.get_CurrentEditItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.CurrentEditItemGet">
            <summary>设置 IEditableCollectionView.get_CurrentEditItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.EditItemObject">
            <summary>设置 IEditableCollectionView.EditItem(Object item) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#IsAddingNew">
            <summary>设置 IEditableCollectionView.get_IsAddingNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.IsAddingNewGet">
            <summary>设置 IEditableCollectionView.get_IsAddingNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#IsEditingItem">
            <summary>设置 IEditableCollectionView.get_IsEditingItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.IsEditingItemGet">
            <summary>设置 IEditableCollectionView.get_IsEditingItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
            <summary>设置 IEditableCollectionView.get_NewItemPlaceholderPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.NewItemPlaceholderPositionGet">
            <summary>设置 IEditableCollectionView.get_NewItemPlaceholderPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.NewItemPlaceholderPositionSetNewItemPlaceholderPosition">
            <summary>设置 IEditableCollectionView.set_NewItemPlaceholderPosition(NewItemPlaceholderPosition value) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.RemoveAtInt32">
            <summary>设置 IEditableCollectionView.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionView.RemoveObject">
            <summary>设置 IEditableCollectionView.Remove(Object item) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#AddNew">
            <summary>设置 IEditableCollectionView.AddNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CancelEdit">
            <summary>设置 IEditableCollectionView.CancelEdit() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CancelNew">
            <summary>设置 IEditableCollectionView.CancelNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CommitEdit">
            <summary>设置 IEditableCollectionView.CommitEdit() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#CommitNew">
            <summary>设置 IEditableCollectionView.CommitNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
            <summary>设置 IEditableCollectionView.EditItem(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
            <summary>设置 IEditableCollectionView.Remove(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionView.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
            <summary>设置 IEditableCollectionView.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem">
            <summary>System.ComponentModel.IEditableCollectionViewAddNewItem 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.#ctor">
            <summary>初始化 type StubIEditableCollectionViewAddNewItem 的新实例</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.AddNew">
            <summary>设置 IEditableCollectionView.AddNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.AddNewItemObject">
            <summary>设置 IEditableCollectionViewAddNewItem.AddNewItem(Object newItem) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.AttachBackingFieldToNewItemPlaceholderPosition">
            <summary>附加委托以将 StubIEditableCollectionViewAddNewItem.NewItemPlaceholderPosition 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CanAddNew">
            <summary>设置 IEditableCollectionView.get_CanAddNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CanAddNewGet">
            <summary>设置 IEditableCollectionView.get_CanAddNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem">
            <summary>设置 IEditableCollectionViewAddNewItem.get_CanAddNewItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CanAddNewItemGet">
            <summary>设置 IEditableCollectionViewAddNewItem.get_CanAddNewItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
            <summary>设置 IEditableCollectionView.get_CanCancelEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CanCancelEditGet">
            <summary>设置 IEditableCollectionView.get_CanCancelEdit() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CanRemove">
            <summary>设置 IEditableCollectionView.get_CanRemove() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CanRemoveGet">
            <summary>设置 IEditableCollectionView.get_CanRemove() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CancelEdit">
            <summary>设置 IEditableCollectionView.CancelEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CancelNew">
            <summary>设置 IEditableCollectionView.CancelNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CommitEdit">
            <summary>设置 IEditableCollectionView.CommitEdit() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CommitNew">
            <summary>设置 IEditableCollectionView.CommitNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
            <summary>设置 IEditableCollectionView.get_CurrentAddItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CurrentAddItemGet">
            <summary>设置 IEditableCollectionView.get_CurrentAddItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
            <summary>设置 IEditableCollectionView.get_CurrentEditItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.CurrentEditItemGet">
            <summary>设置 IEditableCollectionView.get_CurrentEditItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.EditItemObject">
            <summary>设置 IEditableCollectionView.EditItem(Object item) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#IsAddingNew">
            <summary>设置 IEditableCollectionView.get_IsAddingNew() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.IsAddingNewGet">
            <summary>设置 IEditableCollectionView.get_IsAddingNew() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#IsEditingItem">
            <summary>设置 IEditableCollectionView.get_IsEditingItem() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.IsEditingItemGet">
            <summary>设置 IEditableCollectionView.get_IsEditingItem() 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
            <summary>设置 IEditableCollectionView.get_NewItemPlaceholderPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.NewItemPlaceholderPositionGet">
            <summary>设置 IEditableCollectionView.get_NewItemPlaceholderPosition() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.NewItemPlaceholderPositionSetNewItemPlaceholderPosition">
            <summary>设置 IEditableCollectionView.set_NewItemPlaceholderPosition(NewItemPlaceholderPosition value) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.RemoveAtInt32">
            <summary>设置 IEditableCollectionView.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.RemoveObject">
            <summary>设置 IEditableCollectionView.Remove(Object item) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#AddNew">
            <summary>设置 IEditableCollectionView.AddNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CancelEdit">
            <summary>设置 IEditableCollectionView.CancelEdit() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CancelNew">
            <summary>设置 IEditableCollectionView.CancelNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CommitEdit">
            <summary>设置 IEditableCollectionView.CommitEdit() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#CommitNew">
            <summary>设置 IEditableCollectionView.CommitNew() 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
            <summary>设置 IEditableCollectionView.EditItem(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
            <summary>设置 IEditableCollectionView.Remove(Object item) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
            <summary>设置 IEditableCollectionView.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIEditableCollectionViewAddNewItem.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)">
            <summary>设置 IEditableCollectionViewAddNewItem.AddNewItem(Object newItem) 的 存根</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubIItemProperties">
            <summary>System.ComponentModel.IItemProperties 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubIItemProperties.#ctor">
            <summary>初始化 type StubIItemProperties 的新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubIItemProperties.System#ComponentModel#IItemProperties#ItemProperties">
            <summary>设置 IItemProperties.get_ItemProperties() 的 stub</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubIItemProperties.ItemPropertiesGet">
            <summary>设置 IItemProperties.get_ItemProperties() 的 stub</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubItemPropertyInfo">
            <summary>System.ComponentModel.ItemPropertyInfo 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubItemPropertyInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubItemPropertyInfo.InitializeStub">
            <summary>初始化 type StubItemPropertyInfo 的新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubItemPropertyInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubItemPropertyInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.ComponentModel.Fakes.StubSortDescriptionCollection">
            <summary>System.ComponentModel.SortDescriptionCollection 的存根类型</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubSortDescriptionCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.ClearItems">
            <summary>设置 SortDescriptionCollection.ClearItems() 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubSortDescriptionCollection.ClearItems01">
            <summary>设置 SortDescriptionCollection.ClearItems() 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.InitializeStub">
            <summary>初始化 type StubSortDescriptionCollection 的新实例</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
            <summary>设置 SortDescriptionCollection.InsertItem(Int32 index, SortDescription item) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubSortDescriptionCollection.InsertItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.InsertItem(Int32 index, SortDescription item) 的 stub</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubSortDescriptionCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.ComponentModel.Fakes.StubSortDescriptionCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.RemoveItem(System.Int32)">
            <summary>设置 SortDescriptionCollection.RemoveItem(Int32 index) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubSortDescriptionCollection.RemoveItemInt32">
            <summary>设置 SortDescriptionCollection.RemoveItem(Int32 index) 的 stub</summary>
        </member>
        <member name="M:System.ComponentModel.Fakes.StubSortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
            <summary>设置 SortDescriptionCollection.SetItem(Int32 index, SortDescription item) 的 存根</summary>
        </member>
        <member name="F:System.ComponentModel.Fakes.StubSortDescriptionCollection.SetItemInt32SortDescription">
            <summary>设置 SortDescriptionCollection.SetItem(Int32 index, SortDescription item) 的 stub</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimPresentationTraceSources">
            <summary>System.Diagnostics.PresentationTraceSources 的填充码类型</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimPresentationTraceSources.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.AnimationSourceGet">
            <summary>设置 PresentationTraceSources.get_AnimationSource() 的 填充码</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimPresentationTraceSources.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimPresentationTraceSources.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.DataBindingSourceGet">
            <summary>设置 PresentationTraceSources.get_DataBindingSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.DependencyPropertySourceGet">
            <summary>设置 PresentationTraceSources.get_DependencyPropertySource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.DocumentsSourceGet">
            <summary>设置 PresentationTraceSources.get_DocumentsSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.FreezableSourceGet">
            <summary>设置 PresentationTraceSources.get_FreezableSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.GetTraceLevelObject">
            <summary>设置 PresentationTraceSources.GetTraceLevel(Object element) 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.HwndHostSourceGet">
            <summary>设置 PresentationTraceSources.get_HwndHostSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.MarkupSourceGet">
            <summary>设置 PresentationTraceSources.get_MarkupSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.NameScopeSourceGet">
            <summary>设置 PresentationTraceSources.get_NameScopeSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.Refresh">
            <summary>设置 PresentationTraceSources.Refresh() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.ResourceDictionarySourceGet">
            <summary>设置 PresentationTraceSources.get_ResourceDictionarySource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.RoutedEventSourceGet">
            <summary>设置 PresentationTraceSources.get_RoutedEventSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.SetTraceLevelObjectPresentationTraceLevel">
            <summary>设置 PresentationTraceSources.SetTraceLevel(Object element, PresentationTraceLevel traceLevel) 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.ShellSourceGet">
            <summary>设置 PresentationTraceSources.get_ShellSource() 的 填充码</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimPresentationTraceSources.StaticConstructor">
            <summary>设置 PresentationTraceSources.PresentationTraceSources() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileFormatException">
            <summary>System.IO.FileFormatException 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileFormatException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileFormatException.#ctor(System.IO.FileFormatException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileFormatException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 FileFormatException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.AllInstances.SourceUriGet">
            <summary>设置 FileFormatException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileFormatException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileFormatException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileFormatException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.Constructor">
            <summary>设置 FileFormatException.FileFormatException() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 FileFormatException.FileFormatException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorString">
            <summary>设置 FileFormatException.FileFormatException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorStringException">
            <summary>设置 FileFormatException.FileFormatException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorUri">
            <summary>设置 FileFormatException.FileFormatException(Uri sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorUriException">
            <summary>设置 FileFormatException.FileFormatException(Uri sourceUri, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorUriString">
            <summary>设置 FileFormatException.FileFormatException(Uri sourceUri, String message) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.ConstructorUriStringException">
            <summary>设置 FileFormatException.FileFormatException(Uri sourceUri, String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 FileFormatException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileFormatException.SourceUriGet">
            <summary>设置 FileFormatException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Fakes.StubFileFormatException">
            <summary>System.IO.FileFormatException 的存根类型</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.Uri)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.Uri,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.Uri,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.#ctor(System.Uri,System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubFileFormatException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubFileFormatException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 FileFormatException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 FileFormatException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.InitializeStub">
            <summary>初始化 type StubFileFormatException 的新实例</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Fakes.StubFileFormatException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.IO.Fakes.StubFileFormatException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.IO.Fakes.StubFileFormatException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope">
            <summary>System.IO.Packaging.EncryptedPackageEnvelope 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.#ctor(System.IO.Packaging.EncryptedPackageEnvelope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.Close">
            <summary>设置 EncryptedPackageEnvelope.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.Dispose">
            <summary>设置 EncryptedPackageEnvelope.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.DisposeBoolean">
            <summary>设置 EncryptedPackageEnvelope.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.FileOpenAccessGet">
            <summary>设置 EncryptedPackageEnvelope.get_FileOpenAccess() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.Flush">
            <summary>设置 EncryptedPackageEnvelope.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.GetPackage">
            <summary>设置 EncryptedPackageEnvelope.GetPackage() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.GetPackageStream">
            <summary>设置 EncryptedPackageEnvelope.GetPackageStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.PackagePropertiesGet">
            <summary>设置 EncryptedPackageEnvelope.get_PackageProperties() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.RightsManagementInformationGet">
            <summary>设置 EncryptedPackageEnvelope.get_RightsManagementInformation() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.AllInstances.StorageInfoGet">
            <summary>设置 EncryptedPackageEnvelope.get_StorageInfo() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.Close">
            <summary>设置 EncryptedPackageEnvelope.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStream">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(Stream envelopeStream) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(Stream envelopeStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStreamStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(Stream envelopeStream, Stream packageStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStringFileAccessFileShare">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(String envelopeFileName, FileAccess access, FileShare sharing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStringPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(String envelopeFileName, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.ConstructorStringStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.EncryptedPackageEnvelope(String envelopeFileName, Stream packageStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.CreateFromPackageStreamStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.CreateFromPackage(Stream envelopeStream, Stream packageStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.CreateFromPackageStringStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.CreateFromPackage(String envelopeFileName, Stream packageStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.CreateStreamPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.Create(Stream envelopeStream, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.CreateStringPublishLicenseCryptoProvider">
            <summary>设置 EncryptedPackageEnvelope.Create(String envelopeFileName, PublishLicense publishLicense, CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.DataspaceLabelRMEncryptionNoCompressionGet">
            <summary>设置 EncryptedPackageEnvelope.get_DataspaceLabelRMEncryptionNoCompression() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.Dispose">
            <summary>设置 EncryptedPackageEnvelope.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.DisposeBoolean">
            <summary>设置 EncryptedPackageEnvelope.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.EncryptionTransformNameGet">
            <summary>设置 EncryptedPackageEnvelope.get_EncryptionTransformName() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.FileOpenAccessGet">
            <summary>设置 EncryptedPackageEnvelope.get_FileOpenAccess() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.Flush">
            <summary>设置 EncryptedPackageEnvelope.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.GetPackage">
            <summary>设置 EncryptedPackageEnvelope.GetPackage() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.GetPackageStream">
            <summary>设置 EncryptedPackageEnvelope.GetPackageStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.IsEncryptedPackageEnvelopeStream">
            <summary>设置 EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.IsEncryptedPackageEnvelopeString">
            <summary>设置 EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String fileName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.OpenStream">
            <summary>设置 EncryptedPackageEnvelope.Open(Stream envelopeStream) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.OpenString">
            <summary>设置 EncryptedPackageEnvelope.Open(String envelopeFileName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.OpenStringFileAccess">
            <summary>设置 EncryptedPackageEnvelope.Open(String envelopeFileName, FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.OpenStringFileAccessFileShare">
            <summary>设置 EncryptedPackageEnvelope.Open(String envelopeFileName, FileAccess access, FileShare sharing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.PackagePropertiesGet">
            <summary>设置 EncryptedPackageEnvelope.get_PackageProperties() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.PackageStreamNameGet">
            <summary>设置 EncryptedPackageEnvelope.get_PackageStreamName() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.RightsManagementInformationGet">
            <summary>设置 EncryptedPackageEnvelope.get_RightsManagementInformation() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimEncryptedPackageEnvelope.StorageInfoGet">
            <summary>设置 EncryptedPackageEnvelope.get_StorageInfo() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackUriHelper">
            <summary>System.IO.Packaging.PackUriHelper 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackUriHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackUriHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackUriHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.ComparePackUriUriUri">
            <summary>设置 PackUriHelper.ComparePackUri(Uri firstPackUri, Uri secondPackUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.ComparePartUriUriUri">
            <summary>设置 PackUriHelper.ComparePartUri(Uri firstPartUri, Uri secondPartUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.CreatePartUriUri">
            <summary>设置 PackUriHelper.CreatePartUri(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.CreateUri">
            <summary>设置 PackUriHelper.Create(Uri packageUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.CreateUriUri">
            <summary>设置 PackUriHelper.Create(Uri packageUri, Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.CreateUriUriString">
            <summary>设置 PackUriHelper.Create(Uri packageUri, Uri partUri, String fragment) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetNormalizedPartUriUri">
            <summary>设置 PackUriHelper.GetNormalizedPartUri(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetPackageUriUri">
            <summary>设置 PackUriHelper.GetPackageUri(Uri packUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetPartUriUri">
            <summary>设置 PackUriHelper.GetPartUri(Uri packUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetRelationshipPartUriUri">
            <summary>设置 PackUriHelper.GetRelationshipPartUri(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetRelativeUriUriUri">
            <summary>设置 PackUriHelper.GetRelativeUri(Uri sourcePartUri, Uri targetPartUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetSourcePartUriFromRelationshipPartUriUri">
            <summary>设置 PackUriHelper.GetSourcePartUriFromRelationshipPartUri(Uri relationshipPartUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.GetStringForPartUriUri">
            <summary>设置 PackUriHelper.GetStringForPartUri(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.IsPackUriUri">
            <summary>设置 PackUriHelper.IsPackUri(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.IsRelationshipPartUriUri">
            <summary>设置 PackUriHelper.IsRelationshipPartUri(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.PackageRootUriGet">
            <summary>设置 PackUriHelper.get_PackageRootUri() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.ResolvePartUriUriUri">
            <summary>设置 PackUriHelper.ResolvePartUri(Uri sourcePartUri, Uri targetUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.StaticConstructor">
            <summary>设置 PackUriHelper.PackUriHelper() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackUriHelper.ValidateAndGetPackUriComponentsUriUriOutUriOut">
            <summary>设置 PackUriHelper.ValidateAndGetPackUriComponents(Uri packUri, Uri&amp; packageUri, Uri&amp; partUri) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackage">
            <summary>System.IO.Packaging.Package 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackage.#ctor(System.IO.Packaging.Package)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.Close">
            <summary>设置 Package.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.ClosePackageRelationships">
            <summary>设置 Package.ClosePackageRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.CreatePartUriString">
            <summary>设置 Package.CreatePart(Uri partUri, String contentType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.CreatePartUriStringCompressionOption">
            <summary>设置 Package.CreatePart(Uri partUri, String contentType, CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.CreateRelationshipUriTargetModeString">
            <summary>设置 Package.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.CreateRelationshipUriTargetModeStringString">
            <summary>设置 Package.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType, String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.DeletePartUri">
            <summary>设置 Package.DeletePart(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.DeleteRelationshipString">
            <summary>设置 Package.DeleteRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.DisposeBoolean">
            <summary>设置 Package.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.FileOpenAccessGet">
            <summary>设置 Package.get_FileOpenAccess() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.Flush">
            <summary>设置 Package.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.FlushPackageRelationships">
            <summary>设置 Package.FlushPackageRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.GetPartUri">
            <summary>设置 Package.GetPart(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.GetParts">
            <summary>设置 Package.GetParts() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.GetRelationshipString">
            <summary>设置 Package.GetRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.GetRelationships">
            <summary>设置 Package.GetRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.GetRelationshipsByTypeString">
            <summary>设置 Package.GetRelationshipsByType(String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.InStreamingCreationGet">
            <summary>设置 Package.get_InStreamingCreation() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.PackagePropertiesGet">
            <summary>设置 Package.get_PackageProperties() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.PartExistsUri">
            <summary>设置 Package.PartExists(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.RelationshipExistsString">
            <summary>设置 Package.RelationshipExists(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.SystemIDisposableDispose">
            <summary>设置 Package.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.ThrowIfInStreamingCreationString">
            <summary>设置 Package.ThrowIfInStreamingCreation(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.ThrowIfNotInStreamingCreationString">
            <summary>设置 Package.ThrowIfNotInStreamingCreation(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.ThrowIfReadOnly">
            <summary>设置 Package.ThrowIfReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.AllInstances.ThrowIfWriteOnly">
            <summary>设置 Package.ThrowIfWriteOnly() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackage.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.Close">
            <summary>设置 Package.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ClosePackageRelationships">
            <summary>设置 Package.ClosePackageRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ConstructorFileAccess">
            <summary>设置 Package.Package(FileAccess openFileAccess) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ConstructorFileAccessBoolean">
            <summary>设置 Package.Package(FileAccess openFileAccess, Boolean streaming) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.CreatePartUriString">
            <summary>设置 Package.CreatePart(Uri partUri, String contentType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.CreatePartUriStringCompressionOption">
            <summary>设置 Package.CreatePart(Uri partUri, String contentType, CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.CreateRelationshipUriTargetModeString">
            <summary>设置 Package.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.CreateRelationshipUriTargetModeStringString">
            <summary>设置 Package.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType, String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.DeletePartUri">
            <summary>设置 Package.DeletePart(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.DeleteRelationshipString">
            <summary>设置 Package.DeleteRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.DisposeBoolean">
            <summary>设置 Package.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.FileOpenAccessGet">
            <summary>设置 Package.get_FileOpenAccess() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.Flush">
            <summary>设置 Package.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.FlushPackageRelationships">
            <summary>设置 Package.FlushPackageRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.GetPartUri">
            <summary>设置 Package.GetPart(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.GetParts">
            <summary>设置 Package.GetParts() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.GetRelationshipString">
            <summary>设置 Package.GetRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.GetRelationships">
            <summary>设置 Package.GetRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.GetRelationshipsByTypeString">
            <summary>设置 Package.GetRelationshipsByType(String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.InStreamingCreationGet">
            <summary>设置 Package.get_InStreamingCreation() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStream">
            <summary>设置 Package.Open(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStreamFileMode">
            <summary>设置 Package.Open(Stream stream, FileMode packageMode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStreamFileModeFileAccess">
            <summary>设置 Package.Open(Stream stream, FileMode packageMode, FileAccess packageAccess) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStreamFileModeFileAccessBoolean">
            <summary>设置 Package.Open(Stream stream, FileMode packageMode, FileAccess packageAccess, Boolean streaming) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenString">
            <summary>设置 Package.Open(String path) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStringFileMode">
            <summary>设置 Package.Open(String path, FileMode packageMode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStringFileModeFileAccess">
            <summary>设置 Package.Open(String path, FileMode packageMode, FileAccess packageAccess) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStringFileModeFileAccessFileShare">
            <summary>设置 Package.Open(String path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.OpenStringFileModeFileAccessFileShareBoolean">
            <summary>设置 Package.Open(String path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare, Boolean streaming) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.PackagePropertiesGet">
            <summary>设置 Package.get_PackageProperties() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.PartExistsUri">
            <summary>设置 Package.PartExists(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.RelationshipExistsString">
            <summary>设置 Package.RelationshipExists(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.StaticConstructor">
            <summary>设置 Package.Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.SystemIDisposableDispose">
            <summary>设置 Package.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfCompressionOptionInvalidCompressionOption">
            <summary>设置 Package.ThrowIfCompressionOptionInvalid(CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfFileAccessInvalidFileAccess">
            <summary>设置 Package.ThrowIfFileAccessInvalid(FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfFileModeInvalidFileMode">
            <summary>设置 Package.ThrowIfFileModeInvalid(FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfInStreamingCreationString">
            <summary>设置 Package.ThrowIfInStreamingCreation(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfNotInStreamingCreationString">
            <summary>设置 Package.ThrowIfNotInStreamingCreation(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfReadOnly">
            <summary>设置 Package.ThrowIfReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackage.ThrowIfWriteOnly">
            <summary>设置 Package.ThrowIfWriteOnly() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageDigitalSignature">
            <summary>System.IO.Packaging.PackageDigitalSignature 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.#ctor(System.IO.Packaging.PackageDigitalSignature)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.CertificateEmbeddingOptionGet">
            <summary>设置 PackageDigitalSignature.get_CertificateEmbeddingOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.GetPartTransformListUri">
            <summary>设置 PackageDigitalSignature.GetPartTransformList(Uri partName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.Invalidate">
            <summary>设置 PackageDigitalSignature.Invalidate() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignatureGet">
            <summary>设置 PackageDigitalSignature.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignaturePartGet">
            <summary>设置 PackageDigitalSignature.get_SignaturePart() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignatureSetSignature">
            <summary>设置 PackageDigitalSignature.set_Signature(Signature value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignatureTypeGet">
            <summary>设置 PackageDigitalSignature.get_SignatureType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignatureValueGet">
            <summary>设置 PackageDigitalSignature.get_SignatureValue() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignedPartsGet">
            <summary>设置 PackageDigitalSignature.get_SignedParts() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SignedRelationshipSelectorsGet">
            <summary>设置 PackageDigitalSignature.get_SignedRelationshipSelectors() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.SigningTimeGet">
            <summary>设置 PackageDigitalSignature.get_SigningTime() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.TimeFormatGet">
            <summary>设置 PackageDigitalSignature.get_TimeFormat() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.AllInstances.Verify">
            <summary>设置 PackageDigitalSignature.Verify() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.CertificateEmbeddingOptionGet">
            <summary>设置 PackageDigitalSignature.get_CertificateEmbeddingOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.ConstructorPackageDigitalSignatureManagerPackagePart">
            <summary>设置 PackageDigitalSignature.PackageDigitalSignature(PackageDigitalSignatureManager manager, PackagePart signaturePart) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.GetPartTransformListUri">
            <summary>设置 PackageDigitalSignature.GetPartTransformList(Uri partName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.Invalidate">
            <summary>设置 PackageDigitalSignature.Invalidate() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignatureGet">
            <summary>设置 PackageDigitalSignature.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignaturePartGet">
            <summary>设置 PackageDigitalSignature.get_SignaturePart() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignatureSetSignature">
            <summary>设置 PackageDigitalSignature.set_Signature(Signature value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignatureTypeGet">
            <summary>设置 PackageDigitalSignature.get_SignatureType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignatureValueGet">
            <summary>设置 PackageDigitalSignature.get_SignatureValue() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignedPartsGet">
            <summary>设置 PackageDigitalSignature.get_SignedParts() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SignedRelationshipSelectorsGet">
            <summary>设置 PackageDigitalSignature.get_SignedRelationshipSelectors() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.SigningTimeGet">
            <summary>设置 PackageDigitalSignature.get_SigningTime() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.TimeFormatGet">
            <summary>设置 PackageDigitalSignature.get_TimeFormat() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignature.Verify">
            <summary>设置 PackageDigitalSignature.Verify() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager">
            <summary>System.IO.Packaging.PackageDigitalSignatureManager 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.#ctor(System.IO.Packaging.PackageDigitalSignatureManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.CertificateOptionGet">
            <summary>设置 PackageDigitalSignatureManager.get_CertificateOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.CertificateOptionSetCertificateEmbeddingOption">
            <summary>设置 PackageDigitalSignatureManager.set_CertificateOption(CertificateEmbeddingOption value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.Countersign">
            <summary>设置 PackageDigitalSignatureManager.Countersign() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.GetSignatureUri">
            <summary>设置 PackageDigitalSignatureManager.GetSignature(Uri signatureUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.HashAlgorithmGet">
            <summary>设置 PackageDigitalSignatureManager.get_HashAlgorithm() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.HashAlgorithmSetString">
            <summary>设置 PackageDigitalSignatureManager.set_HashAlgorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.InvalidSignatureEventAddInvalidSignatureEventHandler">
            <summary>设置 PackageDigitalSignatureManager.add_InvalidSignatureEvent(InvalidSignatureEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.InvalidSignatureEventRemoveInvalidSignatureEventHandler">
            <summary>设置 PackageDigitalSignatureManager.remove_InvalidSignatureEvent(InvalidSignatureEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.IsSignedGet">
            <summary>设置 PackageDigitalSignatureManager.get_IsSigned() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.PackageGet">
            <summary>设置 PackageDigitalSignatureManager.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.ParentWindowGet">
            <summary>设置 PackageDigitalSignatureManager.get_ParentWindow() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.ParentWindowSetIntPtr">
            <summary>设置 PackageDigitalSignatureManager.set_ParentWindow(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.RemoveAllSignatures">
            <summary>设置 PackageDigitalSignatureManager.RemoveAllSignatures() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.RemoveSignatureUri">
            <summary>设置 PackageDigitalSignatureManager.RemoveSignature(Uri signatureUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.SignIEnumerableOfUri">
            <summary>设置 PackageDigitalSignatureManager.Sign(IEnumerable`1&lt;Uri&gt; parts) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.SignatureOriginGet">
            <summary>设置 PackageDigitalSignatureManager.get_SignatureOrigin() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.SignaturesGet">
            <summary>设置 PackageDigitalSignatureManager.get_Signatures() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.TimeFormatGet">
            <summary>设置 PackageDigitalSignatureManager.get_TimeFormat() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.TimeFormatSetString">
            <summary>设置 PackageDigitalSignatureManager.set_TimeFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.TransformMappingGet">
            <summary>设置 PackageDigitalSignatureManager.get_TransformMapping() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.AllInstances.VerifySignaturesBoolean">
            <summary>设置 PackageDigitalSignatureManager.VerifySignatures(Boolean exitOnFailure) 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.CertificateOptionGet">
            <summary>设置 PackageDigitalSignatureManager.get_CertificateOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.CertificateOptionSetCertificateEmbeddingOption">
            <summary>设置 PackageDigitalSignatureManager.set_CertificateOption(CertificateEmbeddingOption value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.ConstructorPackage">
            <summary>设置 PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package package) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.Countersign">
            <summary>设置 PackageDigitalSignatureManager.Countersign() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.DefaultHashAlgorithmGet">
            <summary>设置 PackageDigitalSignatureManager.get_DefaultHashAlgorithm() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.GetSignatureUri">
            <summary>设置 PackageDigitalSignatureManager.GetSignature(Uri signatureUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.HashAlgorithmGet">
            <summary>设置 PackageDigitalSignatureManager.get_HashAlgorithm() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.HashAlgorithmSetString">
            <summary>设置 PackageDigitalSignatureManager.set_HashAlgorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.InvalidSignatureEventAddInvalidSignatureEventHandler">
            <summary>设置 PackageDigitalSignatureManager.add_InvalidSignatureEvent(InvalidSignatureEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.InvalidSignatureEventRemoveInvalidSignatureEventHandler">
            <summary>设置 PackageDigitalSignatureManager.remove_InvalidSignatureEvent(InvalidSignatureEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.IsSignedGet">
            <summary>设置 PackageDigitalSignatureManager.get_IsSigned() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.PackageGet">
            <summary>设置 PackageDigitalSignatureManager.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.ParentWindowGet">
            <summary>设置 PackageDigitalSignatureManager.get_ParentWindow() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.ParentWindowSetIntPtr">
            <summary>设置 PackageDigitalSignatureManager.set_ParentWindow(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.RemoveAllSignatures">
            <summary>设置 PackageDigitalSignatureManager.RemoveAllSignatures() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.RemoveSignatureUri">
            <summary>设置 PackageDigitalSignatureManager.RemoveSignature(Uri signatureUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.SignIEnumerableOfUri">
            <summary>设置 PackageDigitalSignatureManager.Sign(IEnumerable`1&lt;Uri&gt; parts) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.SignatureOriginGet">
            <summary>设置 PackageDigitalSignatureManager.get_SignatureOrigin() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.SignatureOriginRelationshipTypeGet">
            <summary>设置 PackageDigitalSignatureManager.get_SignatureOriginRelationshipType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.SignaturesGet">
            <summary>设置 PackageDigitalSignatureManager.get_Signatures() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.StaticConstructor">
            <summary>设置 PackageDigitalSignatureManager.PackageDigitalSignatureManager() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.TimeFormatGet">
            <summary>设置 PackageDigitalSignatureManager.get_TimeFormat() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.TimeFormatSetString">
            <summary>设置 PackageDigitalSignatureManager.set_TimeFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.TransformMappingGet">
            <summary>设置 PackageDigitalSignatureManager.get_TransformMapping() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageDigitalSignatureManager.VerifySignaturesBoolean">
            <summary>设置 PackageDigitalSignatureManager.VerifySignatures(Boolean exitOnFailure) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackagePart">
            <summary>System.IO.Packaging.PackagePart 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePart.#ctor(System.IO.Packaging.PackagePart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.ClearRelationships">
            <summary>设置 PackagePart.ClearRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.Close">
            <summary>设置 PackagePart.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.CloseRelationships">
            <summary>设置 PackagePart.CloseRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.CompressionOptionGet">
            <summary>设置 PackagePart.get_CompressionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.ContentTypeGet">
            <summary>设置 PackagePart.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.CreateRelationshipUriTargetModeString">
            <summary>设置 PackagePart.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.CreateRelationshipUriTargetModeStringString">
            <summary>设置 PackagePart.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType, String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.DeleteRelationshipString">
            <summary>设置 PackagePart.DeleteRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.Flush">
            <summary>设置 PackagePart.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.FlushRelationships">
            <summary>设置 PackagePart.FlushRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetContentTypeCore">
            <summary>设置 PackagePart.GetContentTypeCore() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetRelationshipString">
            <summary>设置 PackagePart.GetRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetRelationships">
            <summary>设置 PackagePart.GetRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetRelationshipsByTypeString">
            <summary>设置 PackagePart.GetRelationshipsByType(String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetStream">
            <summary>设置 PackagePart.GetStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetStreamFileMode">
            <summary>设置 PackagePart.GetStream(FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.GetStreamFileModeFileAccess">
            <summary>设置 PackagePart.GetStream(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.IsClosedGet">
            <summary>设置 PackagePart.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.IsDeletedGet">
            <summary>设置 PackagePart.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.IsDeletedSetBoolean">
            <summary>设置 PackagePart.set_IsDeleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.IsRelationshipPartGet">
            <summary>设置 PackagePart.get_IsRelationshipPart() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.PackageGet">
            <summary>设置 PackagePart.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.RelationshipExistsString">
            <summary>设置 PackagePart.RelationshipExists(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.AllInstances.UriGet">
            <summary>设置 PackagePart.get_Uri() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.ClearRelationships">
            <summary>设置 PackagePart.ClearRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.Close">
            <summary>设置 PackagePart.Close() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.CloseRelationships">
            <summary>设置 PackagePart.CloseRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.CompressionOptionGet">
            <summary>设置 PackagePart.get_CompressionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.ConstructorPackageUri">
            <summary>设置 PackagePart.PackagePart(Package package, Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.ConstructorPackageUriString">
            <summary>设置 PackagePart.PackagePart(Package package, Uri partUri, String contentType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.ConstructorPackageUriStringCompressionOption">
            <summary>设置 PackagePart.PackagePart(Package package, Uri partUri, String contentType, CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.ContentTypeGet">
            <summary>设置 PackagePart.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.CreateRelationshipUriTargetModeString">
            <summary>设置 PackagePart.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.CreateRelationshipUriTargetModeStringString">
            <summary>设置 PackagePart.CreateRelationship(Uri targetUri, TargetMode targetMode, String relationshipType, String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.DeleteRelationshipString">
            <summary>设置 PackagePart.DeleteRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.Flush">
            <summary>设置 PackagePart.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.FlushRelationships">
            <summary>设置 PackagePart.FlushRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetContentTypeCore">
            <summary>设置 PackagePart.GetContentTypeCore() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetRelationshipString">
            <summary>设置 PackagePart.GetRelationship(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetRelationships">
            <summary>设置 PackagePart.GetRelationships() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetRelationshipsByTypeString">
            <summary>设置 PackagePart.GetRelationshipsByType(String relationshipType) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetStream">
            <summary>设置 PackagePart.GetStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetStreamFileMode">
            <summary>设置 PackagePart.GetStream(FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.GetStreamFileModeFileAccess">
            <summary>设置 PackagePart.GetStream(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.IsClosedGet">
            <summary>设置 PackagePart.get_IsClosed() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.IsDeletedGet">
            <summary>设置 PackagePart.get_IsDeleted() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.IsDeletedSetBoolean">
            <summary>设置 PackagePart.set_IsDeleted(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.IsRelationshipPartGet">
            <summary>设置 PackagePart.get_IsRelationshipPart() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.PackageGet">
            <summary>设置 PackagePart.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.RelationshipExistsString">
            <summary>设置 PackagePart.RelationshipExists(String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePart.UriGet">
            <summary>设置 PackagePart.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackagePartCollection">
            <summary>System.IO.Packaging.PackagePartCollection 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.#ctor(System.IO.Packaging.PackagePartCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackagePartCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.AllInstances.GetEnumerator">
            <summary>设置 PackagePartCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.AllInstances.SystemCollectionsGenericIEnumerableSystemIOPackagingPackagePartGetEnumerator">
            <summary>设置 PackagePartCollection.System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackagePart&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PackagePartCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackagePartCollection.Bind(System.Collections.Generic.IEnumerable{System.IO.Packaging.PackagePart})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.GetEnumerator">
            <summary>设置 PackagePartCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.SystemCollectionsGenericIEnumerableSystemIOPackagingPackagePartGetEnumerator">
            <summary>设置 PackagePartCollection.System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackagePart&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackagePartCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PackagePartCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageProperties">
            <summary>System.IO.Packaging.PackageProperties 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageProperties.#ctor(System.IO.Packaging.PackageProperties)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageProperties.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.AllInstances.Dispose">
            <summary>设置 PackageProperties.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.AllInstances.DisposeBoolean">
            <summary>设置 PackageProperties.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageProperties.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageProperties.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageProperties.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.Constructor">
            <summary>设置 PackageProperties.PackageProperties() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.Dispose">
            <summary>设置 PackageProperties.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageProperties.DisposeBoolean">
            <summary>设置 PackageProperties.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationship">
            <summary>System.IO.Packaging.PackageRelationship 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationship.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationship.#ctor(System.IO.Packaging.PackageRelationship)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.IdGet">
            <summary>设置 PackageRelationship.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.PackageGet">
            <summary>设置 PackageRelationship.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.RelationshipTypeGet">
            <summary>设置 PackageRelationship.get_RelationshipType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.SavedGet">
            <summary>设置 PackageRelationship.get_Saved() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.SavedSetBoolean">
            <summary>设置 PackageRelationship.set_Saved(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.SourceUriGet">
            <summary>设置 PackageRelationship.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.TargetModeGet">
            <summary>设置 PackageRelationship.get_TargetMode() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.AllInstances.TargetUriGet">
            <summary>设置 PackageRelationship.get_TargetUri() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationship.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationship.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.ConstructorPackagePackagePartUriTargetModeStringString">
            <summary>设置 PackageRelationship.PackageRelationship(Package package, PackagePart sourcePart, Uri targetUri, TargetMode targetMode, String relationshipType, String id) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.ContainerRelationshipPartNameGet">
            <summary>设置 PackageRelationship.get_ContainerRelationshipPartName() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.IdGet">
            <summary>设置 PackageRelationship.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.PackageGet">
            <summary>设置 PackageRelationship.get_Package() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.RelationshipTypeGet">
            <summary>设置 PackageRelationship.get_RelationshipType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.SavedGet">
            <summary>设置 PackageRelationship.get_Saved() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.SavedSetBoolean">
            <summary>设置 PackageRelationship.set_Saved(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.SourceUriGet">
            <summary>设置 PackageRelationship.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.StaticConstructor">
            <summary>设置 PackageRelationship.PackageRelationship() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.TargetModeGet">
            <summary>设置 PackageRelationship.get_TargetMode() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationship.TargetUriGet">
            <summary>设置 PackageRelationship.get_TargetUri() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection">
            <summary>System.IO.Packaging.PackageRelationshipCollection 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.#ctor(System.IO.Packaging.PackageRelationshipCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.AllInstances.GetEnumerator">
            <summary>设置 PackageRelationshipCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.Bind(System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationship})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.GetEnumerator">
            <summary>设置 PackageRelationshipCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector">
            <summary>System.IO.Packaging.PackageRelationshipSelector 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.#ctor(System.IO.Packaging.PackageRelationshipSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.AllInstances.SelectPackage">
            <summary>设置 PackageRelationshipSelector.Select(Package package) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.AllInstances.SelectionCriteriaGet">
            <summary>设置 PackageRelationshipSelector.get_SelectionCriteria() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.AllInstances.SelectorTypeGet">
            <summary>设置 PackageRelationshipSelector.get_SelectorType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.AllInstances.SourceUriGet">
            <summary>设置 PackageRelationshipSelector.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.ConstructorUriPackageRelationshipSelectorTypeString">
            <summary>设置 PackageRelationshipSelector.PackageRelationshipSelector(Uri sourceUri, PackageRelationshipSelectorType selectorType, String selectionCriteria) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.SelectPackage">
            <summary>设置 PackageRelationshipSelector.Select(Package package) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.SelectionCriteriaGet">
            <summary>设置 PackageRelationshipSelector.get_SelectionCriteria() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.SelectorTypeGet">
            <summary>设置 PackageRelationshipSelector.get_SelectorType() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimPackageRelationshipSelector.SourceUriGet">
            <summary>设置 PackageRelationshipSelector.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimRightsManagementInformation">
            <summary>System.IO.Packaging.RightsManagementInformation 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimRightsManagementInformation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimRightsManagementInformation.#ctor(System.IO.Packaging.RightsManagementInformation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.CryptoProviderGet">
            <summary>设置 RightsManagementInformation.get_CryptoProvider() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.CryptoProviderSetCryptoProvider">
            <summary>设置 RightsManagementInformation.set_CryptoProvider(CryptoProvider value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.DeleteUseLicenseContentUser">
            <summary>设置 RightsManagementInformation.DeleteUseLicense(ContentUser userKey) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.GetEmbeddedUseLicenses">
            <summary>设置 RightsManagementInformation.GetEmbeddedUseLicenses() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.LoadPublishLicense">
            <summary>设置 RightsManagementInformation.LoadPublishLicense() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.LoadUseLicenseContentUser">
            <summary>设置 RightsManagementInformation.LoadUseLicense(ContentUser userKey) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.SavePublishLicensePublishLicense">
            <summary>设置 RightsManagementInformation.SavePublishLicense(PublishLicense publishLicense) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.AllInstances.SaveUseLicenseContentUserUseLicense">
            <summary>设置 RightsManagementInformation.SaveUseLicense(ContentUser userKey, UseLicense useLicense) 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimRightsManagementInformation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimRightsManagementInformation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.CryptoProviderGet">
            <summary>设置 RightsManagementInformation.get_CryptoProvider() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.CryptoProviderSetCryptoProvider">
            <summary>设置 RightsManagementInformation.set_CryptoProvider(CryptoProvider value) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.DeleteUseLicenseContentUser">
            <summary>设置 RightsManagementInformation.DeleteUseLicense(ContentUser userKey) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.GetEmbeddedUseLicenses">
            <summary>设置 RightsManagementInformation.GetEmbeddedUseLicenses() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.LoadPublishLicense">
            <summary>设置 RightsManagementInformation.LoadPublishLicense() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.LoadUseLicenseContentUser">
            <summary>设置 RightsManagementInformation.LoadUseLicense(ContentUser userKey) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.SavePublishLicensePublishLicense">
            <summary>设置 RightsManagementInformation.SavePublishLicense(PublishLicense publishLicense) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimRightsManagementInformation.SaveUseLicenseContentUserUseLicense">
            <summary>设置 RightsManagementInformation.SaveUseLicense(ContentUser userKey, UseLicense useLicense) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs">
            <summary>System.IO.Packaging.SignatureVerificationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.#ctor(System.IO.Packaging.SignatureVerificationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.AllInstances.SignatureGet">
            <summary>设置 SignatureVerificationEventArgs.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.AllInstances.VerifyResultGet">
            <summary>设置 SignatureVerificationEventArgs.get_VerifyResult() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.ConstructorPackageDigitalSignatureVerifyResult">
            <summary>设置 SignatureVerificationEventArgs.SignatureVerificationEventArgs(PackageDigitalSignature signature, VerifyResult result) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.SignatureGet">
            <summary>设置 SignatureVerificationEventArgs.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimSignatureVerificationEventArgs.VerifyResultGet">
            <summary>设置 SignatureVerificationEventArgs.get_VerifyResult() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimStorageInfo">
            <summary>System.IO.Packaging.StorageInfo 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStorageInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStorageInfo.#ctor(System.IO.Packaging.StorageInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.BuildFullNameFromParentName">
            <summary>设置 StorageInfo.BuildFullNameFromParentName() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.BuildFullNameInternalFromParentNameInternal">
            <summary>设置 StorageInfo.BuildFullNameInternalFromParentNameInternal() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.CheckDisposedStatus">
            <summary>设置 StorageInfo.CheckDisposedStatus() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.Create">
            <summary>设置 StorageInfo.Create() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.CreateStreamString">
            <summary>设置 StorageInfo.CreateStream(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.CreateStreamStringCompressionOptionEncryptionOption">
            <summary>设置 StorageInfo.CreateStream(String name, CompressionOption compressionOption, EncryptionOption encryptionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.CreateSubStorageString">
            <summary>设置 StorageInfo.CreateSubStorage(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.DeleteBooleanString">
            <summary>设置 StorageInfo.Delete(Boolean recursive, String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.DeleteStreamString">
            <summary>设置 StorageInfo.DeleteStream(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.DeleteSubStorageString">
            <summary>设置 StorageInfo.DeleteSubStorage(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.DestroyElementString">
            <summary>设置 StorageInfo.DestroyElement(String elementNameInternal) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.ExistsGet">
            <summary>设置 StorageInfo.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.FindStatStgOfNameStringSTATSTGOut">
            <summary>设置 StorageInfo.FindStatStgOfName(String streamName, STATSTG&amp; statStg) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.FullNameInternalGet">
            <summary>设置 StorageInfo.get_FullNameInternal() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.GetStreamInfoString">
            <summary>设置 StorageInfo.GetStreamInfo(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.GetStreams">
            <summary>设置 StorageInfo.GetStreams() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.GetSubStorageInfoString">
            <summary>设置 StorageInfo.GetSubStorageInfo(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.GetSubStorages">
            <summary>设置 StorageInfo.GetSubStorages() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.InvalidateEnumerators">
            <summary>设置 StorageInfo.InvalidateEnumerators() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.NameGet">
            <summary>设置 StorageInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.RemoveSubStorageEntryFromDataSpaceMapStorageInfo">
            <summary>设置 StorageInfo.RemoveSubStorageEntryFromDataSpaceMap(StorageInfo storageInfo) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.StorageDisposedGet">
            <summary>设置 StorageInfo.get_StorageDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.StorageIsEmpty">
            <summary>设置 StorageInfo.StorageIsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.StreamExistsString">
            <summary>设置 StorageInfo.StreamExists(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.AllInstances.SubStorageExistsString">
            <summary>设置 StorageInfo.SubStorageExists(String name) 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStorageInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStorageInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.BuildFullNameFromParentName">
            <summary>设置 StorageInfo.BuildFullNameFromParentName() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.BuildFullNameInternalFromParentNameInternal">
            <summary>设置 StorageInfo.BuildFullNameInternalFromParentNameInternal() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.CheckDisposedStatus">
            <summary>设置 StorageInfo.CheckDisposedStatus() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.ConstructorStorageInfoString">
            <summary>设置 StorageInfo.StorageInfo(StorageInfo parent, String fileName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.Create">
            <summary>设置 StorageInfo.Create() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.CreateStreamString">
            <summary>设置 StorageInfo.CreateStream(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.CreateStreamStringCompressionOptionEncryptionOption">
            <summary>设置 StorageInfo.CreateStream(String name, CompressionOption compressionOption, EncryptionOption encryptionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.CreateSubStorageString">
            <summary>设置 StorageInfo.CreateSubStorage(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.DeleteBooleanString">
            <summary>设置 StorageInfo.Delete(Boolean recursive, String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.DeleteStreamString">
            <summary>设置 StorageInfo.DeleteStream(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.DeleteSubStorageString">
            <summary>设置 StorageInfo.DeleteSubStorage(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.DestroyElementString">
            <summary>设置 StorageInfo.DestroyElement(String elementNameInternal) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.ExistsGet">
            <summary>设置 StorageInfo.get_Exists() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.FindStatStgOfNameStringSTATSTGOut">
            <summary>设置 StorageInfo.FindStatStgOfName(String streamName, STATSTG&amp; statStg) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.FullNameInternalGet">
            <summary>设置 StorageInfo.get_FullNameInternal() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.GetStreamInfoString">
            <summary>设置 StorageInfo.GetStreamInfo(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.GetStreams">
            <summary>设置 StorageInfo.GetStreams() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.GetSubStorageInfoString">
            <summary>设置 StorageInfo.GetSubStorageInfo(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.GetSubStorages">
            <summary>设置 StorageInfo.GetSubStorages() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.InvalidateEnumerators">
            <summary>设置 StorageInfo.InvalidateEnumerators() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.NameGet">
            <summary>设置 StorageInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.RemoveSubStorageEntryFromDataSpaceMapStorageInfo">
            <summary>设置 StorageInfo.RemoveSubStorageEntryFromDataSpaceMap(StorageInfo storageInfo) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.StaticConstructor">
            <summary>设置 StorageInfo.StorageInfo() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.StorageDisposedGet">
            <summary>设置 StorageInfo.get_StorageDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.StorageIsEmpty">
            <summary>设置 StorageInfo.StorageIsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.StreamExistsString">
            <summary>设置 StorageInfo.StreamExists(String name) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStorageInfo.SubStorageExistsString">
            <summary>设置 StorageInfo.SubStorageExists(String name) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimStreamInfo">
            <summary>System.IO.Packaging.StreamInfo 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStreamInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStreamInfo.#ctor(System.IO.Packaging.StreamInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.CheckAccessModeInt32">
            <summary>设置 StreamInfo.CheckAccessMode(Int32 grfMode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.CheckDisposedStatus">
            <summary>设置 StreamInfo.CheckDisposedStatus() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.CompressionOptionGet">
            <summary>设置 StreamInfo.get_CompressionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.Create">
            <summary>设置 StreamInfo.Create() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.CreateFileModeFileAccessString">
            <summary>设置 StreamInfo.Create(FileMode mode, FileAccess access, String dataSpace) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.CreateString">
            <summary>设置 StreamInfo.Create(String dataSpaceLabel) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.Delete">
            <summary>设置 StreamInfo.Delete() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.EncryptionOptionGet">
            <summary>设置 StreamInfo.get_EncryptionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.GetStream">
            <summary>设置 StreamInfo.GetStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.GetStreamFileMode">
            <summary>设置 StreamInfo.GetStream(FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.GetStreamFileModeFileAccess">
            <summary>设置 StreamInfo.GetStream(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.InternalExists">
            <summary>设置 StreamInfo.InternalExists() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.NameGet">
            <summary>设置 StreamInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.AllInstances.StreamInfoDisposedGet">
            <summary>设置 StreamInfo.get_StreamInfoDisposed() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStreamInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimStreamInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.CheckAccessModeInt32">
            <summary>设置 StreamInfo.CheckAccessMode(Int32 grfMode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.CheckDisposedStatus">
            <summary>设置 StreamInfo.CheckDisposedStatus() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.CompressionOptionGet">
            <summary>设置 StreamInfo.get_CompressionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.ConstructorStorageInfoString">
            <summary>设置 StreamInfo.StreamInfo(StorageInfo parent, String streamName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.ConstructorStorageInfoStringCompressionOptionEncryptionOption">
            <summary>设置 StreamInfo.StreamInfo(StorageInfo parent, String streamName, CompressionOption compressionOption, EncryptionOption encryptionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.Create">
            <summary>设置 StreamInfo.Create() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.CreateFileModeFileAccessString">
            <summary>设置 StreamInfo.Create(FileMode mode, FileAccess access, String dataSpace) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.CreateString">
            <summary>设置 StreamInfo.Create(String dataSpaceLabel) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.Delete">
            <summary>设置 StreamInfo.Delete() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.EncryptionOptionGet">
            <summary>设置 StreamInfo.get_EncryptionOption() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.GetStream">
            <summary>设置 StreamInfo.GetStream() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.GetStreamFileMode">
            <summary>设置 StreamInfo.GetStream(FileMode mode) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.GetStreamFileModeFileAccess">
            <summary>设置 StreamInfo.GetStream(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.InternalExists">
            <summary>设置 StreamInfo.InternalExists() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.NameGet">
            <summary>设置 StreamInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimStreamInfo.StreamInfoDisposedGet">
            <summary>设置 StreamInfo.get_StreamInfoDisposed() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimZipPackage">
            <summary>System.IO.Packaging.ZipPackage 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackage.#ctor(System.IO.Packaging.ZipPackage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.CreatePartCoreUriStringCompressionOption">
            <summary>设置 ZipPackage.CreatePartCore(Uri partUri, String contentType, CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.DeletePartCoreUri">
            <summary>设置 ZipPackage.DeletePartCore(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.DisposeBoolean">
            <summary>设置 ZipPackage.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.FlushCore">
            <summary>设置 ZipPackage.FlushCore() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.GetPartCoreUri">
            <summary>设置 ZipPackage.GetPartCore(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.AllInstances.GetPartsCore">
            <summary>设置 ZipPackage.GetPartsCore() 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackage.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.ConstructorStreamFileModeFileAccessBoolean">
            <summary>设置 ZipPackage.ZipPackage(Stream s, FileMode mode, FileAccess access, Boolean streaming) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.ConstructorStringFileModeFileAccessFileShareBoolean">
            <summary>设置 ZipPackage.ZipPackage(String path, FileMode mode, FileAccess access, FileShare share, Boolean streaming) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.CreatePartCoreUriStringCompressionOption">
            <summary>设置 ZipPackage.CreatePartCore(Uri partUri, String contentType, CompressionOption compressionOption) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.DeletePartCoreUri">
            <summary>设置 ZipPackage.DeletePartCore(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.DisposeBoolean">
            <summary>设置 ZipPackage.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.FlushCore">
            <summary>设置 ZipPackage.FlushCore() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.GetOpcNameFromZipItemNameString">
            <summary>设置 ZipPackage.GetOpcNameFromZipItemName(String zipItemName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.GetPartCoreUri">
            <summary>设置 ZipPackage.GetPartCore(Uri partUri) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.GetPartsCore">
            <summary>设置 ZipPackage.GetPartsCore() 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.GetZipItemNameFromOpcNameString">
            <summary>设置 ZipPackage.GetZipItemNameFromOpcName(String opcName) 的 填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackage.StaticConstructor">
            <summary>设置 ZipPackage.ZipPackage() 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimZipPackagePart">
            <summary>System.IO.Packaging.ZipPackagePart 的填充码类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackagePart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackagePart.#ctor(System.IO.Packaging.ZipPackagePart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.ShimZipPackagePart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackagePart.AllInstances.GetStreamCoreFileModeFileAccess">
            <summary>设置 ZipPackagePart.GetStreamCore(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackagePart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.ShimZipPackagePart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackagePart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.ShimZipPackagePart.GetStreamCoreFileModeFileAccess">
            <summary>设置 ZipPackagePart.GetStreamCore(FileMode mode, FileAccess access) 的 填充码</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.StubPackage">
            <summary>System.IO.Packaging.Package 的存根类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.#ctor(System.IO.FileAccess)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.#ctor(System.IO.FileAccess,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
            <summary>设置 Package.CreatePartCore(Uri partUri, String contentType, CompressionOption compressionOption) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.CreatePartCoreUriStringCompressionOption">
            <summary>设置 Package.CreatePartCore(Uri partUri, String contentType, CompressionOption compressionOption) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.DeletePartCore(System.Uri)">
            <summary>设置 Package.DeletePartCore(Uri partUri) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.DeletePartCoreUri">
            <summary>设置 Package.DeletePartCore(Uri partUri) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.Dispose(System.Boolean)">
            <summary>设置 Package.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.DisposeBoolean">
            <summary>设置 Package.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.FlushCore">
            <summary>设置 Package.FlushCore() 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.FlushCore01">
            <summary>设置 Package.FlushCore() 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.GetPartCore(System.Uri)">
            <summary>设置 Package.GetPartCore(Uri partUri) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.GetPartCoreUri">
            <summary>设置 Package.GetPartCore(Uri partUri) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.GetPartsCore">
            <summary>设置 Package.GetPartsCore() 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.GetPartsCore01">
            <summary>设置 Package.GetPartsCore() 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.InitializeStub">
            <summary>初始化 type StubPackage 的新实例</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackage.PartExists(System.Uri)">
            <summary>设置 Package.PartExists(Uri partUri) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackage.PartExistsUri">
            <summary>设置 Package.PartExists(Uri partUri) 的 stub</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.StubPackagePart">
            <summary>System.IO.Packaging.PackagePart 的存根类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackagePart.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.GetContentTypeCore">
            <summary>设置 PackagePart.GetContentTypeCore() 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackagePart.GetContentTypeCore01">
            <summary>设置 PackagePart.GetContentTypeCore() 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
            <summary>设置 PackagePart.GetStreamCore(FileMode mode, FileAccess access) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackagePart.GetStreamCoreFileModeFileAccess">
            <summary>设置 PackagePart.GetStreamCore(FileMode mode, FileAccess access) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackagePart.InitializeStub">
            <summary>初始化 type StubPackagePart 的新实例</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackagePart.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackagePart.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.IO.Packaging.Fakes.StubPackageProperties">
            <summary>System.IO.Packaging.PackageProperties 的存根类型</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToCategory">
            <summary>附加委托以将 StubPackageProperties.Category 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToContentStatus">
            <summary>附加委托以将 StubPackageProperties.ContentStatus 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToContentType">
            <summary>附加委托以将 StubPackageProperties.ContentType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToCreated">
            <summary>附加委托以将 StubPackageProperties.Created 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToCreator">
            <summary>附加委托以将 StubPackageProperties.Creator 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToDescription">
            <summary>附加委托以将 StubPackageProperties.Description 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToIdentifier">
            <summary>附加委托以将 StubPackageProperties.Identifier 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToKeywords">
            <summary>附加委托以将 StubPackageProperties.Keywords 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToLanguage">
            <summary>附加委托以将 StubPackageProperties.Language 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToLastModifiedBy">
            <summary>附加委托以将 StubPackageProperties.LastModifiedBy 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToLastPrinted">
            <summary>附加委托以将 StubPackageProperties.LastPrinted 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToModified">
            <summary>附加委托以将 StubPackageProperties.Modified 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToRevision">
            <summary>附加委托以将 StubPackageProperties.Revision 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToSubject">
            <summary>附加委托以将 StubPackageProperties.Subject 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToTitle">
            <summary>附加委托以将 StubPackageProperties.Title 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.AttachBackingFieldToVersion">
            <summary>附加委托以将 StubPackageProperties.Version 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Category">
            <summary>设置 PackageProperties.get_Category() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CategoryGet">
            <summary>设置 PackageProperties.get_Category() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CategorySetString">
            <summary>设置 PackageProperties.set_Category(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.ContentStatus">
            <summary>设置 PackageProperties.get_ContentStatus() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ContentStatusGet">
            <summary>设置 PackageProperties.get_ContentStatus() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ContentStatusSetString">
            <summary>设置 PackageProperties.set_ContentStatus(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.ContentType">
            <summary>设置 PackageProperties.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ContentTypeGet">
            <summary>设置 PackageProperties.get_ContentType() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ContentTypeSetString">
            <summary>设置 PackageProperties.set_ContentType(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Created">
            <summary>设置 PackageProperties.get_Created() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CreatedGet">
            <summary>设置 PackageProperties.get_Created() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CreatedSetNullableOfDateTime">
            <summary>设置 PackageProperties.set_Created(Nullable`1&lt;DateTime&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Creator">
            <summary>设置 PackageProperties.get_Creator() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CreatorGet">
            <summary>设置 PackageProperties.get_Creator() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.CreatorSetString">
            <summary>设置 PackageProperties.set_Creator(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Description">
            <summary>设置 PackageProperties.get_Description() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.DescriptionGet">
            <summary>设置 PackageProperties.get_Description() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.DescriptionSetString">
            <summary>设置 PackageProperties.set_Description(String value) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.Dispose(System.Boolean)">
            <summary>设置 PackageProperties.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.DisposeBoolean">
            <summary>设置 PackageProperties.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Identifier">
            <summary>设置 PackageProperties.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.IdentifierGet">
            <summary>设置 PackageProperties.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.IdentifierSetString">
            <summary>设置 PackageProperties.set_Identifier(String value) 的 stub</summary>
        </member>
        <member name="M:System.IO.Packaging.Fakes.StubPackageProperties.InitializeStub">
            <summary>初始化 type StubPackageProperties 的新实例</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Keywords">
            <summary>设置 PackageProperties.get_Keywords() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.KeywordsGet">
            <summary>设置 PackageProperties.get_Keywords() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.KeywordsSetString">
            <summary>设置 PackageProperties.set_Keywords(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Language">
            <summary>设置 PackageProperties.get_Language() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LanguageGet">
            <summary>设置 PackageProperties.get_Language() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LanguageSetString">
            <summary>设置 PackageProperties.set_Language(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.LastModifiedBy">
            <summary>设置 PackageProperties.get_LastModifiedBy() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LastModifiedByGet">
            <summary>设置 PackageProperties.get_LastModifiedBy() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LastModifiedBySetString">
            <summary>设置 PackageProperties.set_LastModifiedBy(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.LastPrinted">
            <summary>设置 PackageProperties.get_LastPrinted() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LastPrintedGet">
            <summary>设置 PackageProperties.get_LastPrinted() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.LastPrintedSetNullableOfDateTime">
            <summary>设置 PackageProperties.set_LastPrinted(Nullable`1&lt;DateTime&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Modified">
            <summary>设置 PackageProperties.get_Modified() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ModifiedGet">
            <summary>设置 PackageProperties.get_Modified() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.ModifiedSetNullableOfDateTime">
            <summary>设置 PackageProperties.set_Modified(Nullable`1&lt;DateTime&gt; value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Revision">
            <summary>设置 PackageProperties.get_Revision() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.RevisionGet">
            <summary>设置 PackageProperties.get_Revision() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.RevisionSetString">
            <summary>设置 PackageProperties.set_Revision(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Subject">
            <summary>设置 PackageProperties.get_Subject() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.SubjectGet">
            <summary>设置 PackageProperties.get_Subject() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.SubjectSetString">
            <summary>设置 PackageProperties.set_Subject(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Title">
            <summary>设置 PackageProperties.get_Title() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.TitleGet">
            <summary>设置 PackageProperties.get_Title() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.TitleSetString">
            <summary>设置 PackageProperties.set_Title(String value) 的 stub</summary>
        </member>
        <member name="P:System.IO.Packaging.Fakes.StubPackageProperties.Version">
            <summary>设置 PackageProperties.get_Version() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.VersionGet">
            <summary>设置 PackageProperties.get_Version() 的 stub</summary>
        </member>
        <member name="F:System.IO.Packaging.Fakes.StubPackageProperties.VersionSetString">
            <summary>设置 PackageProperties.set_Version(String value) 的 stub</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimMediaPermission">
            <summary>System.Security.Permissions.MediaPermission 的填充码类型</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.#ctor(System.Security.Permissions.MediaPermission)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.AudioGet">
            <summary>设置 MediaPermission.get_Audio() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.Copy">
            <summary>设置 MediaPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.FromXmlSecurityElement">
            <summary>设置 MediaPermission.FromXml(SecurityElement securityElement) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.ImageGet">
            <summary>设置 MediaPermission.get_Image() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.IntersectIPermission">
            <summary>设置 MediaPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.IsSubsetOfIPermission">
            <summary>设置 MediaPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.IsUnrestricted">
            <summary>设置 MediaPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.ToXml">
            <summary>设置 MediaPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.UnionIPermission">
            <summary>设置 MediaPermission.Union(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AllInstances.VideoGet">
            <summary>设置 MediaPermission.get_Video() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.AudioGet">
            <summary>设置 MediaPermission.get_Audio() 的 填充码</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.Bind(System.Security.IPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.Bind(System.Security.IStackWalk)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.Constructor">
            <summary>设置 MediaPermission.MediaPermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ConstructorMediaPermissionAudio">
            <summary>设置 MediaPermission.MediaPermission(MediaPermissionAudio permissionAudio) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ConstructorMediaPermissionAudioMediaPermissionVideoMediaPermissionImage">
            <summary>设置 MediaPermission.MediaPermission(MediaPermissionAudio permissionAudio, MediaPermissionVideo permissionVideo, MediaPermissionImage permissionImage) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ConstructorMediaPermissionImage">
            <summary>设置 MediaPermission.MediaPermission(MediaPermissionImage permissionImage) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ConstructorMediaPermissionVideo">
            <summary>设置 MediaPermission.MediaPermission(MediaPermissionVideo permissionVideo) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ConstructorPermissionState">
            <summary>设置 MediaPermission.MediaPermission(PermissionState state) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.Copy">
            <summary>设置 MediaPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.FromXmlSecurityElement">
            <summary>设置 MediaPermission.FromXml(SecurityElement securityElement) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ImageGet">
            <summary>设置 MediaPermission.get_Image() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.IntersectIPermission">
            <summary>设置 MediaPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.IsSubsetOfIPermission">
            <summary>设置 MediaPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.IsUnrestricted">
            <summary>设置 MediaPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.ToXml">
            <summary>设置 MediaPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.UnionIPermission">
            <summary>设置 MediaPermission.Union(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.VerifyMediaPermissionAudioMediaPermissionAudio">
            <summary>设置 MediaPermission.VerifyMediaPermissionAudio(MediaPermissionAudio level) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.VerifyMediaPermissionImageMediaPermissionImage">
            <summary>设置 MediaPermission.VerifyMediaPermissionImage(MediaPermissionImage level) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.VerifyMediaPermissionVideoMediaPermissionVideo">
            <summary>设置 MediaPermission.VerifyMediaPermissionVideo(MediaPermissionVideo level) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermission.VideoGet">
            <summary>设置 MediaPermission.get_Video() 的 填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute">
            <summary>System.Security.Permissions.MediaPermissionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.#ctor(System.Security.Permissions.MediaPermissionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.AudioGet">
            <summary>设置 MediaPermissionAttribute.get_Audio() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.AudioSetMediaPermissionAudio">
            <summary>设置 MediaPermissionAttribute.set_Audio(MediaPermissionAudio value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.CreatePermission">
            <summary>设置 MediaPermissionAttribute.CreatePermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.ImageGet">
            <summary>设置 MediaPermissionAttribute.get_Image() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.ImageSetMediaPermissionImage">
            <summary>设置 MediaPermissionAttribute.set_Image(MediaPermissionImage value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.VideoGet">
            <summary>设置 MediaPermissionAttribute.get_Video() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AllInstances.VideoSetMediaPermissionVideo">
            <summary>设置 MediaPermissionAttribute.set_Video(MediaPermissionVideo value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AudioGet">
            <summary>设置 MediaPermissionAttribute.get_Audio() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.AudioSetMediaPermissionAudio">
            <summary>设置 MediaPermissionAttribute.set_Audio(MediaPermissionAudio value) 的 填充码</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.ConstructorSecurityAction">
            <summary>设置 MediaPermissionAttribute.MediaPermissionAttribute(SecurityAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.CreatePermission">
            <summary>设置 MediaPermissionAttribute.CreatePermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.ImageGet">
            <summary>设置 MediaPermissionAttribute.get_Image() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.ImageSetMediaPermissionImage">
            <summary>设置 MediaPermissionAttribute.set_Image(MediaPermissionImage value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.VideoGet">
            <summary>设置 MediaPermissionAttribute.get_Video() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimMediaPermissionAttribute.VideoSetMediaPermissionVideo">
            <summary>设置 MediaPermissionAttribute.set_Video(MediaPermissionVideo value) 的 填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimWebBrowserPermission">
            <summary>System.Security.Permissions.WebBrowserPermission 的填充码类型</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermission)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.Copy">
            <summary>设置 WebBrowserPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.FromXmlSecurityElement">
            <summary>设置 WebBrowserPermission.FromXml(SecurityElement securityElement) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.IntersectIPermission">
            <summary>设置 WebBrowserPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.IsSubsetOfIPermission">
            <summary>设置 WebBrowserPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.IsUnrestricted">
            <summary>设置 WebBrowserPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.LevelGet">
            <summary>设置 WebBrowserPermission.get_Level() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.LevelSetWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermission.set_Level(WebBrowserPermissionLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.ToXml">
            <summary>设置 WebBrowserPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.AllInstances.UnionIPermission">
            <summary>设置 WebBrowserPermission.Union(IPermission target) 的 填充码</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Bind(System.Security.IPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Bind(System.Security.IStackWalk)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Constructor">
            <summary>设置 WebBrowserPermission.WebBrowserPermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.ConstructorPermissionState">
            <summary>设置 WebBrowserPermission.WebBrowserPermission(PermissionState state) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.ConstructorWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel webBrowserPermissionLevel) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.Copy">
            <summary>设置 WebBrowserPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.FromXmlSecurityElement">
            <summary>设置 WebBrowserPermission.FromXml(SecurityElement securityElement) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.IntersectIPermission">
            <summary>设置 WebBrowserPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.IsSubsetOfIPermission">
            <summary>设置 WebBrowserPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.IsUnrestricted">
            <summary>设置 WebBrowserPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.LevelGet">
            <summary>设置 WebBrowserPermission.get_Level() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.LevelSetWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermission.set_Level(WebBrowserPermissionLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.ToXml">
            <summary>设置 WebBrowserPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.UnionIPermission">
            <summary>设置 WebBrowserPermission.Union(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermission.VerifyWebBrowserPermissionLevelWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermission.VerifyWebBrowserPermissionLevel(WebBrowserPermissionLevel level) 的 填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute">
            <summary>System.Security.Permissions.WebBrowserPermissionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.#ctor(System.Security.Permissions.WebBrowserPermissionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.AllInstances.CreatePermission">
            <summary>设置 WebBrowserPermissionAttribute.CreatePermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.AllInstances.LevelGet">
            <summary>设置 WebBrowserPermissionAttribute.get_Level() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.AllInstances.LevelSetWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermissionAttribute.set_Level(WebBrowserPermissionLevel value) 的 填充码</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.ConstructorSecurityAction">
            <summary>设置 WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.CreatePermission">
            <summary>设置 WebBrowserPermissionAttribute.CreatePermission() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.LevelGet">
            <summary>设置 WebBrowserPermissionAttribute.get_Level() 的 填充码</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.ShimWebBrowserPermissionAttribute.LevelSetWebBrowserPermissionLevel">
            <summary>设置 WebBrowserPermissionAttribute.set_Level(WebBrowserPermissionLevel value) 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimContentGrant">
            <summary>System.Security.RightsManagement.ContentGrant 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentGrant.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentGrant.#ctor(System.Security.RightsManagement.ContentGrant)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimContentGrant.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.AllInstances.RightGet">
            <summary>设置 ContentGrant.get_Right() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.AllInstances.UserGet">
            <summary>设置 ContentGrant.get_User() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.AllInstances.ValidFromGet">
            <summary>设置 ContentGrant.get_ValidFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.AllInstances.ValidUntilGet">
            <summary>设置 ContentGrant.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentGrant.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentGrant.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.ConstructorContentUserContentRight">
            <summary>设置 ContentGrant.ContentGrant(ContentUser user, ContentRight right) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.ConstructorContentUserContentRightDateTimeDateTime">
            <summary>设置 ContentGrant.ContentGrant(ContentUser user, ContentRight right, DateTime validFrom, DateTime validUntil) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.RightGet">
            <summary>设置 ContentGrant.get_Right() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.UserGet">
            <summary>设置 ContentGrant.get_User() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.ValidFromGet">
            <summary>设置 ContentGrant.get_ValidFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentGrant.ValidUntilGet">
            <summary>设置 ContentGrant.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimContentUser">
            <summary>System.Security.RightsManagement.ContentUser 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentUser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentUser.#ctor(System.Security.RightsManagement.ContentUser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.AuthenticationProviderTypeGet">
            <summary>设置 ContentUser.get_AuthenticationProviderType() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.AuthenticationTypeGet">
            <summary>设置 ContentUser.get_AuthenticationType() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.EqualsObject">
            <summary>设置 ContentUser.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.GenericEqualsContentUser">
            <summary>设置 ContentUser.GenericEquals(ContentUser userObj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.GetHashCode01">
            <summary>设置 ContentUser.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.IsAuthenticated">
            <summary>设置 ContentUser.IsAuthenticated() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AllInstances.NameGet">
            <summary>设置 ContentUser.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AnyoneUserGet">
            <summary>设置 ContentUser.get_AnyoneUser() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AuthenticationProviderTypeGet">
            <summary>设置 ContentUser.get_AuthenticationProviderType() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.AuthenticationTypeGet">
            <summary>设置 ContentUser.get_AuthenticationType() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentUser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimContentUser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.CompareToAnyoneString">
            <summary>设置 ContentUser.CompareToAnyone(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.CompareToOwnerString">
            <summary>设置 ContentUser.CompareToOwner(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.ConstructorStringAuthenticationType">
            <summary>设置 ContentUser.ContentUser(String name, AuthenticationType authenticationType) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.EqualsObject">
            <summary>设置 ContentUser.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.GenericEqualsContentUser">
            <summary>设置 ContentUser.GenericEquals(ContentUser userObj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.GetHashCode">
            <summary>设置 ContentUser.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.IsAuthenticated">
            <summary>设置 ContentUser.IsAuthenticated() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.NameGet">
            <summary>设置 ContentUser.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.OwnerUserGet">
            <summary>设置 ContentUser.get_OwnerUser() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimContentUser.StaticConstructor">
            <summary>设置 ContentUser.ContentUser() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimCryptoProvider">
            <summary>System.Security.RightsManagement.CryptoProvider 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimCryptoProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimCryptoProvider.#ctor(System.Security.RightsManagement.CryptoProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.BlockSizeGet">
            <summary>设置 CryptoProvider.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.BoundGrantsGet">
            <summary>设置 CryptoProvider.get_BoundGrants() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.CanDecryptGet">
            <summary>设置 CryptoProvider.get_CanDecrypt() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.CanEncryptGet">
            <summary>设置 CryptoProvider.get_CanEncrypt() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.CanMergeBlocksGet">
            <summary>设置 CryptoProvider.get_CanMergeBlocks() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.DecryptByteArray">
            <summary>设置 CryptoProvider.Decrypt(Byte[] cryptoText) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.DecryptPublishLicenseString">
            <summary>设置 CryptoProvider.DecryptPublishLicense(String serializedPublishLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.Dispose">
            <summary>设置 CryptoProvider.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.DisposeBoolean">
            <summary>设置 CryptoProvider.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.AllInstances.EncryptByteArray">
            <summary>设置 CryptoProvider.Encrypt(Byte[] clearText) 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimCryptoProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimCryptoProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimCryptoProvider.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.BlockSizeGet">
            <summary>设置 CryptoProvider.get_BlockSize() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.BoundGrantsGet">
            <summary>设置 CryptoProvider.get_BoundGrants() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.CanDecryptGet">
            <summary>设置 CryptoProvider.get_CanDecrypt() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.CanEncryptGet">
            <summary>设置 CryptoProvider.get_CanEncrypt() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.CanMergeBlocksGet">
            <summary>设置 CryptoProvider.get_CanMergeBlocks() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.DecryptByteArray">
            <summary>设置 CryptoProvider.Decrypt(Byte[] cryptoText) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.DecryptPublishLicenseString">
            <summary>设置 CryptoProvider.DecryptPublishLicense(String serializedPublishLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.Dispose">
            <summary>设置 CryptoProvider.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.DisposeBoolean">
            <summary>设置 CryptoProvider.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimCryptoProvider.EncryptByteArray">
            <summary>设置 CryptoProvider.Encrypt(Byte[] clearText) 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair">
            <summary>System.Security.RightsManagement.LocalizedNameDescriptionPair 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.#ctor(System.Security.RightsManagement.LocalizedNameDescriptionPair)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.AllInstances.DescriptionGet">
            <summary>设置 LocalizedNameDescriptionPair.get_Description() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.AllInstances.EqualsObject">
            <summary>设置 LocalizedNameDescriptionPair.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.AllInstances.GetHashCode01">
            <summary>设置 LocalizedNameDescriptionPair.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.AllInstances.NameGet">
            <summary>设置 LocalizedNameDescriptionPair.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.ConstructorStringString">
            <summary>设置 LocalizedNameDescriptionPair.LocalizedNameDescriptionPair(String name, String description) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.DescriptionGet">
            <summary>设置 LocalizedNameDescriptionPair.get_Description() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.EqualsObject">
            <summary>设置 LocalizedNameDescriptionPair.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.GetHashCode">
            <summary>设置 LocalizedNameDescriptionPair.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimLocalizedNameDescriptionPair.NameGet">
            <summary>设置 LocalizedNameDescriptionPair.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimPublishLicense">
            <summary>System.Security.RightsManagement.PublishLicense 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimPublishLicense.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimPublishLicense.#ctor(System.Security.RightsManagement.PublishLicense)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AcquireUseLicenseNoUISecureEnvironment">
            <summary>设置 PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AcquireUseLicenseSecureEnvironment">
            <summary>设置 PublishLicense.AcquireUseLicense(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.AcquireUseLicenseNoUISecureEnvironment">
            <summary>设置 PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.AcquireUseLicenseSecureEnvironment">
            <summary>设置 PublishLicense.AcquireUseLicense(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.ContentIdGet">
            <summary>设置 PublishLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.DecryptUnsignedPublishLicenseCryptoProvider">
            <summary>设置 PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.ReferralInfoNameGet">
            <summary>设置 PublishLicense.get_ReferralInfoName() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.ReferralInfoUriGet">
            <summary>设置 PublishLicense.get_ReferralInfoUri() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.ToString01">
            <summary>设置 PublishLicense.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.AllInstances.UseLicenseAcquisitionUrlGet">
            <summary>设置 PublishLicense.get_UseLicenseAcquisitionUrl() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimPublishLicense.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimPublishLicense.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.ConstructorString">
            <summary>设置 PublishLicense.PublishLicense(String signedPublishLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.ContentIdGet">
            <summary>设置 PublishLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.DecryptUnsignedPublishLicenseCryptoProvider">
            <summary>设置 PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider cryptoProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.ReferralInfoNameGet">
            <summary>设置 PublishLicense.get_ReferralInfoName() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.ReferralInfoUriGet">
            <summary>设置 PublishLicense.get_ReferralInfoUri() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.ToString">
            <summary>设置 PublishLicense.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimPublishLicense.UseLicenseAcquisitionUrlGet">
            <summary>设置 PublishLicense.get_UseLicenseAcquisitionUrl() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimRightsManagementException">
            <summary>System.Security.RightsManagement.RightsManagementException 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimRightsManagementException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimRightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimRightsManagementException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.AllInstances.FailureCodeGet">
            <summary>设置 RightsManagementException.get_FailureCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 RightsManagementException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimRightsManagementException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimRightsManagementException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimRightsManagementException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.Constructor">
            <summary>设置 RightsManagementException.RightsManagementException() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorRightsManagementFailureCode">
            <summary>设置 RightsManagementException.RightsManagementException(RightsManagementFailureCode failureCode) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorRightsManagementFailureCodeException">
            <summary>设置 RightsManagementException.RightsManagementException(RightsManagementFailureCode failureCode, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorRightsManagementFailureCodeString">
            <summary>设置 RightsManagementException.RightsManagementException(RightsManagementFailureCode failureCode, String message) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorRightsManagementFailureCodeStringException">
            <summary>设置 RightsManagementException.RightsManagementException(RightsManagementFailureCode failureCode, String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 RightsManagementException.RightsManagementException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorString">
            <summary>设置 RightsManagementException.RightsManagementException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.ConstructorStringException">
            <summary>设置 RightsManagementException.RightsManagementException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.FailureCodeGet">
            <summary>设置 RightsManagementException.get_FailureCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimRightsManagementException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 RightsManagementException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimSecureEnvironment">
            <summary>System.Security.RightsManagement.SecureEnvironment 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.#ctor(System.Security.RightsManagement.SecureEnvironment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances.ApplicationManifestGet">
            <summary>设置 SecureEnvironment.get_ApplicationManifest() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances.Constructor">
            <summary>设置 SecureEnvironment.SecureEnvironment() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances.Dispose">
            <summary>设置 SecureEnvironment.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances.DisposeBoolean">
            <summary>设置 SecureEnvironment.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.AllInstances.UserGet">
            <summary>设置 SecureEnvironment.get_User() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.ApplicationManifestGet">
            <summary>设置 SecureEnvironment.get_ApplicationManifest() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.Constructor">
            <summary>设置 SecureEnvironment.SecureEnvironment() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.CreateStringAuthenticationTypeUserActivationMode">
            <summary>设置 SecureEnvironment.Create(String applicationManifest, AuthenticationType authentication, UserActivationMode userActivationMode) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.CreateStringContentUser">
            <summary>设置 SecureEnvironment.Create(String applicationManifest, ContentUser user) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.Dispose">
            <summary>设置 SecureEnvironment.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.DisposeBoolean">
            <summary>设置 SecureEnvironment.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.GetActivatedUsers">
            <summary>设置 SecureEnvironment.GetActivatedUsers() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.IsUserActivatedContentUser">
            <summary>设置 SecureEnvironment.IsUserActivated(ContentUser user) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.RemoveActivatedUserContentUser">
            <summary>设置 SecureEnvironment.RemoveActivatedUser(ContentUser user) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimSecureEnvironment.UserGet">
            <summary>设置 SecureEnvironment.get_User() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense">
            <summary>System.Security.RightsManagement.UnsignedPublishLicense 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.#ctor(System.Security.RightsManagement.UnsignedPublishLicense)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ApplicationSpecificDataDictionaryGet">
            <summary>设置 UnsignedPublishLicense.get_ApplicationSpecificDataDictionary() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ContentIdGet">
            <summary>设置 UnsignedPublishLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ContentIdSetGuid">
            <summary>设置 UnsignedPublishLicense.set_ContentId(Guid value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.GrantsGet">
            <summary>设置 UnsignedPublishLicense.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.LocalizedNameDescriptionDictionaryGet">
            <summary>设置 UnsignedPublishLicense.get_LocalizedNameDescriptionDictionary() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.OwnerGet">
            <summary>设置 UnsignedPublishLicense.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.OwnerSetContentUser">
            <summary>设置 UnsignedPublishLicense.set_Owner(ContentUser value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ReferralInfoNameGet">
            <summary>设置 UnsignedPublishLicense.get_ReferralInfoName() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ReferralInfoNameSetString">
            <summary>设置 UnsignedPublishLicense.set_ReferralInfoName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ReferralInfoUriGet">
            <summary>设置 UnsignedPublishLicense.get_ReferralInfoUri() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ReferralInfoUriSetUri">
            <summary>设置 UnsignedPublishLicense.set_ReferralInfoUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.RightValidityIntervalDaysGet">
            <summary>设置 UnsignedPublishLicense.get_RightValidityIntervalDays() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.RightValidityIntervalDaysSetInt32">
            <summary>设置 UnsignedPublishLicense.set_RightValidityIntervalDays(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.SignSecureEnvironmentUseLicenseOut">
            <summary>设置 UnsignedPublishLicense.Sign(SecureEnvironment secureEnvironment, UseLicense&amp; authorUseLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.AllInstances.ToString01">
            <summary>设置 UnsignedPublishLicense.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ApplicationSpecificDataDictionaryGet">
            <summary>设置 UnsignedPublishLicense.get_ApplicationSpecificDataDictionary() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.Constructor">
            <summary>设置 UnsignedPublishLicense.UnsignedPublishLicense() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ConstructorString">
            <summary>设置 UnsignedPublishLicense.UnsignedPublishLicense(String publishLicenseTemplate) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ContentIdGet">
            <summary>设置 UnsignedPublishLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ContentIdSetGuid">
            <summary>设置 UnsignedPublishLicense.set_ContentId(Guid value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.GrantsGet">
            <summary>设置 UnsignedPublishLicense.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.LocalizedNameDescriptionDictionaryGet">
            <summary>设置 UnsignedPublishLicense.get_LocalizedNameDescriptionDictionary() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.OwnerGet">
            <summary>设置 UnsignedPublishLicense.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.OwnerSetContentUser">
            <summary>设置 UnsignedPublishLicense.set_Owner(ContentUser value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ReferralInfoNameGet">
            <summary>设置 UnsignedPublishLicense.get_ReferralInfoName() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ReferralInfoNameSetString">
            <summary>设置 UnsignedPublishLicense.set_ReferralInfoName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ReferralInfoUriGet">
            <summary>设置 UnsignedPublishLicense.get_ReferralInfoUri() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ReferralInfoUriSetUri">
            <summary>设置 UnsignedPublishLicense.set_ReferralInfoUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.RightValidityIntervalDaysGet">
            <summary>设置 UnsignedPublishLicense.get_RightValidityIntervalDays() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.RightValidityIntervalDaysSetInt32">
            <summary>设置 UnsignedPublishLicense.set_RightValidityIntervalDays(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.SignSecureEnvironmentUseLicenseOut">
            <summary>设置 UnsignedPublishLicense.Sign(SecureEnvironment secureEnvironment, UseLicense&amp; authorUseLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUnsignedPublishLicense.ToString">
            <summary>设置 UnsignedPublishLicense.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimUseLicense">
            <summary>System.Security.RightsManagement.UseLicense 的填充码类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUseLicense.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUseLicense.#ctor(System.Security.RightsManagement.UseLicense)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.ApplicationDataGet">
            <summary>设置 UseLicense.get_ApplicationData() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.BindSecureEnvironment">
            <summary>设置 UseLicense.Bind(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.ContentIdGet">
            <summary>设置 UseLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.EqualsObject">
            <summary>设置 UseLicense.Equals(Object x) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.GetHashCode01">
            <summary>设置 UseLicense.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.OwnerGet">
            <summary>设置 UseLicense.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.AllInstances.ToString01">
            <summary>设置 UseLicense.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.ApplicationDataGet">
            <summary>设置 UseLicense.get_ApplicationData() 的 填充码</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUseLicense.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.ShimUseLicense.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.BindSecureEnvironment">
            <summary>设置 UseLicense.Bind(SecureEnvironment secureEnvironment) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.ConstructorString">
            <summary>设置 UseLicense.UseLicense(String useLicense) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.ContentIdGet">
            <summary>设置 UseLicense.get_ContentId() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.EqualsObject">
            <summary>设置 UseLicense.Equals(Object x) 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.GetHashCode">
            <summary>设置 UseLicense.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.OwnerGet">
            <summary>设置 UseLicense.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.ShimUseLicense.ToString">
            <summary>设置 UseLicense.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubContentGrant">
            <summary>System.Security.RightsManagement.ContentGrant 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentGrant.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentGrant.InitializeStub">
            <summary>初始化 type StubContentGrant 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentGrant.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentGrant.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubContentUser">
            <summary>System.Security.RightsManagement.ContentUser 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentUser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentUser.Equals(System.Object)">
            <summary>设置 ContentUser.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubContentUser.EqualsObject">
            <summary>设置 ContentUser.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentUser.GetHashCode">
            <summary>设置 ContentUser.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubContentUser.GetHashCode01">
            <summary>设置 ContentUser.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubContentUser.InitializeStub">
            <summary>初始化 type StubContentUser 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentUser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubContentUser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair">
            <summary>System.Security.RightsManagement.LocalizedNameDescriptionPair 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.Equals(System.Object)">
            <summary>设置 LocalizedNameDescriptionPair.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.EqualsObject">
            <summary>设置 LocalizedNameDescriptionPair.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.GetHashCode">
            <summary>设置 LocalizedNameDescriptionPair.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.GetHashCode01">
            <summary>设置 LocalizedNameDescriptionPair.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.InitializeStub">
            <summary>初始化 type StubLocalizedNameDescriptionPair 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubLocalizedNameDescriptionPair.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubPublishLicense">
            <summary>System.Security.RightsManagement.PublishLicense 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubPublishLicense.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubPublishLicense.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubPublishLicense.InitializeStub">
            <summary>初始化 type StubPublishLicense 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubPublishLicense.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubPublishLicense.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubPublishLicense.ToString">
            <summary>设置 PublishLicense.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubPublishLicense.ToString01">
            <summary>设置 PublishLicense.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubRightsManagementException">
            <summary>System.Security.RightsManagement.RightsManagementException 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubRightsManagementException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubRightsManagementException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 RightsManagementException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 RightsManagementException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.InitializeStub">
            <summary>初始化 type StubRightsManagementException 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubRightsManagementException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubRightsManagementException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubRightsManagementException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense">
            <summary>System.Security.RightsManagement.UnsignedPublishLicense 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.InitializeStub">
            <summary>初始化 type StubUnsignedPublishLicense 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.ToString">
            <summary>设置 UnsignedPublishLicense.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubUnsignedPublishLicense.ToString01">
            <summary>设置 UnsignedPublishLicense.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Security.RightsManagement.Fakes.StubUseLicense">
            <summary>System.Security.RightsManagement.UseLicense 的存根类型</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUseLicense.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUseLicense.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUseLicense.Equals(System.Object)">
            <summary>设置 UseLicense.Equals(Object x) 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubUseLicense.EqualsObject">
            <summary>设置 UseLicense.Equals(Object x) 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUseLicense.GetHashCode">
            <summary>设置 UseLicense.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubUseLicense.GetHashCode01">
            <summary>设置 UseLicense.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUseLicense.InitializeStub">
            <summary>初始化 type StubUseLicense 的新实例</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUseLicense.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Security.RightsManagement.Fakes.StubUseLicense.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Security.RightsManagement.Fakes.StubUseLicense.ToString">
            <summary>设置 UseLicense.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Security.RightsManagement.Fakes.StubUseLicense.ToString01">
            <summary>设置 UseLicense.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer">
            <summary>System.Windows.Converters.Int32RectValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.#ctor(System.Windows.Converters.Int32RectValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.Constructor">
            <summary>设置 Int32RectValueSerializer.Int32RectValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimInt32RectValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimPointValueSerializer">
            <summary>System.Windows.Converters.PointValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimPointValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimPointValueSerializer.#ctor(System.Windows.Converters.PointValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimPointValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimPointValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimPointValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.Constructor">
            <summary>设置 PointValueSerializer.PointValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimPointValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimRectValueSerializer">
            <summary>System.Windows.Converters.RectValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimRectValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimRectValueSerializer.#ctor(System.Windows.Converters.RectValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimRectValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimRectValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimRectValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.Constructor">
            <summary>设置 RectValueSerializer.RectValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimRectValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimSizeValueSerializer">
            <summary>System.Windows.Converters.SizeValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimSizeValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimSizeValueSerializer.#ctor(System.Windows.Converters.SizeValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimSizeValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimSizeValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimSizeValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.Constructor">
            <summary>设置 SizeValueSerializer.SizeValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimSizeValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimVectorValueSerializer">
            <summary>System.Windows.Converters.VectorValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimVectorValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimVectorValueSerializer.#ctor(System.Windows.Converters.VectorValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.ShimVectorValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimVectorValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.ShimVectorValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.Constructor">
            <summary>设置 VectorValueSerializer.VectorValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.ShimVectorValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.StubInt32RectValueSerializer">
            <summary>System.Windows.Converters.Int32RectValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 Int32RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 Int32RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 Int32RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 Int32RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 Int32RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.InitializeStub">
            <summary>初始化 type StubInt32RectValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubInt32RectValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.StubPointValueSerializer">
            <summary>System.Windows.Converters.PointValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubPointValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 PointValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubPointValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 PointValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubPointValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 PointValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubPointValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 PointValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubPointValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 PointValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.InitializeStub">
            <summary>初始化 type StubPointValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubPointValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubPointValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubPointValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubPointValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.StubRectValueSerializer">
            <summary>System.Windows.Converters.RectValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubRectValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubRectValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubRectValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubRectValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubRectValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 RectValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.InitializeStub">
            <summary>初始化 type StubRectValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubRectValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubRectValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubRectValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubRectValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.StubSizeValueSerializer">
            <summary>System.Windows.Converters.SizeValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubSizeValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 SizeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubSizeValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 SizeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubSizeValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 SizeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubSizeValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 SizeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubSizeValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 SizeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.InitializeStub">
            <summary>初始化 type StubSizeValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubSizeValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubSizeValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubSizeValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubSizeValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Converters.Fakes.StubVectorValueSerializer">
            <summary>System.Windows.Converters.VectorValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubVectorValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 VectorValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubVectorValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 VectorValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubVectorValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 VectorValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubVectorValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 VectorValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubVectorValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 VectorValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.InitializeStub">
            <summary>初始化 type StubVectorValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubVectorValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Converters.Fakes.StubVectorValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Converters.Fakes.StubVectorValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Converters.Fakes.StubVectorValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Data.Fakes.ShimDataSourceProvider">
            <summary>System.Windows.Data.DataSourceProvider 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.ShimDataSourceProvider.#ctor(System.Windows.Data.DataSourceProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.BeginInit">
            <summary>设置 DataSourceProvider.BeginInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.BeginQuery">
            <summary>设置 DataSourceProvider.BeginQuery() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DataChangedAddEventHandler">
            <summary>设置 DataSourceProvider.add_DataChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DataChangedRemoveEventHandler">
            <summary>设置 DataSourceProvider.remove_DataChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DataGet">
            <summary>设置 DataSourceProvider.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DeferRefresh">
            <summary>设置 DataSourceProvider.DeferRefresh() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DispatcherGet">
            <summary>设置 DataSourceProvider.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.DispatcherSetDispatcher">
            <summary>设置 DataSourceProvider.set_Dispatcher(Dispatcher value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.EndInit">
            <summary>设置 DataSourceProvider.EndInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.ErrorGet">
            <summary>设置 DataSourceProvider.get_Error() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.InitialLoad">
            <summary>设置 DataSourceProvider.InitialLoad() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.IsInitialLoadEnabledGet">
            <summary>设置 DataSourceProvider.get_IsInitialLoadEnabled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.IsInitialLoadEnabledSetBoolean">
            <summary>设置 DataSourceProvider.set_IsInitialLoadEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.IsRefreshDeferredGet">
            <summary>设置 DataSourceProvider.get_IsRefreshDeferred() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 DataSourceProvider.OnPropertyChanged(PropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.OnQueryFinishedObject">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.OnQueryFinishedObjectExceptionDispatcherOperationCallbackObject">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData, Exception error, DispatcherOperationCallback completionWork, Object callbackArguments) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.Refresh">
            <summary>设置 DataSourceProvider.Refresh() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.SystemComponentModelISupportInitializeBeginInit">
            <summary>设置 DataSourceProvider.System.ComponentModel.ISupportInitialize.BeginInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.AllInstances.SystemComponentModelISupportInitializeEndInit">
            <summary>设置 DataSourceProvider.System.ComponentModel.ISupportInitialize.EndInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.BeginInit">
            <summary>设置 DataSourceProvider.BeginInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.BeginQuery">
            <summary>设置 DataSourceProvider.BeginQuery() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.ShimDataSourceProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.ShimDataSourceProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.ShimDataSourceProvider.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.ShimDataSourceProvider.Bind(System.ComponentModel.ISupportInitialize)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.Constructor">
            <summary>设置 DataSourceProvider.DataSourceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DataChangedAddEventHandler">
            <summary>设置 DataSourceProvider.add_DataChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DataChangedRemoveEventHandler">
            <summary>设置 DataSourceProvider.remove_DataChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DataGet">
            <summary>设置 DataSourceProvider.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DeferRefresh">
            <summary>设置 DataSourceProvider.DeferRefresh() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DispatcherGet">
            <summary>设置 DataSourceProvider.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.DispatcherSetDispatcher">
            <summary>设置 DataSourceProvider.set_Dispatcher(Dispatcher value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.EndInit">
            <summary>设置 DataSourceProvider.EndInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.ErrorGet">
            <summary>设置 DataSourceProvider.get_Error() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.InitialLoad">
            <summary>设置 DataSourceProvider.InitialLoad() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.IsInitialLoadEnabledGet">
            <summary>设置 DataSourceProvider.get_IsInitialLoadEnabled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.IsInitialLoadEnabledSetBoolean">
            <summary>设置 DataSourceProvider.set_IsInitialLoadEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.IsRefreshDeferredGet">
            <summary>设置 DataSourceProvider.get_IsRefreshDeferred() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 DataSourceProvider.OnPropertyChanged(PropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.OnQueryFinishedObject">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.OnQueryFinishedObjectExceptionDispatcherOperationCallbackObject">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData, Exception error, DispatcherOperationCallback completionWork, Object callbackArguments) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.PropertyChangedAddPropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.PropertyChangedSystemComponentModelINotifyPropertyChangedaddPropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.PropertyChangedSystemComponentModelINotifyPropertyChangedremovePropertyChangedEventHandler">
            <summary>设置 DataSourceProvider.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.Refresh">
            <summary>设置 DataSourceProvider.Refresh() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.StaticConstructor">
            <summary>设置 DataSourceProvider.DataSourceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.SystemComponentModelISupportInitializeBeginInit">
            <summary>设置 DataSourceProvider.System.ComponentModel.ISupportInitialize.BeginInit() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.ShimDataSourceProvider.SystemComponentModelISupportInitializeEndInit">
            <summary>设置 DataSourceProvider.System.ComponentModel.ISupportInitialize.EndInit() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Data.Fakes.StubDataSourceProvider">
            <summary>System.Windows.Data.DataSourceProvider 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.BeginInit">
            <summary>设置 DataSourceProvider.BeginInit() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.BeginInit01">
            <summary>设置 DataSourceProvider.BeginInit() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.BeginQuery">
            <summary>设置 DataSourceProvider.BeginQuery() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.BeginQuery01">
            <summary>设置 DataSourceProvider.BeginQuery() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.StubDataSourceProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.DeferRefresh">
            <summary>设置 DataSourceProvider.DeferRefresh() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.DeferRefresh01">
            <summary>设置 DataSourceProvider.DeferRefresh() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.EndInit">
            <summary>设置 DataSourceProvider.EndInit() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.EndInit01">
            <summary>设置 DataSourceProvider.EndInit() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.InitializeStub">
            <summary>初始化 type StubDataSourceProvider 的新实例</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.StubDataSourceProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Data.Fakes.StubDataSourceProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 DataSourceProvider.OnPropertyChanged(PropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.OnPropertyChangedPropertyChangedEventArgs">
            <summary>设置 DataSourceProvider.OnPropertyChanged(PropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Data.Fakes.StubDataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData, Exception error, DispatcherOperationCallback completionWork, Object callbackArguments) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Data.Fakes.StubDataSourceProvider.OnQueryFinishedObjectExceptionDispatcherOperationCallbackObject">
            <summary>设置 DataSourceProvider.OnQueryFinished(Object newData, Exception error, DispatcherOperationCallback completionWork, Object callbackArguments) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute">
            <summary>System.Windows.AttachedPropertyBrowsableAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.#ctor(System.Windows.AttachedPropertyBrowsableAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.AllInstances.UnionResultsGet">
            <summary>设置 AttachedPropertyBrowsableAttribute.get_UnionResults() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.Constructor">
            <summary>设置 AttachedPropertyBrowsableAttribute.AttachedPropertyBrowsableAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableAttribute.UnionResultsGet">
            <summary>设置 AttachedPropertyBrowsableAttribute.get_UnionResults() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute">
            <summary>System.Windows.AttachedPropertyBrowsableForTypeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.#ctor(System.Windows.AttachedPropertyBrowsableForTypeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.EqualsObject">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.GetHashCode01">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.IsBrowsableDependencyObjectDependencyProperty">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.IsBrowsable(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.TargetTypeGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.TypeIdGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.AllInstances.UnionResultsGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_UnionResults() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.ConstructorType">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.AttachedPropertyBrowsableForTypeAttribute(Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.EqualsObject">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.GetHashCode">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.IsBrowsableDependencyObjectDependencyProperty">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.IsBrowsable(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.TargetTypeGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.TypeIdGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableForTypeAttribute.UnionResultsGet">
            <summary>设置 AttachedPropertyBrowsableForTypeAttribute.get_UnionResults() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute">
            <summary>System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AllInstances.AttributeTypeGet">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.get_AttributeType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AllInstances.EqualsObject">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AllInstances.GetHashCode01">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AllInstances.IsBrowsableDependencyObjectDependencyProperty">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.IsBrowsable(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeTypeGet">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.get_AttributeType() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.ConstructorType">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.AttachedPropertyBrowsableWhenAttributePresentAttribute(Type attributeType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.EqualsObject">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimAttachedPropertyBrowsableWhenAttributePresentAttribute.IsBrowsableDependencyObjectDependencyProperty">
            <summary>设置 AttachedPropertyBrowsableWhenAttributePresentAttribute.IsBrowsable(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimBaseCompatibilityPreferences">
            <summary>System.Windows.BaseCompatibilityPreferences 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimBaseCompatibilityPreferences.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimBaseCompatibilityPreferences.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimBaseCompatibilityPreferences.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriorityGet">
            <summary>设置 BaseCompatibilityPreferences.get_FlowDispatcherSynchronizationContextPriority() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPrioritySetBoolean">
            <summary>设置 BaseCompatibilityPreferences.set_FlowDispatcherSynchronizationContextPriority(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.GetFlowDispatcherSynchronizationContextPriority">
            <summary>设置 BaseCompatibilityPreferences.GetFlowDispatcherSynchronizationContextPriority() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.GetInlineDispatcherSynchronizationContextSend">
            <summary>设置 BaseCompatibilityPreferences.GetInlineDispatcherSynchronizationContextSend() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.GetReuseDispatcherSynchronizationContextInstance">
            <summary>设置 BaseCompatibilityPreferences.GetReuseDispatcherSynchronizationContextInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSendGet">
            <summary>设置 BaseCompatibilityPreferences.get_InlineDispatcherSynchronizationContextSend() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSendSetBoolean">
            <summary>设置 BaseCompatibilityPreferences.set_InlineDispatcherSynchronizationContextSend(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstanceGet">
            <summary>设置 BaseCompatibilityPreferences.get_ReuseDispatcherSynchronizationContextInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstanceSetBoolean">
            <summary>设置 BaseCompatibilityPreferences.set_ReuseDispatcherSynchronizationContextInstance(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimBaseCompatibilityPreferences.StaticConstructor">
            <summary>设置 BaseCompatibilityPreferences.BaseCompatibilityPreferences() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyObject">
            <summary>System.Windows.DependencyObject 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObject.#ctor(System.Windows.DependencyObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AddInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.AddInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.AddInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.AddInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Animatable_IsResourceInvalidationNecessaryGet">
            <summary>设置 DependencyObject.get_Animatable_IsResourceInvalidationNecessary() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Animatable_IsResourceInvalidationNecessarySetBoolean">
            <summary>设置 DependencyObject.set_Animatable_IsResourceInvalidationNecessary(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.BeginPropertyInitialization">
            <summary>设置 DependencyObject.BeginPropertyInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.CanBeInheritanceContextGet">
            <summary>设置 DependencyObject.get_CanBeInheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.CanBeInheritanceContextSetBoolean">
            <summary>设置 DependencyObject.set_CanBeInheritanceContext(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ClearValueDependencyProperty">
            <summary>设置 DependencyObject.ClearValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ClearValueDependencyPropertyKey">
            <summary>设置 DependencyObject.ClearValue(DependencyPropertyKey key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.CoerceValueDependencyProperty">
            <summary>设置 DependencyObject.CoerceValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ContainsValueDependencyProperty">
            <summary>设置 DependencyObject.ContainsValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Debug_AssertNoInheritanceContextListeners">
            <summary>设置 DependencyObject.Debug_AssertNoInheritanceContextListeners() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.DependencyObjectTypeGet">
            <summary>设置 DependencyObject.get_DependencyObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.EffectiveValuesCountGet">
            <summary>设置 DependencyObject.get_EffectiveValuesCount() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.EffectiveValuesCountSetUInt32">
            <summary>设置 DependencyObject.set_EffectiveValuesCount(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.EffectiveValuesInitialSizeGet">
            <summary>设置 DependencyObject.get_EffectiveValuesInitialSize() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.EndPropertyInitialization">
            <summary>设置 DependencyObject.EndPropertyInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.EqualsObject">
            <summary>设置 DependencyObject.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_FrozenGet">
            <summary>设置 DependencyObject.get_Freezable_Frozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_FrozenSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_Frozen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_HasMultipleInheritanceContextsGet">
            <summary>设置 DependencyObject.get_Freezable_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_HasMultipleInheritanceContextsSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_HasMultipleInheritanceContexts(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingContextListGet">
            <summary>设置 DependencyObject.get_Freezable_UsingContextList() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingContextListSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingContextList(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingHandlerListGet">
            <summary>设置 DependencyObject.get_Freezable_UsingHandlerList() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingHandlerListSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingHandlerList(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingSingletonContextGet">
            <summary>设置 DependencyObject.get_Freezable_UsingSingletonContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingSingletonContextSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingSingletonContext(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingSingletonHandlerGet">
            <summary>设置 DependencyObject.get_Freezable_UsingSingletonHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Freezable_UsingSingletonHandlerSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingSingletonHandler(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.GetHashCode01">
            <summary>设置 DependencyObject.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.GetLocalValueEnumerator">
            <summary>设置 DependencyObject.GetLocalValueEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.GetValueDependencyProperty">
            <summary>设置 DependencyObject.GetValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.HasAnyExpression">
            <summary>设置 DependencyObject.HasAnyExpression() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.HasMultipleInheritanceContextsGet">
            <summary>设置 DependencyObject.get_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IAnimatable_HasAnimatedPropertiesGet">
            <summary>设置 DependencyObject.get_IAnimatable_HasAnimatedProperties() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IAnimatable_HasAnimatedPropertiesSetBoolean">
            <summary>设置 DependencyObject.set_IAnimatable_HasAnimatedProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritableEffectiveValuesCountGet">
            <summary>设置 DependencyObject.get_InheritableEffectiveValuesCount() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritableEffectiveValuesCountSetUInt32">
            <summary>设置 DependencyObject.set_InheritableEffectiveValuesCount(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritanceContextChangedAddEventHandler">
            <summary>设置 DependencyObject.add_InheritanceContextChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritanceContextChangedRemoveEventHandler">
            <summary>设置 DependencyObject.remove_InheritanceContextChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritanceContextGet">
            <summary>设置 DependencyObject.get_InheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InheritanceParentGet">
            <summary>设置 DependencyObject.get_InheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InvalidatePropertyDependencyProperty">
            <summary>设置 DependencyObject.InvalidateProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InvalidatePropertyDependencyPropertyBoolean">
            <summary>设置 DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.InvalidateSubPropertyDependencyProperty">
            <summary>设置 DependencyObject.InvalidateSubProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IsInheritanceContextSealedGet">
            <summary>设置 DependencyObject.get_IsInheritanceContextSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IsInheritanceContextSealedSetBoolean">
            <summary>设置 DependencyObject.set_IsInheritanceContextSealed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IsSealedGet">
            <summary>设置 DependencyObject.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.IsSelfInheritanceParentGet">
            <summary>设置 DependencyObject.get_IsSelfInheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.NotifyPropertyChangeDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.NotifySubPropertyChangeDependencyProperty">
            <summary>设置 DependencyObject.NotifySubPropertyChange(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.OnInheritanceContextChangedCoreEventArgs">
            <summary>设置 DependencyObject.OnInheritanceContextChangedCore(EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.OnInheritanceContextChangedEventArgs">
            <summary>设置 DependencyObject.OnInheritanceContextChanged(EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ProvideSelfAsInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.ProvideSelfAsInheritanceContext(DependencyObject doValue, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ProvideSelfAsInheritanceContextObjectDependencyProperty">
            <summary>设置 DependencyObject.ProvideSelfAsInheritanceContext(Object value, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ReadLocalValueDependencyProperty">
            <summary>设置 DependencyObject.ReadLocalValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.RemoveInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.RemoveSelfAsInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveSelfAsInheritanceContext(DependencyObject doValue, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.RemoveSelfAsInheritanceContextObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveSelfAsInheritanceContext(Object value, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.Seal">
            <summary>设置 DependencyObject.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetCurrentValueDependencyPropertyBoolean">
            <summary>设置 DependencyObject.SetCurrentValue(DependencyProperty dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetCurrentValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetCurrentValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetCurrentValueInternalDependencyPropertyObject">
            <summary>设置 DependencyObject.SetCurrentValueInternal(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetIsSelfInheritanceParent">
            <summary>设置 DependencyObject.SetIsSelfInheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetMutableDefaultValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetMutableDefaultValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetValueDependencyPropertyBoolean">
            <summary>设置 DependencyObject.SetValue(DependencyProperty dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetValueDependencyPropertyKeyBoolean">
            <summary>设置 DependencyObject.SetValue(DependencyPropertyKey dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetValueDependencyPropertyKeyObject">
            <summary>设置 DependencyObject.SetValue(DependencyPropertyKey key, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SetValueInternalDependencyPropertyObject">
            <summary>设置 DependencyObject.SetValueInternal(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ShouldProvideInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.ShouldProvideInheritanceContext(DependencyObject target, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.AllInstances.SynchronizeInheritanceParentDependencyObject">
            <summary>设置 DependencyObject.SynchronizeInheritanceParent(DependencyObject parent) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Animatable_IsResourceInvalidationNecessaryGet">
            <summary>设置 DependencyObject.get_Animatable_IsResourceInvalidationNecessary() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Animatable_IsResourceInvalidationNecessarySetBoolean">
            <summary>设置 DependencyObject.set_Animatable_IsResourceInvalidationNecessary(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.BeginPropertyInitialization">
            <summary>设置 DependencyObject.BeginPropertyInitialization() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.CanBeInheritanceContextGet">
            <summary>设置 DependencyObject.get_CanBeInheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.CanBeInheritanceContextSetBoolean">
            <summary>设置 DependencyObject.set_CanBeInheritanceContext(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ClearValueDependencyProperty">
            <summary>设置 DependencyObject.ClearValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ClearValueDependencyPropertyKey">
            <summary>设置 DependencyObject.ClearValue(DependencyPropertyKey key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.CoerceValueDependencyProperty">
            <summary>设置 DependencyObject.CoerceValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Constructor">
            <summary>设置 DependencyObject.DependencyObject() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ContainsValueDependencyProperty">
            <summary>设置 DependencyObject.ContainsValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Debug_AssertNoInheritanceContextListeners">
            <summary>设置 DependencyObject.Debug_AssertNoInheritanceContextListeners() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.DependencyObjectTypeGet">
            <summary>设置 DependencyObject.get_DependencyObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.EffectiveValuesCountGet">
            <summary>设置 DependencyObject.get_EffectiveValuesCount() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.EffectiveValuesCountSetUInt32">
            <summary>设置 DependencyObject.set_EffectiveValuesCount(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.EffectiveValuesInitialSizeGet">
            <summary>设置 DependencyObject.get_EffectiveValuesInitialSize() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.EndPropertyInitialization">
            <summary>设置 DependencyObject.EndPropertyInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.EqualsObject">
            <summary>设置 DependencyObject.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_FrozenGet">
            <summary>设置 DependencyObject.get_Freezable_Frozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_FrozenSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_Frozen(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_HasMultipleInheritanceContextsGet">
            <summary>设置 DependencyObject.get_Freezable_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_HasMultipleInheritanceContextsSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_HasMultipleInheritanceContexts(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingContextListGet">
            <summary>设置 DependencyObject.get_Freezable_UsingContextList() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingContextListSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingContextList(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingHandlerListGet">
            <summary>设置 DependencyObject.get_Freezable_UsingHandlerList() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingHandlerListSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingHandlerList(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingSingletonContextGet">
            <summary>设置 DependencyObject.get_Freezable_UsingSingletonContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingSingletonContextSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingSingletonContext(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingSingletonHandlerGet">
            <summary>设置 DependencyObject.get_Freezable_UsingSingletonHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Freezable_UsingSingletonHandlerSetBoolean">
            <summary>设置 DependencyObject.set_Freezable_UsingSingletonHandler(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.GetHashCode">
            <summary>设置 DependencyObject.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.GetLocalValueEnumerator">
            <summary>设置 DependencyObject.GetLocalValueEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.GetValueDependencyProperty">
            <summary>设置 DependencyObject.GetValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.HasAnyExpression">
            <summary>设置 DependencyObject.HasAnyExpression() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.HasMultipleInheritanceContextsGet">
            <summary>设置 DependencyObject.get_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IAnimatable_HasAnimatedPropertiesGet">
            <summary>设置 DependencyObject.get_IAnimatable_HasAnimatedProperties() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IAnimatable_HasAnimatedPropertiesSetBoolean">
            <summary>设置 DependencyObject.set_IAnimatable_HasAnimatedProperties(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritableEffectiveValuesCountGet">
            <summary>设置 DependencyObject.get_InheritableEffectiveValuesCount() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritableEffectiveValuesCountSetUInt32">
            <summary>设置 DependencyObject.set_InheritableEffectiveValuesCount(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritanceContextChangedAddEventHandler">
            <summary>设置 DependencyObject.add_InheritanceContextChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritanceContextChangedRemoveEventHandler">
            <summary>设置 DependencyObject.remove_InheritanceContextChanged(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritanceContextGet">
            <summary>设置 DependencyObject.get_InheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InheritanceParentGet">
            <summary>设置 DependencyObject.get_InheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InvalidatePropertyDependencyProperty">
            <summary>设置 DependencyObject.InvalidateProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InvalidatePropertyDependencyPropertyBoolean">
            <summary>设置 DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.InvalidateSubPropertyDependencyProperty">
            <summary>设置 DependencyObject.InvalidateSubProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IsInheritanceContextSealedGet">
            <summary>设置 DependencyObject.get_IsInheritanceContextSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IsInheritanceContextSealedSetBoolean">
            <summary>设置 DependencyObject.set_IsInheritanceContextSealed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IsSealedGet">
            <summary>设置 DependencyObject.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.IsSelfInheritanceParentGet">
            <summary>设置 DependencyObject.get_IsSelfInheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.NotifyPropertyChangeDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.NotifySubPropertyChangeDependencyProperty">
            <summary>设置 DependencyObject.NotifySubPropertyChange(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.OnInheritanceContextChangedCoreEventArgs">
            <summary>设置 DependencyObject.OnInheritanceContextChangedCore(EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.OnInheritanceContextChangedEventArgs">
            <summary>设置 DependencyObject.OnInheritanceContextChanged(EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ProvideSelfAsInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.ProvideSelfAsInheritanceContext(DependencyObject doValue, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ProvideSelfAsInheritanceContextObjectDependencyProperty">
            <summary>设置 DependencyObject.ProvideSelfAsInheritanceContext(Object value, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ReadLocalValueDependencyProperty">
            <summary>设置 DependencyObject.ReadLocalValue(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.RemoveInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.RemoveSelfAsInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveSelfAsInheritanceContext(DependencyObject doValue, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.RemoveSelfAsInheritanceContextObjectDependencyProperty">
            <summary>设置 DependencyObject.RemoveSelfAsInheritanceContext(Object value, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.Seal">
            <summary>设置 DependencyObject.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetCurrentValueDependencyPropertyBoolean">
            <summary>设置 DependencyObject.SetCurrentValue(DependencyProperty dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetCurrentValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetCurrentValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetCurrentValueInternalDependencyPropertyObject">
            <summary>设置 DependencyObject.SetCurrentValueInternal(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetIsSelfInheritanceParent">
            <summary>设置 DependencyObject.SetIsSelfInheritanceParent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetMutableDefaultValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetMutableDefaultValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetValueDependencyPropertyBoolean">
            <summary>设置 DependencyObject.SetValue(DependencyProperty dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetValueDependencyPropertyKeyBoolean">
            <summary>设置 DependencyObject.SetValue(DependencyPropertyKey dp, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetValueDependencyPropertyKeyObject">
            <summary>设置 DependencyObject.SetValue(DependencyPropertyKey key, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetValueDependencyPropertyObject">
            <summary>设置 DependencyObject.SetValue(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SetValueInternalDependencyPropertyObject">
            <summary>设置 DependencyObject.SetValueInternal(DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ShouldProvideInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 DependencyObject.ShouldProvideInheritanceContext(DependencyObject target, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.StaticConstructor">
            <summary>设置 DependencyObject.DependencyObject() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObject.SynchronizeInheritanceParentDependencyObject">
            <summary>设置 DependencyObject.SynchronizeInheritanceParent(DependencyObject parent) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyObjectType">
            <summary>System.Windows.DependencyObjectType 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObjectType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObjectType.#ctor(System.Windows.DependencyObjectType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyObjectType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.BaseTypeGet">
            <summary>设置 DependencyObjectType.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.GetHashCode01">
            <summary>设置 DependencyObjectType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.IdGet">
            <summary>设置 DependencyObjectType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.IsInstanceOfTypeDependencyObject">
            <summary>设置 DependencyObjectType.IsInstanceOfType(DependencyObject dependencyObject) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.IsSubclassOfDependencyObjectType">
            <summary>设置 DependencyObjectType.IsSubclassOf(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.NameGet">
            <summary>设置 DependencyObjectType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.AllInstances.SystemTypeGet">
            <summary>设置 DependencyObjectType.get_SystemType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.BaseTypeGet">
            <summary>设置 DependencyObjectType.get_BaseType() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObjectType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyObjectType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.Constructor">
            <summary>设置 DependencyObjectType.DependencyObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.FromSystemTypeInternalType">
            <summary>设置 DependencyObjectType.FromSystemTypeInternal(Type systemType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.FromSystemTypeType">
            <summary>设置 DependencyObjectType.FromSystemType(Type systemType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.GetHashCode">
            <summary>设置 DependencyObjectType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.IdGet">
            <summary>设置 DependencyObjectType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.IsInstanceOfTypeDependencyObject">
            <summary>设置 DependencyObjectType.IsInstanceOfType(DependencyObject dependencyObject) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.IsSubclassOfDependencyObjectType">
            <summary>设置 DependencyObjectType.IsSubclassOf(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.NameGet">
            <summary>设置 DependencyObjectType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.StaticConstructor">
            <summary>设置 DependencyObjectType.DependencyObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyObjectType.SystemTypeGet">
            <summary>设置 DependencyObjectType.get_SystemType() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyProperty">
            <summary>System.Windows.DependencyProperty 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyProperty.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyProperty.#ctor(System.Windows.DependencyProperty)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AddOwnerType">
            <summary>设置 DependencyProperty.AddOwner(Type ownerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AddOwnerTypePropertyMetadata">
            <summary>设置 DependencyProperty.AddOwner(Type ownerType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyProperty.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.AddOwnerType">
            <summary>设置 DependencyProperty.AddOwner(Type ownerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.AddOwnerTypePropertyMetadata">
            <summary>设置 DependencyProperty.AddOwner(Type ownerType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.Constructor">
            <summary>设置 DependencyProperty.DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.DefaultMetadataGet">
            <summary>设置 DependencyProperty.get_DefaultMetadata() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.DependencyPropertyKeyGet">
            <summary>设置 DependencyProperty.get_DependencyPropertyKey() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.DesignerCoerceValueCallbackGet">
            <summary>设置 DependencyProperty.get_DesignerCoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.DesignerCoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 DependencyProperty.set_DesignerCoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetDefaultValueDependencyObjectType">
            <summary>设置 DependencyProperty.GetDefaultValue(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetDefaultValueType">
            <summary>设置 DependencyProperty.GetDefaultValue(Type forType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetHashCode01">
            <summary>设置 DependencyProperty.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetMetadataDependencyObject">
            <summary>设置 DependencyProperty.GetMetadata(DependencyObject dependencyObject) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetMetadataDependencyObjectType">
            <summary>设置 DependencyProperty.GetMetadata(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GetMetadataType">
            <summary>设置 DependencyProperty.GetMetadata(Type forType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.GlobalIndexGet">
            <summary>设置 DependencyProperty.get_GlobalIndex() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsDefaultValueChangedGet">
            <summary>设置 DependencyProperty.get_IsDefaultValueChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsFreezableTypeGet">
            <summary>设置 DependencyProperty.get_IsFreezableType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsObjectTypeGet">
            <summary>设置 DependencyProperty.get_IsObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsPotentiallyInheritedGet">
            <summary>设置 DependencyProperty.get_IsPotentiallyInherited() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsPotentiallyUsingDefaultValueFactoryGet">
            <summary>设置 DependencyProperty.get_IsPotentiallyUsingDefaultValueFactory() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsStringTypeGet">
            <summary>设置 DependencyProperty.get_IsStringType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsValidTypeObject">
            <summary>设置 DependencyProperty.IsValidType(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsValidValueInternalObject">
            <summary>设置 DependencyProperty.IsValidValueInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsValidValueObject">
            <summary>设置 DependencyProperty.IsValidValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.IsValueTypeGet">
            <summary>设置 DependencyProperty.get_IsValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.NameGet">
            <summary>设置 DependencyProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.OverrideMetadataTypePropertyMetadata">
            <summary>设置 DependencyProperty.OverrideMetadata(Type forType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.OverrideMetadataTypePropertyMetadataDependencyPropertyKey">
            <summary>设置 DependencyProperty.OverrideMetadata(Type forType, PropertyMetadata typeMetadata, DependencyPropertyKey key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.OwnerTypeGet">
            <summary>设置 DependencyProperty.get_OwnerType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.PropertyTypeGet">
            <summary>设置 DependencyProperty.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.ReadOnlyGet">
            <summary>设置 DependencyProperty.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.ToString01">
            <summary>设置 DependencyProperty.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.ValidateFactoryDefaultValueObject">
            <summary>设置 DependencyProperty.ValidateFactoryDefaultValue(Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.ValidateValueCallbackGet">
            <summary>设置 DependencyProperty.get_ValidateValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.AllInstances.VerifyReadOnlyKeyDependencyPropertyKey">
            <summary>设置 DependencyProperty.VerifyReadOnlyKey(DependencyPropertyKey candidateKey) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyProperty.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyProperty.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.Constructor">
            <summary>设置 DependencyProperty.DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.DefaultMetadataGet">
            <summary>设置 DependencyProperty.get_DefaultMetadata() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.DependencyPropertyKeyGet">
            <summary>设置 DependencyProperty.get_DependencyPropertyKey() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.DesignerCoerceValueCallbackGet">
            <summary>设置 DependencyProperty.get_DesignerCoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.DesignerCoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 DependencyProperty.set_DesignerCoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.FromNameStringType">
            <summary>设置 DependencyProperty.FromName(String name, Type ownerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetDefaultValueDependencyObjectType">
            <summary>设置 DependencyProperty.GetDefaultValue(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetDefaultValueType">
            <summary>设置 DependencyProperty.GetDefaultValue(Type forType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetHashCode">
            <summary>设置 DependencyProperty.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetMetadataDependencyObject">
            <summary>设置 DependencyProperty.GetMetadata(DependencyObject dependencyObject) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetMetadataDependencyObjectType">
            <summary>设置 DependencyProperty.GetMetadata(DependencyObjectType dependencyObjectType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetMetadataType">
            <summary>设置 DependencyProperty.GetMetadata(Type forType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GetUniqueGlobalIndexTypeString">
            <summary>设置 DependencyProperty.GetUniqueGlobalIndex(Type ownerType, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.GlobalIndexGet">
            <summary>设置 DependencyProperty.get_GlobalIndex() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsDefaultValueChangedGet">
            <summary>设置 DependencyProperty.get_IsDefaultValueChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsFreezableTypeGet">
            <summary>设置 DependencyProperty.get_IsFreezableType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsObjectTypeGet">
            <summary>设置 DependencyProperty.get_IsObjectType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsPotentiallyInheritedGet">
            <summary>设置 DependencyProperty.get_IsPotentiallyInherited() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsPotentiallyUsingDefaultValueFactoryGet">
            <summary>设置 DependencyProperty.get_IsPotentiallyUsingDefaultValueFactory() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsStringTypeGet">
            <summary>设置 DependencyProperty.get_IsStringType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsValidTypeObject">
            <summary>设置 DependencyProperty.IsValidType(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsValidTypeObjectType">
            <summary>设置 DependencyProperty.IsValidType(Object value, Type propertyType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsValidValueInternalObject">
            <summary>设置 DependencyProperty.IsValidValueInternal(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsValidValueObject">
            <summary>设置 DependencyProperty.IsValidValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.IsValueTypeGet">
            <summary>设置 DependencyProperty.get_IsValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.NameGet">
            <summary>设置 DependencyProperty.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.OverrideMetadataTypePropertyMetadata">
            <summary>设置 DependencyProperty.OverrideMetadata(Type forType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.OverrideMetadataTypePropertyMetadataDependencyPropertyKey">
            <summary>设置 DependencyProperty.OverrideMetadata(Type forType, PropertyMetadata typeMetadata, DependencyPropertyKey key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.OwnerTypeGet">
            <summary>设置 DependencyProperty.get_OwnerType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.PropertyTypeGet">
            <summary>设置 DependencyProperty.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.ReadOnlyGet">
            <summary>设置 DependencyProperty.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterAttachedReadOnlyStringTypeTypePropertyMetadata">
            <summary>设置 DependencyProperty.RegisterAttachedReadOnly(String name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterAttachedReadOnlyStringTypeTypePropertyMetadataValidateValueCallback">
            <summary>设置 DependencyProperty.RegisterAttachedReadOnly(String name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, ValidateValueCallback validateValueCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterAttachedStringTypeType">
            <summary>设置 DependencyProperty.RegisterAttached(String name, Type propertyType, Type ownerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterAttachedStringTypeTypePropertyMetadata">
            <summary>设置 DependencyProperty.RegisterAttached(String name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterAttachedStringTypeTypePropertyMetadataValidateValueCallback">
            <summary>设置 DependencyProperty.RegisterAttached(String name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, ValidateValueCallback validateValueCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterReadOnlyStringTypeTypePropertyMetadata">
            <summary>设置 DependencyProperty.RegisterReadOnly(String name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterReadOnlyStringTypeTypePropertyMetadataValidateValueCallback">
            <summary>设置 DependencyProperty.RegisterReadOnly(String name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata, ValidateValueCallback validateValueCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterStringTypeType">
            <summary>设置 DependencyProperty.Register(String name, Type propertyType, Type ownerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterStringTypeTypePropertyMetadata">
            <summary>设置 DependencyProperty.Register(String name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisterStringTypeTypePropertyMetadataValidateValueCallback">
            <summary>设置 DependencyProperty.Register(String name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata, ValidateValueCallback validateValueCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisteredPropertiesGet">
            <summary>设置 DependencyProperty.get_RegisteredProperties() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.RegisteredPropertyCountGet">
            <summary>设置 DependencyProperty.get_RegisteredPropertyCount() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.StaticConstructor">
            <summary>设置 DependencyProperty.DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.ToString">
            <summary>设置 DependencyProperty.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.ValidateFactoryDefaultValueObject">
            <summary>设置 DependencyProperty.ValidateFactoryDefaultValue(Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.ValidateValueCallbackGet">
            <summary>设置 DependencyProperty.get_ValidateValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyProperty.VerifyReadOnlyKeyDependencyPropertyKey">
            <summary>设置 DependencyProperty.VerifyReadOnlyKey(DependencyPropertyKey candidateKey) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs">
            <summary>System.Windows.DependencyPropertyChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.EqualityOpDependencyPropertyChangedEventArgsDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs left, DependencyPropertyChangedEventArgs right) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyChangedEventArgs.InequalityOpDependencyPropertyChangedEventArgsDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs left, DependencyPropertyChangedEventArgs right) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyPropertyKey">
            <summary>System.Windows.DependencyPropertyKey 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyKey.#ctor(System.Windows.DependencyPropertyKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimDependencyPropertyKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.AllInstances.DependencyPropertyGet">
            <summary>设置 DependencyPropertyKey.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.AllInstances.OverrideMetadataTypePropertyMetadata">
            <summary>设置 DependencyPropertyKey.OverrideMetadata(Type forType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.AllInstances.SetDependencyPropertyDependencyProperty">
            <summary>设置 DependencyPropertyKey.SetDependencyProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimDependencyPropertyKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.ConstructorDependencyProperty">
            <summary>设置 DependencyPropertyKey.DependencyPropertyKey(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.DependencyPropertyGet">
            <summary>设置 DependencyPropertyKey.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.OverrideMetadataTypePropertyMetadata">
            <summary>设置 DependencyPropertyKey.OverrideMetadata(Type forType, PropertyMetadata typeMetadata) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimDependencyPropertyKey.SetDependencyPropertyDependencyProperty">
            <summary>设置 DependencyPropertyKey.SetDependencyProperty(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimExpression">
            <summary>System.Windows.Expression 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpression.#ctor(System.Windows.Expression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.AttachableGet">
            <summary>设置 Expression.get_Attachable() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.CopyDependencyObjectDependencyProperty">
            <summary>设置 Expression.Copy(DependencyObject targetObject, DependencyProperty targetDP) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.ForwardsInvalidationsGet">
            <summary>设置 Expression.get_ForwardsInvalidations() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.GetValueDependencyObjectDependencyProperty">
            <summary>设置 Expression.GetValue(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.HasBeenAttachedGet">
            <summary>设置 Expression.get_HasBeenAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.HasBeenDetachedGet">
            <summary>设置 Expression.get_HasBeenDetached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.MarkAttached">
            <summary>设置 Expression.MarkAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.MarkDetached">
            <summary>设置 Expression.MarkDetached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.OnAttachDependencyObjectDependencyProperty">
            <summary>设置 Expression.OnAttach(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.OnDetachDependencyObjectDependencyProperty">
            <summary>设置 Expression.OnDetach(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.OnPropertyInvalidationDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 Expression.OnPropertyInvalidation(DependencyObject d, DependencyPropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.SetValueDependencyObjectDependencyPropertyObject">
            <summary>设置 Expression.SetValue(DependencyObject d, DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.ShareableGet">
            <summary>设置 Expression.get_Shareable() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AllInstances.SupportsUnboundSourcesGet">
            <summary>设置 Expression.get_SupportsUnboundSources() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.AttachableGet">
            <summary>设置 Expression.get_Attachable() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.Constructor">
            <summary>设置 Expression.Expression() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.CopyDependencyObjectDependencyProperty">
            <summary>设置 Expression.Copy(DependencyObject targetObject, DependencyProperty targetDP) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.ForwardsInvalidationsGet">
            <summary>设置 Expression.get_ForwardsInvalidations() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.GetValueDependencyObjectDependencyProperty">
            <summary>设置 Expression.GetValue(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.HasBeenAttachedGet">
            <summary>设置 Expression.get_HasBeenAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.HasBeenDetachedGet">
            <summary>设置 Expression.get_HasBeenDetached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.MarkAttached">
            <summary>设置 Expression.MarkAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.MarkDetached">
            <summary>设置 Expression.MarkDetached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.OnAttachDependencyObjectDependencyProperty">
            <summary>设置 Expression.OnAttach(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.OnDetachDependencyObjectDependencyProperty">
            <summary>设置 Expression.OnDetach(DependencyObject d, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.OnPropertyInvalidationDependencyObjectDependencyPropertyChangedEventArgs">
            <summary>设置 Expression.OnPropertyInvalidation(DependencyObject d, DependencyPropertyChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.SetValueDependencyObjectDependencyPropertyObject">
            <summary>设置 Expression.SetValue(DependencyObject d, DependencyProperty dp, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.ShareableGet">
            <summary>设置 Expression.get_Shareable() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.StaticConstructor">
            <summary>设置 Expression.Expression() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpression.SupportsUnboundSourcesGet">
            <summary>设置 Expression.get_SupportsUnboundSources() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimExpressionConverter">
            <summary>System.Windows.ExpressionConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpressionConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpressionConverter.#ctor(System.Windows.ExpressionConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimExpressionConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ExpressionConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ExpressionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpressionConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimExpressionConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.Constructor">
            <summary>设置 ExpressionConverter.ExpressionConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ExpressionConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimExpressionConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ExpressionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimFreezable">
            <summary>System.Windows.Freezable 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimFreezable.#ctor(System.Windows.Freezable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AddContextInformationDependencyObjectDependencyProperty">
            <summary>设置 Freezable.AddContextInformation(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AddInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 Freezable.AddInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimFreezable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.AddContextInformationDependencyObjectDependencyProperty">
            <summary>设置 Freezable.AddContextInformation(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.AddInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 Freezable.AddInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CanFreezeGet">
            <summary>设置 Freezable.get_CanFreeze() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CanSealSystemWindowsISealableget">
            <summary>设置 Freezable.System.Windows.ISealable.get_CanSeal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ChangedAddEventHandler">
            <summary>设置 Freezable.add_Changed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ChangedInternalAddEventHandler">
            <summary>设置 Freezable.add_ChangedInternal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ChangedInternalRemoveEventHandler">
            <summary>设置 Freezable.remove_ChangedInternal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ChangedRemoveEventHandler">
            <summary>设置 Freezable.remove_Changed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ClearContextAndHandlers">
            <summary>设置 Freezable.ClearContextAndHandlers() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.Clone">
            <summary>设置 Freezable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CloneCurrentValue">
            <summary>设置 Freezable.CloneCurrentValue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.CreateInstance">
            <summary>设置 Freezable.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.FireChanged">
            <summary>设置 Freezable.FireChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.Freeze">
            <summary>设置 Freezable.Freeze() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.FreezeBoolean">
            <summary>设置 Freezable.Freeze(Boolean isChecking) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.GetAsFrozen">
            <summary>设置 Freezable.GetAsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.GetCurrentValueAsFrozen">
            <summary>设置 Freezable.GetCurrentValueAsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.HasMultipleInheritanceContextsGet">
            <summary>设置 Freezable.get_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.InheritanceContextGet">
            <summary>设置 Freezable.get_InheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.IsFrozenGet">
            <summary>设置 Freezable.get_IsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.IsFrozenInternalGet">
            <summary>设置 Freezable.get_IsFrozenInternal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.IsSealedSystemWindowsISealableget">
            <summary>设置 Freezable.System.Windows.ISealable.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.OnFreezablePropertyChangedDependencyObjectDependencyObject">
            <summary>设置 Freezable.OnFreezablePropertyChanged(DependencyObject oldValue, DependencyObject newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.OnFreezablePropertyChangedDependencyObjectDependencyObjectDependencyProperty">
            <summary>设置 Freezable.OnFreezablePropertyChanged(DependencyObject oldValue, DependencyObject newValue, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.ReadPreamble">
            <summary>设置 Freezable.ReadPreamble() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.RemoveInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 Freezable.RemoveInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.Seal">
            <summary>设置 Freezable.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.SystemWindowsISealableSeal">
            <summary>设置 Freezable.System.Windows.ISealable.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.WritePostscript">
            <summary>设置 Freezable.WritePostscript() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.AllInstances.WritePreamble">
            <summary>设置 Freezable.WritePreamble() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimFreezable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimFreezable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CanFreezeGet">
            <summary>设置 Freezable.get_CanFreeze() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CanSealSystemWindowsISealableget">
            <summary>设置 Freezable.System.Windows.ISealable.get_CanSeal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ChangedAddEventHandler">
            <summary>设置 Freezable.add_Changed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ChangedInternalAddEventHandler">
            <summary>设置 Freezable.add_ChangedInternal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ChangedInternalRemoveEventHandler">
            <summary>设置 Freezable.remove_ChangedInternal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ChangedRemoveEventHandler">
            <summary>设置 Freezable.remove_Changed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ClearContextAndHandlers">
            <summary>设置 Freezable.ClearContextAndHandlers() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.Clone">
            <summary>设置 Freezable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CloneCurrentValue">
            <summary>设置 Freezable.CloneCurrentValue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.Constructor">
            <summary>设置 Freezable.Freezable() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.CreateInstance">
            <summary>设置 Freezable.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.FireChanged">
            <summary>设置 Freezable.FireChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.Freeze">
            <summary>设置 Freezable.Freeze() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.FreezeBoolean">
            <summary>设置 Freezable.Freeze(Boolean isChecking) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.FreezeFreezableBoolean">
            <summary>设置 Freezable.Freeze(Freezable freezable, Boolean isChecking) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.GetAsFrozen">
            <summary>设置 Freezable.GetAsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.GetCurrentValueAsFrozen">
            <summary>设置 Freezable.GetCurrentValueAsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.HasMultipleInheritanceContextsGet">
            <summary>设置 Freezable.get_HasMultipleInheritanceContexts() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.InheritanceContextGet">
            <summary>设置 Freezable.get_InheritanceContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.IsFrozenGet">
            <summary>设置 Freezable.get_IsFrozen() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.IsFrozenInternalGet">
            <summary>设置 Freezable.get_IsFrozenInternal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.IsSealedSystemWindowsISealableget">
            <summary>设置 Freezable.System.Windows.ISealable.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.OnFreezablePropertyChangedDependencyObjectDependencyObject">
            <summary>设置 Freezable.OnFreezablePropertyChanged(DependencyObject oldValue, DependencyObject newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.OnFreezablePropertyChangedDependencyObjectDependencyObjectDependencyProperty">
            <summary>设置 Freezable.OnFreezablePropertyChanged(DependencyObject oldValue, DependencyObject newValue, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.ReadPreamble">
            <summary>设置 Freezable.ReadPreamble() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.RemoveInheritanceContextDependencyObjectDependencyProperty">
            <summary>设置 Freezable.RemoveInheritanceContext(DependencyObject context, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.Seal">
            <summary>设置 Freezable.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.StaticConstructor">
            <summary>设置 Freezable.Freezable() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.SystemWindowsISealableSeal">
            <summary>设置 Freezable.System.Windows.ISealable.Seal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.WritePostscript">
            <summary>设置 Freezable.WritePostscript() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimFreezable.WritePreamble">
            <summary>设置 Freezable.WritePreamble() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimInt32Rect">
            <summary>System.Windows.Int32Rect 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32Rect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimInt32Rect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32Rect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32Rect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.EmptyGet">
            <summary>设置 Int32Rect.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.EqualityOpInt32RectInt32Rect">
            <summary>设置 Int32Rect.op_Equality(Int32Rect int32Rect1, Int32Rect int32Rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.EqualsInt32RectInt32Rect">
            <summary>设置 Int32Rect.Equals(Int32Rect int32Rect1, Int32Rect int32Rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.InequalityOpInt32RectInt32Rect">
            <summary>设置 Int32Rect.op_Inequality(Int32Rect int32Rect1, Int32Rect int32Rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.ParseString">
            <summary>设置 Int32Rect.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32Rect.StaticConstructor">
            <summary>设置 Int32Rect.Int32Rect() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimInt32RectConverter">
            <summary>System.Windows.Int32RectConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32RectConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32RectConverter.#ctor(System.Windows.Int32RectConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimInt32RectConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 Int32RectConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 Int32RectConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 Int32RectConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 Int32RectConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32RectConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimInt32RectConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 Int32RectConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 Int32RectConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.Constructor">
            <summary>设置 Int32RectConverter.Int32RectConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 Int32RectConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimInt32RectConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 Int32RectConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimLocalValueEntry">
            <summary>System.Windows.LocalValueEntry 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimLocalValueEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEntry.EqualityOpLocalValueEntryLocalValueEntry">
            <summary>设置 LocalValueEntry.op_Equality(LocalValueEntry obj1, LocalValueEntry obj2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEntry.InequalityOpLocalValueEntryLocalValueEntry">
            <summary>设置 LocalValueEntry.op_Inequality(LocalValueEntry obj1, LocalValueEntry obj2) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimLocalValueEnumerator">
            <summary>System.Windows.LocalValueEnumerator 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimLocalValueEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimLocalValueEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEnumerator.EqualityOpLocalValueEnumeratorLocalValueEnumerator">
            <summary>设置 LocalValueEnumerator.op_Equality(LocalValueEnumerator obj1, LocalValueEnumerator obj2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimLocalValueEnumerator.InequalityOpLocalValueEnumeratorLocalValueEnumerator">
            <summary>设置 LocalValueEnumerator.op_Inequality(LocalValueEnumerator obj1, LocalValueEnumerator obj2) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimNameScope">
            <summary>System.Windows.NameScope 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.#ctor(System.Windows.NameScope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AddKeyValuePairOfStringObject">
            <summary>设置 NameScope.Add(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AddStringObject">
            <summary>设置 NameScope.Add(String key, Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimNameScope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.AddKeyValuePairOfStringObject">
            <summary>设置 NameScope.Add(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.AddStringObject">
            <summary>设置 NameScope.Add(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.Clear">
            <summary>设置 NameScope.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.ContainsKeyString">
            <summary>设置 NameScope.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.ContainsKeyValuePairOfStringObject">
            <summary>设置 NameScope.Contains(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>设置 NameScope.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.CountGet">
            <summary>设置 NameScope.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.FindNameString">
            <summary>设置 NameScope.FindName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.GetEnumerator">
            <summary>设置 NameScope.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.IsReadOnlyGet">
            <summary>设置 NameScope.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.ItemGetString">
            <summary>设置 NameScope.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.ItemSetStringObject">
            <summary>设置 NameScope.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.KeysGet">
            <summary>设置 NameScope.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.RegisterNameStringObject">
            <summary>设置 NameScope.RegisterName(String name, Object scopedElement) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.RemoveKeyValuePairOfStringObject">
            <summary>设置 NameScope.Remove(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.RemoveString">
            <summary>设置 NameScope.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>设置 NameScope.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 NameScope.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.TryGetValueStringObjectOut">
            <summary>设置 NameScope.TryGetValue(String key, Object&amp; value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.UnregisterNameString">
            <summary>设置 NameScope.UnregisterName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.AllInstances.ValuesGet">
            <summary>设置 NameScope.get_Values() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Windows.Markup.INameScope)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Windows.Markup.INameScopeDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimNameScope.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.Clear">
            <summary>设置 NameScope.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.Constructor">
            <summary>设置 NameScope.NameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.ContainsKeyString">
            <summary>设置 NameScope.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.ContainsKeyValuePairOfStringObject">
            <summary>设置 NameScope.Contains(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>设置 NameScope.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.CountGet">
            <summary>设置 NameScope.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.FindNameString">
            <summary>设置 NameScope.FindName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.GetEnumerator">
            <summary>设置 NameScope.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.GetNameScopeDependencyObject">
            <summary>设置 NameScope.GetNameScope(DependencyObject dependencyObject) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.IsReadOnlyGet">
            <summary>设置 NameScope.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.ItemGetString">
            <summary>设置 NameScope.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.ItemSetStringObject">
            <summary>设置 NameScope.set_Item(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.KeysGet">
            <summary>设置 NameScope.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.NameScopeFromObjectObject">
            <summary>设置 NameScope.NameScopeFromObject(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.RegisterNameStringObject">
            <summary>设置 NameScope.RegisterName(String name, Object scopedElement) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.RemoveKeyValuePairOfStringObject">
            <summary>设置 NameScope.Remove(KeyValuePair`2&lt;String,Object&gt; item) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.RemoveString">
            <summary>设置 NameScope.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.SetNameScopeDependencyObjectINameScope">
            <summary>设置 NameScope.SetNameScope(DependencyObject dependencyObject, INameScope value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.StaticConstructor">
            <summary>设置 NameScope.NameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>设置 NameScope.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 NameScope.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.TryGetValueStringObjectOut">
            <summary>设置 NameScope.TryGetValue(String key, Object&amp; value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.UnregisterNameString">
            <summary>设置 NameScope.UnregisterName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimNameScope.ValuesGet">
            <summary>设置 NameScope.get_Values() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPoint">
            <summary>System.Windows.Point 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.AddPointVector">
            <summary>设置 Point.Add(Point point, Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.AdditionOpPointVector">
            <summary>设置 Point.op_Addition(Point point, Vector vector) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.EqualityOpPointPoint">
            <summary>设置 Point.op_Equality(Point point1, Point point2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.EqualsPointPoint">
            <summary>设置 Point.Equals(Point point1, Point point2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.ExplicitOpPointSize">
            <summary>设置 Point.op_Explicit(Point point) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.ExplicitOpPointVector">
            <summary>设置 Point.op_Explicit(Point point) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.InequalityOpPointPoint">
            <summary>设置 Point.op_Inequality(Point point1, Point point2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.MultiplyOpPointMatrix">
            <summary>设置 Point.op_Multiply(Point point, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.MultiplyPointMatrix">
            <summary>设置 Point.Multiply(Point point, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.ParseString">
            <summary>设置 Point.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.SubtractPointPoint">
            <summary>设置 Point.Subtract(Point point1, Point point2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.SubtractPointVector">
            <summary>设置 Point.Subtract(Point point, Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.SubtractionOpPointPoint">
            <summary>设置 Point.op_Subtraction(Point point1, Point point2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPoint.SubtractionOpPointVector">
            <summary>设置 Point.op_Subtraction(Point point, Vector vector) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPointConverter">
            <summary>System.Windows.PointConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPointConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPointConverter.#ctor(System.Windows.PointConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPointConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 PointConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 PointConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 PointConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 PointConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPointConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPointConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 PointConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 PointConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.Constructor">
            <summary>设置 PointConverter.PointConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 PointConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPointConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 PointConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPropertyMetadata">
            <summary>System.Windows.PropertyMetadata 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPropertyMetadata.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPropertyMetadata.#ctor(System.Windows.PropertyMetadata)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimPropertyMetadata.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.ClearCachedDefaultValueDependencyObjectDependencyProperty">
            <summary>设置 PropertyMetadata.ClearCachedDefaultValue(DependencyObject owner, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.CoerceValueCallbackGet">
            <summary>设置 PropertyMetadata.get_CoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.CoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 PropertyMetadata.set_CoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.CopyDependencyProperty">
            <summary>设置 PropertyMetadata.Copy(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.CreateInstance">
            <summary>设置 PropertyMetadata.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.DefaultValueGet">
            <summary>设置 PropertyMetadata.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.DefaultValueSetObject">
            <summary>设置 PropertyMetadata.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.DefaultValueWasSet">
            <summary>设置 PropertyMetadata.DefaultValueWasSet() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.GetDefaultValueDependencyObjectDependencyProperty">
            <summary>设置 PropertyMetadata.GetDefaultValue(DependencyObject owner, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.InvokeMergePropertyMetadataDependencyProperty">
            <summary>设置 PropertyMetadata.InvokeMerge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.IsDefaultValueModifiedGet">
            <summary>设置 PropertyMetadata.get_IsDefaultValueModified() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.IsInheritedGet">
            <summary>设置 PropertyMetadata.get_IsInherited() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.IsInheritedSetBoolean">
            <summary>设置 PropertyMetadata.set_IsInherited(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.IsSealedGet">
            <summary>设置 PropertyMetadata.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.MergePropertyMetadataDependencyProperty">
            <summary>设置 PropertyMetadata.Merge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.OnApplyDependencyPropertyType">
            <summary>设置 PropertyMetadata.OnApply(DependencyProperty dp, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.PropertyChangedCallbackGet">
            <summary>设置 PropertyMetadata.get_PropertyChangedCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.PropertyChangedCallbackSetPropertyChangedCallback">
            <summary>设置 PropertyMetadata.set_PropertyChangedCallback(PropertyChangedCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.SealDependencyPropertyType">
            <summary>设置 PropertyMetadata.Seal(DependencyProperty dp, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.SealedGet">
            <summary>设置 PropertyMetadata.get_Sealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.SealedSetBoolean">
            <summary>设置 PropertyMetadata.set_Sealed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.AllInstances.UsingDefaultValueFactoryGet">
            <summary>设置 PropertyMetadata.get_UsingDefaultValueFactory() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPropertyMetadata.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimPropertyMetadata.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.ClearCachedDefaultValueDependencyObjectDependencyProperty">
            <summary>设置 PropertyMetadata.ClearCachedDefaultValue(DependencyObject owner, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.CoerceValueCallbackGet">
            <summary>设置 PropertyMetadata.get_CoerceValueCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.CoerceValueCallbackSetCoerceValueCallback">
            <summary>设置 PropertyMetadata.set_CoerceValueCallback(CoerceValueCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.Constructor">
            <summary>设置 PropertyMetadata.PropertyMetadata() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.ConstructorObject">
            <summary>设置 PropertyMetadata.PropertyMetadata(Object defaultValue) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.ConstructorObjectPropertyChangedCallback">
            <summary>设置 PropertyMetadata.PropertyMetadata(Object defaultValue, PropertyChangedCallback propertyChangedCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.ConstructorObjectPropertyChangedCallbackCoerceValueCallback">
            <summary>设置 PropertyMetadata.PropertyMetadata(Object defaultValue, PropertyChangedCallback propertyChangedCallback, CoerceValueCallback coerceValueCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.ConstructorPropertyChangedCallback">
            <summary>设置 PropertyMetadata.PropertyMetadata(PropertyChangedCallback propertyChangedCallback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.CopyDependencyProperty">
            <summary>设置 PropertyMetadata.Copy(DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.CreateInstance">
            <summary>设置 PropertyMetadata.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.DefaultValueGet">
            <summary>设置 PropertyMetadata.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.DefaultValueSetObject">
            <summary>设置 PropertyMetadata.set_DefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.DefaultValueWasSet">
            <summary>设置 PropertyMetadata.DefaultValueWasSet() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.GetDefaultValueDependencyObjectDependencyProperty">
            <summary>设置 PropertyMetadata.GetDefaultValue(DependencyObject owner, DependencyProperty property) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.InvokeMergePropertyMetadataDependencyProperty">
            <summary>设置 PropertyMetadata.InvokeMerge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.IsDefaultValueModifiedGet">
            <summary>设置 PropertyMetadata.get_IsDefaultValueModified() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.IsInheritedGet">
            <summary>设置 PropertyMetadata.get_IsInherited() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.IsInheritedSetBoolean">
            <summary>设置 PropertyMetadata.set_IsInherited(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.IsSealedGet">
            <summary>设置 PropertyMetadata.get_IsSealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.MergePropertyMetadataDependencyProperty">
            <summary>设置 PropertyMetadata.Merge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.OnApplyDependencyPropertyType">
            <summary>设置 PropertyMetadata.OnApply(DependencyProperty dp, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.PromoteAllCachedDefaultValuesDependencyObject">
            <summary>设置 PropertyMetadata.PromoteAllCachedDefaultValues(DependencyObject owner) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.PropertyChangedCallbackGet">
            <summary>设置 PropertyMetadata.get_PropertyChangedCallback() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.PropertyChangedCallbackSetPropertyChangedCallback">
            <summary>设置 PropertyMetadata.set_PropertyChangedCallback(PropertyChangedCallback value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.RemoveAllCachedDefaultValuesFreezable">
            <summary>设置 PropertyMetadata.RemoveAllCachedDefaultValues(Freezable owner) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.SealDependencyPropertyType">
            <summary>设置 PropertyMetadata.Seal(DependencyProperty dp, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.SealedGet">
            <summary>设置 PropertyMetadata.get_Sealed() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.SealedSetBoolean">
            <summary>设置 PropertyMetadata.set_Sealed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.StaticConstructor">
            <summary>设置 PropertyMetadata.PropertyMetadata() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimPropertyMetadata.UsingDefaultValueFactoryGet">
            <summary>设置 PropertyMetadata.get_UsingDefaultValueFactory() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimRect">
            <summary>System.Windows.Rect 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimRect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.EmptyGet">
            <summary>设置 Rect.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.EqualityOpRectRect">
            <summary>设置 Rect.op_Equality(Rect rect1, Rect rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.EqualsRectRect">
            <summary>设置 Rect.Equals(Rect rect1, Rect rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.InequalityOpRectRect">
            <summary>设置 Rect.op_Inequality(Rect rect1, Rect rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.InflateRectDoubleDouble">
            <summary>设置 Rect.Inflate(Rect rect, Double width, Double height) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.InflateRectSize">
            <summary>设置 Rect.Inflate(Rect rect, Size size) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.IntersectRectRect">
            <summary>设置 Rect.Intersect(Rect rect1, Rect rect2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.OffsetRectDoubleDouble">
            <summary>设置 Rect.Offset(Rect rect, Double offsetX, Double offsetY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.OffsetRectVector">
            <summary>设置 Rect.Offset(Rect rect, Vector offsetVector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.ParseString">
            <summary>设置 Rect.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.StaticConstructor">
            <summary>设置 Rect.Rect() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.TransformRectMatrix">
            <summary>设置 Rect.Transform(Rect rect, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.UnionRectPoint">
            <summary>设置 Rect.Union(Rect rect, Point point) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRect.UnionRectRect">
            <summary>设置 Rect.Union(Rect rect1, Rect rect2) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimRectConverter">
            <summary>System.Windows.RectConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRectConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRectConverter.#ctor(System.Windows.RectConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimRectConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 RectConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 RectConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 RectConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 RectConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRectConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimRectConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 RectConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 RectConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.Constructor">
            <summary>设置 RectConverter.RectConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 RectConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimRectConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 RectConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSize">
            <summary>System.Windows.Size 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSize.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSize.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSize.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSize.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.EmptyGet">
            <summary>设置 Size.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.EqualityOpSizeSize">
            <summary>设置 Size.op_Equality(Size size1, Size size2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.EqualsSizeSize">
            <summary>设置 Size.Equals(Size size1, Size size2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.ExplicitOpSizePoint">
            <summary>设置 Size.op_Explicit(Size size) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.ExplicitOpSizeVector">
            <summary>设置 Size.op_Explicit(Size size) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.InequalityOpSizeSize">
            <summary>设置 Size.op_Inequality(Size size1, Size size2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.ParseString">
            <summary>设置 Size.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSize.StaticConstructor">
            <summary>设置 Size.Size() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSizeConverter">
            <summary>System.Windows.SizeConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSizeConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSizeConverter.#ctor(System.Windows.SizeConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSizeConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 SizeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 SizeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 SizeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 SizeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSizeConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSizeConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 SizeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 SizeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.Constructor">
            <summary>设置 SizeConverter.SizeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 SizeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSizeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 SizeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSplashScreen">
            <summary>System.Windows.SplashScreen 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSplashScreen.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSplashScreen.#ctor(System.Windows.SplashScreen)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimSplashScreen.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.AllInstances.CloseTimeSpan">
            <summary>设置 SplashScreen.Close(TimeSpan fadeoutDuration) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.AllInstances.ShowBoolean">
            <summary>设置 SplashScreen.Show(Boolean autoClose) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.AllInstances.ShowBooleanBoolean">
            <summary>设置 SplashScreen.Show(Boolean autoClose, Boolean topMost) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSplashScreen.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimSplashScreen.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.CloseTimeSpan">
            <summary>设置 SplashScreen.Close(TimeSpan fadeoutDuration) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.ConstructorAssemblyString">
            <summary>设置 SplashScreen.SplashScreen(Assembly resourceAssembly, String resourceName) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.ConstructorString">
            <summary>设置 SplashScreen.SplashScreen(String resourceName) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.ShowBoolean">
            <summary>设置 SplashScreen.Show(Boolean autoClose) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimSplashScreen.ShowBooleanBoolean">
            <summary>设置 SplashScreen.Show(Boolean autoClose, Boolean topMost) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimVector">
            <summary>System.Windows.Vector 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.AddVectorPoint">
            <summary>设置 Vector.Add(Vector vector, Point point) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.AddVectorVector">
            <summary>设置 Vector.Add(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.AdditionOpVectorPoint">
            <summary>设置 Vector.op_Addition(Vector vector, Point point) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.AdditionOpVectorVector">
            <summary>设置 Vector.op_Addition(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimVector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.AngleBetweenVectorVector">
            <summary>设置 Vector.AngleBetween(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.CrossProductVectorVector">
            <summary>设置 Vector.CrossProduct(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.DeterminantVectorVector">
            <summary>设置 Vector.Determinant(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.DivideVectorDouble">
            <summary>设置 Vector.Divide(Vector vector, Double scalar) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.DivisionOpVectorDouble">
            <summary>设置 Vector.op_Division(Vector vector, Double scalar) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.EqualityOpVectorVector">
            <summary>设置 Vector.op_Equality(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.EqualsVectorVector">
            <summary>设置 Vector.Equals(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.ExplicitOpVectorPoint">
            <summary>设置 Vector.op_Explicit(Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.ExplicitOpVectorSize">
            <summary>设置 Vector.op_Explicit(Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.InequalityOpVectorVector">
            <summary>设置 Vector.op_Inequality(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyDoubleVector">
            <summary>设置 Vector.Multiply(Double scalar, Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyOpDoubleVector">
            <summary>设置 Vector.op_Multiply(Double scalar, Vector vector) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyOpVectorDouble">
            <summary>设置 Vector.op_Multiply(Vector vector, Double scalar) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyOpVectorMatrix">
            <summary>设置 Vector.op_Multiply(Vector vector, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyOpVectorVector">
            <summary>设置 Vector.op_Multiply(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyVectorDouble">
            <summary>设置 Vector.Multiply(Vector vector, Double scalar) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyVectorMatrix">
            <summary>设置 Vector.Multiply(Vector vector, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.MultiplyVectorVector">
            <summary>设置 Vector.Multiply(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.ParseString">
            <summary>设置 Vector.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.SubtractVectorVector">
            <summary>设置 Vector.Subtract(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.SubtractionOpVectorVector">
            <summary>设置 Vector.op_Subtraction(Vector vector1, Vector vector2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVector.UnaryNegationOpVector">
            <summary>设置 Vector.op_UnaryNegation(Vector vector) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimVectorConverter">
            <summary>System.Windows.VectorConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVectorConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVectorConverter.#ctor(System.Windows.VectorConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimVectorConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 VectorConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 VectorConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 VectorConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 VectorConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVectorConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimVectorConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 VectorConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 VectorConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.Constructor">
            <summary>设置 VectorConverter.VectorConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 VectorConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimVectorConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 VectorConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimWeakEventManager">
            <summary>System.Windows.WeakEventManager 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager.#ctor(System.Windows.WeakEventManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimWeakEventManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.DeliverEventObjectEventArgs">
            <summary>设置 WeakEventManager.DeliverEvent(Object sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ItemGetObject">
            <summary>设置 WeakEventManager.get_Item(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ItemSetObjectObject">
            <summary>设置 WeakEventManager.set_Item(Object source, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ProtectedAddHandlerObjectDelegate">
            <summary>设置 WeakEventManager.ProtectedAddHandler(Object source, Delegate handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ProtectedAddListenerObjectIWeakEventListener">
            <summary>设置 WeakEventManager.ProtectedAddListener(Object source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ProtectedRemoveHandlerObjectDelegate">
            <summary>设置 WeakEventManager.ProtectedRemoveHandler(Object source, Delegate handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ProtectedRemoveListenerObjectIWeakEventListener">
            <summary>设置 WeakEventManager.ProtectedRemoveListener(Object source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.PurgeInternalObjectObjectBoolean">
            <summary>设置 WeakEventManager.PurgeInternal(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.PurgeObjectObjectBoolean">
            <summary>设置 WeakEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ReadLockGet">
            <summary>设置 WeakEventManager.get_ReadLock() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.RemoveObject">
            <summary>设置 WeakEventManager.Remove(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.ScheduleCleanup">
            <summary>设置 WeakEventManager.ScheduleCleanup() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.AllInstances.WriteLockGet">
            <summary>设置 WeakEventManager.get_WriteLock() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.Cleanup">
            <summary>设置 WeakEventManager.Cleanup() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.Constructor">
            <summary>设置 WeakEventManager.WeakEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.DeliverEventMethodInfoGet">
            <summary>设置 WeakEventManager.get_DeliverEventMethodInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.DeliverEventObjectEventArgs">
            <summary>设置 WeakEventManager.DeliverEvent(Object sender, EventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.GetCurrentManagerType">
            <summary>设置 WeakEventManager.GetCurrentManager(Type managerType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.GetCurrentManagerTypeString">
            <summary>设置 WeakEventManager.GetCurrentManager(Type eventSourceType, String eventName) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ItemGetObject">
            <summary>设置 WeakEventManager.get_Item(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ItemSetObjectObject">
            <summary>设置 WeakEventManager.set_Item(Object source, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ProtectedAddHandlerObjectDelegate">
            <summary>设置 WeakEventManager.ProtectedAddHandler(Object source, Delegate handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ProtectedAddListenerObjectIWeakEventListener">
            <summary>设置 WeakEventManager.ProtectedAddListener(Object source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ProtectedRemoveHandlerObjectDelegate">
            <summary>设置 WeakEventManager.ProtectedRemoveHandler(Object source, Delegate handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ProtectedRemoveListenerObjectIWeakEventListener">
            <summary>设置 WeakEventManager.ProtectedRemoveListener(Object source, IWeakEventListener listener) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.PurgeInternalObjectObjectBoolean">
            <summary>设置 WeakEventManager.PurgeInternal(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.PurgeObjectObjectBoolean">
            <summary>设置 WeakEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ReadLockGet">
            <summary>设置 WeakEventManager.get_ReadLock() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.RemoveObject">
            <summary>设置 WeakEventManager.Remove(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.ScheduleCleanup">
            <summary>设置 WeakEventManager.ScheduleCleanup() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.SetCleanupEnabledBoolean">
            <summary>设置 WeakEventManager.SetCleanupEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.SetCurrentManagerTypeStringWeakEventManager">
            <summary>设置 WeakEventManager.SetCurrentManager(Type eventSourceType, String eventName, WeakEventManager manager) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.SetCurrentManagerTypeWeakEventManager">
            <summary>设置 WeakEventManager.SetCurrentManager(Type managerType, WeakEventManager manager) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.StaticConstructor">
            <summary>设置 WeakEventManager.WeakEventManager() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager.WriteLockGet">
            <summary>设置 WeakEventManager.get_WriteLock() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimWeakEventManager`2">
            <summary>System.Windows.WeakEventManager`2 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager`2.#ctor(System.Windows.WeakEventManager{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.AddHandlerT0StringEventHandlerOfT1">
            <summary>设置 WeakEventManager`2.AddHandler(!0 source, String eventName, EventHandler`1&lt;!1&gt; handler) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.ShimWeakEventManager`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.AllInstances.Constructor">
            <summary>设置 WeakEventManager`2.WeakEventManager`2() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.AllInstances.StartListeningObject">
            <summary>设置 WeakEventManager`2.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.AllInstances.StopListeningObject">
            <summary>设置 WeakEventManager`2.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.ShimWeakEventManager`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.Constructor">
            <summary>设置 WeakEventManager`2.WeakEventManager`2() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.RemoveHandlerT0StringEventHandlerOfT1">
            <summary>设置 WeakEventManager`2.RemoveHandler(!0 source, String eventName, EventHandler`1&lt;!1&gt; handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.StartListeningObject">
            <summary>设置 WeakEventManager`2.StartListening(Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Fakes.ShimWeakEventManager`2.StopListeningObject">
            <summary>设置 WeakEventManager`2.StopListening(Object source) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubDependencyObject">
            <summary>System.Windows.DependencyObject 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubDependencyObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubDependencyObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubDependencyObject.InitializeStub">
            <summary>初始化 type StubDependencyObject 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubDependencyObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubDependencyObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubDependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubDependencyObject.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubDependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubDependencyObject.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubExpressionConverter">
            <summary>System.Windows.ExpressionConverter 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubExpressionConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 ExpressionConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 ExpressionConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 ExpressionConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 ExpressionConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ExpressionConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 ExpressionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ExpressionConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.InitializeStub">
            <summary>初始化 type StubExpressionConverter 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubExpressionConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubExpressionConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubExpressionConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubExpressionConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubFreezable">
            <summary>System.Windows.Freezable 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubFreezable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.CloneCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.CloneCoreFreezable">
            <summary>设置 Freezable.CloneCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.CloneCurrentValueCore(System.Windows.Freezable)">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.CloneCurrentValueCoreFreezable">
            <summary>设置 Freezable.CloneCurrentValueCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.CreateInstanceCore">
            <summary>设置 Freezable.CreateInstanceCore() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.CreateInstanceCore01">
            <summary>设置 Freezable.CreateInstanceCore() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.FreezeCore(System.Boolean)">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.FreezeCoreBoolean">
            <summary>设置 Freezable.FreezeCore(Boolean isChecking) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.GetAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.GetAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.GetCurrentValueAsFrozenCoreFreezable">
            <summary>设置 Freezable.GetCurrentValueAsFrozenCore(Freezable sourceFreezable) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.InitializeStub">
            <summary>初始化 type StubFreezable 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubFreezable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubFreezable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.OnChanged">
            <summary>设置 Freezable.OnChanged() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.OnChanged01">
            <summary>设置 Freezable.OnChanged() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.OnPropertyChangedDependencyPropertyChangedEventArgs">
            <summary>设置 Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubFreezable.ShouldSerializeProperty(System.Windows.DependencyProperty)">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubFreezable.ShouldSerializePropertyDependencyProperty">
            <summary>设置 DependencyObject.ShouldSerializeProperty(DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubIWeakEventListener">
            <summary>System.Windows.IWeakEventListener 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubIWeakEventListener.#ctor">
            <summary>初始化 type StubIWeakEventListener 的新实例</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubIWeakEventListener.ReceiveWeakEventTypeObjectEventArgs">
            <summary>设置 IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubIWeakEventListener.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>设置 IWeakEventListener.ReceiveWeakEvent(Type managerType, Object sender, EventArgs e) 的 存根</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubNameScope">
            <summary>System.Windows.NameScope 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubNameScope.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubNameScope.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubNameScope.InitializeStub">
            <summary>初始化 type StubNameScope 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubNameScope.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubNameScope.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubPropertyMetadata">
            <summary>System.Windows.PropertyMetadata 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubPropertyMetadata.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.InitializeStub">
            <summary>初始化 type StubPropertyMetadata 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubPropertyMetadata.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubPropertyMetadata.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
            <summary>设置 PropertyMetadata.Merge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubPropertyMetadata.MergePropertyMetadataDependencyProperty">
            <summary>设置 PropertyMetadata.Merge(PropertyMetadata baseMetadata, DependencyProperty dp) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
            <summary>设置 PropertyMetadata.OnApply(DependencyProperty dp, Type targetType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubPropertyMetadata.OnApplyDependencyPropertyType">
            <summary>设置 PropertyMetadata.OnApply(DependencyProperty dp, Type targetType) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubSplashScreen">
            <summary>System.Windows.SplashScreen 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubSplashScreen.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubSplashScreen.#ctor(System.Reflection.Assembly,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubSplashScreen.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubSplashScreen.InitializeStub">
            <summary>初始化 type StubSplashScreen 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubSplashScreen.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubSplashScreen.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Fakes.StubWeakEventManager">
            <summary>System.Windows.WeakEventManager 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubWeakEventManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.InitializeStub">
            <summary>初始化 type StubWeakEventManager 的新实例</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubWeakEventManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Fakes.StubWeakEventManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.NewListenerList">
            <summary>设置 WeakEventManager.NewListenerList() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubWeakEventManager.NewListenerList01">
            <summary>设置 WeakEventManager.NewListenerList() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
            <summary>设置 WeakEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubWeakEventManager.PurgeObjectObjectBoolean">
            <summary>设置 WeakEventManager.Purge(Object source, Object data, Boolean purgeAll) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.StartListening(System.Object)">
            <summary>设置 WeakEventManager.StartListening(Object source) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubWeakEventManager.StartListeningObject">
            <summary>设置 WeakEventManager.StartListening(Object source) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Fakes.StubWeakEventManager.StopListening(System.Object)">
            <summary>设置 WeakEventManager.StopListening(Object source) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Fakes.StubWeakEventManager.StopListeningObject">
            <summary>设置 WeakEventManager.StopListening(Object source) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimKeyConverter">
            <summary>System.Windows.Input.KeyConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyConverter.#ctor(System.Windows.Input.KeyConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimKeyConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 KeyConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 KeyConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.Constructor">
            <summary>设置 KeyConverter.KeyConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 KeyConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 KeyConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimKeyInterop">
            <summary>System.Windows.Input.KeyInterop 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyInterop.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyInterop.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyInterop.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyInterop.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyInterop.KeyFromVirtualKeyInt32">
            <summary>设置 KeyInterop.KeyFromVirtualKey(Int32 virtualKey) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyInterop.VirtualKeyFromKeyKey">
            <summary>设置 KeyInterop.VirtualKeyFromKey(Key key) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimKeyValueSerializer">
            <summary>System.Windows.Input.KeyValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyValueSerializer.#ctor(System.Windows.Input.KeyValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimKeyValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimKeyValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.Constructor">
            <summary>设置 KeyValueSerializer.KeyValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimKeyValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimModifierKeysConverter">
            <summary>System.Windows.Input.ModifierKeysConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysConverter.#ctor(System.Windows.Input.ModifierKeysConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimModifierKeysConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ModifierKeysConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.Constructor">
            <summary>设置 ModifierKeysConverter.ModifierKeysConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ModifierKeysConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.IsDefinedModifierKeysModifierKeys">
            <summary>设置 ModifierKeysConverter.IsDefinedModifierKeys(ModifierKeys modifierKeys) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.MatchModifiersModifierKeys">
            <summary>设置 ModifierKeysConverter.MatchModifiers(ModifierKeys modifierKeys) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysConverter.StaticConstructor">
            <summary>设置 ModifierKeysConverter.ModifierKeysConverter() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer">
            <summary>System.Windows.Input.ModifierKeysValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.#ctor(System.Windows.Input.ModifierKeysValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.Constructor">
            <summary>设置 ModifierKeysValueSerializer.ModifierKeysValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimModifierKeysValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimTraversalRequest">
            <summary>System.Windows.Input.TraversalRequest 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimTraversalRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimTraversalRequest.#ctor(System.Windows.Input.TraversalRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.ShimTraversalRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.AllInstances.FocusNavigationDirectionGet">
            <summary>设置 TraversalRequest.get_FocusNavigationDirection() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.AllInstances.WrappedGet">
            <summary>设置 TraversalRequest.get_Wrapped() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.AllInstances.WrappedSetBoolean">
            <summary>设置 TraversalRequest.set_Wrapped(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimTraversalRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.ShimTraversalRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.ConstructorFocusNavigationDirection">
            <summary>设置 TraversalRequest.TraversalRequest(FocusNavigationDirection focusNavigationDirection) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.FocusNavigationDirectionGet">
            <summary>设置 TraversalRequest.get_FocusNavigationDirection() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.WrappedGet">
            <summary>设置 TraversalRequest.get_Wrapped() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.ShimTraversalRequest.WrappedSetBoolean">
            <summary>设置 TraversalRequest.set_Wrapped(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubKeyConverter">
            <summary>System.Windows.Input.KeyConverter 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 KeyConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 KeyConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 KeyConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 KeyConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 KeyConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 KeyConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 KeyConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.InitializeStub">
            <summary>初始化 type StubKeyConverter 的新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubKeyValueSerializer">
            <summary>System.Windows.Input.KeyValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 KeyValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 KeyValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 KeyValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 KeyValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 KeyValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.InitializeStub">
            <summary>初始化 type StubKeyValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubKeyValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubKeyValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubKeyValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubModifierKeysConverter">
            <summary>System.Windows.Input.ModifierKeysConverter 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 ModifierKeysConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 ModifierKeysConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object source) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 ModifierKeysConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 ModifierKeysConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.InitializeStub">
            <summary>初始化 type StubModifierKeysConverter 的新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubModifierKeysValueSerializer">
            <summary>System.Windows.Input.ModifierKeysValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ModifierKeysValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ModifierKeysValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ModifierKeysValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ModifierKeysValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ModifierKeysValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.InitializeStub">
            <summary>初始化 type StubModifierKeysValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Input.Fakes.StubModifierKeysValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Input.Fakes.StubTraversalRequest">
            <summary>System.Windows.Input.TraversalRequest 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubTraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubTraversalRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Input.Fakes.StubTraversalRequest.InitializeStub">
            <summary>初始化 type StubTraversalRequest 的新实例</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubTraversalRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Input.Fakes.StubTraversalRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Interop.Fakes.ShimComponentDispatcher">
            <summary>System.Windows.Interop.ComponentDispatcher 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimComponentDispatcher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimComponentDispatcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimComponentDispatcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.CriticalAddThreadPreprocessMessageHandlerFirstThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.CriticalAddThreadPreprocessMessageHandlerFirst(ThreadMessageEventHandler handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.CriticalPopModal">
            <summary>设置 ComponentDispatcher.CriticalPopModal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.CriticalPushModal">
            <summary>设置 ComponentDispatcher.CriticalPushModal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.CriticalRemoveThreadPreprocessMessageHandlerFirstThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.CriticalRemoveThreadPreprocessMessageHandlerFirst(ThreadMessageEventHandler handler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.CurrentKeyboardMessageGet">
            <summary>设置 ComponentDispatcher.get_CurrentKeyboardMessage() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.EnterThreadModalAddEventHandler">
            <summary>设置 ComponentDispatcher.add_EnterThreadModal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.EnterThreadModalRemoveEventHandler">
            <summary>设置 ComponentDispatcher.remove_EnterThreadModal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.IsThreadModalGet">
            <summary>设置 ComponentDispatcher.get_IsThreadModal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.LeaveThreadModalAddEventHandler">
            <summary>设置 ComponentDispatcher.add_LeaveThreadModal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.LeaveThreadModalRemoveEventHandler">
            <summary>设置 ComponentDispatcher.remove_LeaveThreadModal(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.PopModal">
            <summary>设置 ComponentDispatcher.PopModal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.PushModal">
            <summary>设置 ComponentDispatcher.PushModal() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.RaiseIdle">
            <summary>设置 ComponentDispatcher.RaiseIdle() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.RaiseThreadMessageMSGRef">
            <summary>设置 ComponentDispatcher.RaiseThreadMessage(MSG&amp; msg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.StaticConstructor">
            <summary>设置 ComponentDispatcher.ComponentDispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadFilterMessageAddThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.add_ThreadFilterMessage(ThreadMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadFilterMessageRemoveThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.remove_ThreadFilterMessage(ThreadMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadIdleAddEventHandler">
            <summary>设置 ComponentDispatcher.add_ThreadIdle(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadIdleRemoveEventHandler">
            <summary>设置 ComponentDispatcher.remove_ThreadIdle(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadPreprocessMessageAddThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.add_ThreadPreprocessMessage(ThreadMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.ThreadPreprocessMessageRemoveThreadMessageEventHandler">
            <summary>设置 ComponentDispatcher.remove_ThreadPreprocessMessage(ThreadMessageEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.UnsecureCurrentKeyboardMessageGet">
            <summary>设置 ComponentDispatcher.get_UnsecureCurrentKeyboardMessage() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimComponentDispatcher.UnsecureCurrentKeyboardMessageSetMSG">
            <summary>设置 ComponentDispatcher.set_UnsecureCurrentKeyboardMessage(MSG value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Interop.Fakes.ShimMSG">
            <summary>System.Windows.Interop.MSG 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimMSG.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Interop.Fakes.ShimMSG.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimMSG.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.ShimMSG.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.ShimMSG.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:System.Windows.Interop.Fakes.StubIKeyboardInputSink">
            <summary>System.Windows.Interop.IKeyboardInputSink 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.#ctor">
            <summary>初始化 type StubIKeyboardInputSink 的新实例</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.AttachBackingFieldToKeyboardInputSite">
            <summary>附加委托以将 StubIKeyboardInputSink.KeyboardInputSite 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.HasFocusWithin">
            <summary>设置 IKeyboardInputSink.HasFocusWithin() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
            <summary>设置 IKeyboardInputSink.get_KeyboardInputSite() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.KeyboardInputSiteGet">
            <summary>设置 IKeyboardInputSink.get_KeyboardInputSite() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.KeyboardInputSiteSetIKeyboardInputSite">
            <summary>设置 IKeyboardInputSink.set_KeyboardInputSite(IKeyboardInputSite value) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.OnMnemonicMSGRefModifierKeys">
            <summary>设置 IKeyboardInputSink.OnMnemonic(MSG&amp; msg, ModifierKeys modifiers) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.RegisterKeyboardInputSinkIKeyboardInputSink">
            <summary>设置 IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink sink) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
            <summary>设置 IKeyboardInputSink.HasFocusWithin() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
            <summary>设置 IKeyboardInputSink.OnMnemonic(MSG&amp; msg, ModifierKeys modifiers) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
            <summary>设置 IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink sink) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
            <summary>设置 IKeyboardInputSink.TabInto(TraversalRequest request) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
            <summary>设置 IKeyboardInputSink.TranslateAccelerator(MSG&amp; msg, ModifierKeys modifiers) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSink.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
            <summary>设置 IKeyboardInputSink.TranslateChar(MSG&amp; msg, ModifierKeys modifiers) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.TabIntoTraversalRequest">
            <summary>设置 IKeyboardInputSink.TabInto(TraversalRequest request) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.TranslateAcceleratorMSGRefModifierKeys">
            <summary>设置 IKeyboardInputSink.TranslateAccelerator(MSG&amp; msg, ModifierKeys modifiers) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSink.TranslateCharMSGRefModifierKeys">
            <summary>设置 IKeyboardInputSink.TranslateChar(MSG&amp; msg, ModifierKeys modifiers) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Interop.Fakes.StubIKeyboardInputSite">
            <summary>System.Windows.Interop.IKeyboardInputSite 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSite.#ctor">
            <summary>初始化 type StubIKeyboardInputSite 的新实例</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSite.OnNoMoreTabStopsTraversalRequest">
            <summary>设置 IKeyboardInputSite.OnNoMoreTabStops(TraversalRequest request) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Interop.Fakes.StubIKeyboardInputSite.System#Windows#Interop#IKeyboardInputSite#Sink">
            <summary>设置 IKeyboardInputSite.get_Sink() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSite.SinkGet">
            <summary>设置 IKeyboardInputSite.get_Sink() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSite.System#Windows#Interop#IKeyboardInputSite#OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
            <summary>设置 IKeyboardInputSite.OnNoMoreTabStops(TraversalRequest request) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Interop.Fakes.StubIKeyboardInputSite.System#Windows#Interop#IKeyboardInputSite#Unregister">
            <summary>设置 IKeyboardInputSite.Unregister() 的 存根</summary>
        </member>
        <member name="F:System.Windows.Interop.Fakes.StubIKeyboardInputSite.Unregister">
            <summary>设置 IKeyboardInputSite.Unregister() 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute">
            <summary>System.Windows.Markup.DesignerSerializationOptionsAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptionsAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.AllInstances.DesignerSerializationOptionsGet">
            <summary>设置 DesignerSerializationOptionsAttribute.get_DesignerSerializationOptions() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.ConstructorDesignerSerializationOptions">
            <summary>设置 DesignerSerializationOptionsAttribute.DesignerSerializationOptionsAttribute(DesignerSerializationOptions designerSerializationOptions) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDesignerSerializationOptionsAttribute.DesignerSerializationOptionsGet">
            <summary>设置 DesignerSerializationOptionsAttribute.get_DesignerSerializationOptions() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimInternalTypeHelper">
            <summary>System.Windows.Markup.InternalTypeHelper 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimInternalTypeHelper.#ctor(System.Windows.Markup.InternalTypeHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimInternalTypeHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimInternalTypeHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimInternalTypeHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimInternalTypeHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimInternalTypeHelper.Constructor">
            <summary>设置 InternalTypeHelper.InternalTypeHelper() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimServiceProviders">
            <summary>System.Windows.Markup.ServiceProviders 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimServiceProviders.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimServiceProviders.#ctor(System.Windows.Markup.ServiceProviders)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.AddServiceTypeObject">
            <summary>设置 ServiceProviders.AddService(Type serviceType, Object service) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimServiceProviders.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.AllInstances.AddServiceTypeObject">
            <summary>设置 ServiceProviders.AddService(Type serviceType, Object service) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.AllInstances.GetServiceType">
            <summary>设置 ServiceProviders.GetService(Type serviceType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimServiceProviders.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimServiceProviders.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimServiceProviders.Bind(System.IServiceProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.Constructor">
            <summary>设置 ServiceProviders.ServiceProviders() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimServiceProviders.GetServiceType">
            <summary>设置 ServiceProviders.GetService(Type serviceType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubInternalTypeHelper">
            <summary>System.Windows.Markup.InternalTypeHelper 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>设置 InternalTypeHelper.AddEventHandler(EventInfo eventInfo, Object target, Delegate handler) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubInternalTypeHelper.AddEventHandlerEventInfoObjectDelegate">
            <summary>设置 InternalTypeHelper.AddEventHandler(EventInfo eventInfo, Object target, Delegate handler) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubInternalTypeHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>设置 InternalTypeHelper.CreateDelegate(Type delegateType, Object target, String handler) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubInternalTypeHelper.CreateDelegateTypeObjectString">
            <summary>设置 InternalTypeHelper.CreateDelegate(Type delegateType, Object target, String handler) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>设置 InternalTypeHelper.CreateInstance(Type type, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubInternalTypeHelper.CreateInstanceTypeCultureInfo">
            <summary>设置 InternalTypeHelper.CreateInstance(Type type, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>设置 InternalTypeHelper.GetPropertyValue(PropertyInfo propertyInfo, Object target, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubInternalTypeHelper.GetPropertyValuePropertyInfoObjectCultureInfo">
            <summary>设置 InternalTypeHelper.GetPropertyValue(PropertyInfo propertyInfo, Object target, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.InitializeStub">
            <summary>初始化 type StubInternalTypeHelper 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubInternalTypeHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubInternalTypeHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>设置 InternalTypeHelper.SetPropertyValue(PropertyInfo propertyInfo, Object target, Object value, CultureInfo culture) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubInternalTypeHelper.SetPropertyValuePropertyInfoObjectObjectCultureInfo">
            <summary>设置 InternalTypeHelper.SetPropertyValue(PropertyInfo propertyInfo, Object target, Object value, CultureInfo culture) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubServiceProviders">
            <summary>System.Windows.Markup.ServiceProviders 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubServiceProviders.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubServiceProviders.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubServiceProviders.InitializeStub">
            <summary>初始化 type StubServiceProviders 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubServiceProviders.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubServiceProviders.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject">
            <summary>System.Windows.Markup.Primitives.MarkupObject 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.#ctor(System.Windows.Markup.Primitives.MarkupObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.AllInstances.PropertiesGet">
            <summary>设置 MarkupObject.get_Properties() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.Constructor">
            <summary>设置 MarkupObject.MarkupObject() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupObject.PropertiesGet">
            <summary>设置 MarkupObject.get_Properties() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty">
            <summary>System.Windows.Markup.Primitives.MarkupProperty 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.#ctor(System.Windows.Markup.Primitives.MarkupProperty)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.DependencyPropertyGet">
            <summary>设置 MarkupProperty.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsAttachedGet">
            <summary>设置 MarkupProperty.get_IsAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsCollectionPropertyGet">
            <summary>设置 MarkupProperty.get_IsCollectionProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsCompositeGet">
            <summary>设置 MarkupProperty.get_IsComposite() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsConstructorArgumentGet">
            <summary>设置 MarkupProperty.get_IsConstructorArgument() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsContentGet">
            <summary>设置 MarkupProperty.get_IsContent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsKeyGet">
            <summary>设置 MarkupProperty.get_IsKey() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.IsValueAsStringGet">
            <summary>设置 MarkupProperty.get_IsValueAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.PropertyDescriptorGet">
            <summary>设置 MarkupProperty.get_PropertyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.AllInstances.VerifyOnlySerializableTypes">
            <summary>设置 MarkupProperty.VerifyOnlySerializableTypes() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.Constructor">
            <summary>设置 MarkupProperty.MarkupProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.DependencyPropertyGet">
            <summary>设置 MarkupProperty.get_DependencyProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsAttachedGet">
            <summary>设置 MarkupProperty.get_IsAttached() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsCollectionPropertyGet">
            <summary>设置 MarkupProperty.get_IsCollectionProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsCompositeGet">
            <summary>设置 MarkupProperty.get_IsComposite() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsConstructorArgumentGet">
            <summary>设置 MarkupProperty.get_IsConstructorArgument() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsContentGet">
            <summary>设置 MarkupProperty.get_IsContent() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsKeyGet">
            <summary>设置 MarkupProperty.get_IsKey() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.IsValueAsStringGet">
            <summary>设置 MarkupProperty.get_IsValueAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.PropertyDescriptorGet">
            <summary>设置 MarkupProperty.get_PropertyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Primitives.Fakes.ShimMarkupProperty.VerifyOnlySerializableTypes">
            <summary>设置 MarkupProperty.VerifyOnlySerializableTypes() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer">
            <summary>System.Windows.Media.Converters.MatrixValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.#ctor(System.Windows.Media.Converters.MatrixValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.Constructor">
            <summary>设置 MatrixValueSerializer.MatrixValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.ShimMatrixValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer">
            <summary>System.Windows.Media.Converters.MatrixValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 MatrixValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 MatrixValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 MatrixValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 MatrixValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 MatrixValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.InitializeStub">
            <summary>初始化 type StubMatrixValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Media.Converters.Fakes.StubMatrixValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute">
            <summary>System.Windows.Media.DisableDpiAwarenessAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.#ctor(System.Windows.Media.DisableDpiAwarenessAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimDisableDpiAwarenessAttribute.Constructor">
            <summary>设置 DisableDpiAwarenessAttribute.DisableDpiAwarenessAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimMatrix">
            <summary>System.Windows.Media.Matrix 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrix.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimMatrix.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrix.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrix.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateRotationRadiansDouble">
            <summary>设置 Matrix.CreateRotationRadians(Double angle) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateRotationRadiansDoubleDoubleDouble">
            <summary>设置 Matrix.CreateRotationRadians(Double angle, Double centerX, Double centerY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateScalingDoubleDouble">
            <summary>设置 Matrix.CreateScaling(Double scaleX, Double scaleY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateScalingDoubleDoubleDoubleDouble">
            <summary>设置 Matrix.CreateScaling(Double scaleX, Double scaleY, Double centerX, Double centerY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateSkewRadiansDoubleDouble">
            <summary>设置 Matrix.CreateSkewRadians(Double skewX, Double skewY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.CreateTranslationDoubleDouble">
            <summary>设置 Matrix.CreateTranslation(Double offsetX, Double offsetY) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.EqualityOpMatrixMatrix">
            <summary>设置 Matrix.op_Equality(Matrix matrix1, Matrix matrix2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.EqualsMatrixMatrix">
            <summary>设置 Matrix.Equals(Matrix matrix1, Matrix matrix2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.IdentityGet">
            <summary>设置 Matrix.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.InequalityOpMatrixMatrix">
            <summary>设置 Matrix.op_Inequality(Matrix matrix1, Matrix matrix2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.MultiplyMatrixMatrix">
            <summary>设置 Matrix.Multiply(Matrix trans1, Matrix trans2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.MultiplyOpMatrixMatrix">
            <summary>设置 Matrix.op_Multiply(Matrix trans1, Matrix trans2) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.ParseString">
            <summary>设置 Matrix.Parse(String source) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrix.StaticConstructor">
            <summary>设置 Matrix.Matrix() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimMatrixConverter">
            <summary>System.Windows.Media.MatrixConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrixConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrixConverter.#ctor(System.Windows.Media.MatrixConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Media.Fakes.ShimMatrixConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 MatrixConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 MatrixConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 MatrixConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 MatrixConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrixConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Media.Fakes.ShimMatrixConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 MatrixConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 MatrixConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.Constructor">
            <summary>设置 MatrixConverter.MatrixConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 MatrixConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Media.Fakes.ShimMatrixConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 MatrixConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcher">
            <summary>System.Windows.Threading.Dispatcher 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.#ctor(System.Windows.Threading.Dispatcher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AbortDispatcherOperation">
            <summary>设置 Dispatcher.Abort(DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AddTimerDispatcherTimer">
            <summary>设置 Dispatcher.AddTimer(DispatcherTimer timer) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.AbortDispatcherOperation">
            <summary>设置 Dispatcher.Abort(DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.AddTimerDispatcherTimer">
            <summary>设置 Dispatcher.AddTimer(DispatcherTimer timer) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeDelegateDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(Delegate method, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeDelegateObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(Delegate method, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeDispatcherPriorityDelegate">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeDispatcherPriorityDelegateObject">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeDispatcherPriorityDelegateObjectObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.BeginInvokeShutdownDispatcherPriority">
            <summary>设置 Dispatcher.BeginInvokeShutdown(DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.CheckAccess">
            <summary>设置 Dispatcher.CheckAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.CriticalInvokeShutdown">
            <summary>设置 Dispatcher.CriticalInvokeShutdown() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.CriticalRequestProcessingBoolean">
            <summary>设置 Dispatcher.CriticalRequestProcessing(Boolean force) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.DisableProcessing">
            <summary>设置 Dispatcher.DisableProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.HasShutdownFinishedGet">
            <summary>设置 Dispatcher.get_HasShutdownFinished() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.HasShutdownStartedGet">
            <summary>设置 Dispatcher.get_HasShutdownStarted() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.HooksGet">
            <summary>设置 Dispatcher.get_Hooks() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InputManagerGet">
            <summary>设置 Dispatcher.get_InputManager() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InputManagerSetObject">
            <summary>设置 Dispatcher.set_InputManager(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InputMethodGet">
            <summary>设置 Dispatcher.get_InputMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InputMethodSetObject">
            <summary>设置 Dispatcher.set_InputMethod(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAction">
            <summary>设置 Dispatcher.Invoke(Action callback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeActionDispatcherPriority">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeActionDispatcherPriorityCancellationToken">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeActionDispatcherPriorityCancellationTokenTimeSpan">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority, CancellationToken cancellationToken, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncAction">
            <summary>设置 Dispatcher.InvokeAsync(Action callback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncActionDispatcherPriority">
            <summary>设置 Dispatcher.InvokeAsync(Action callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncActionDispatcherPriorityCancellationToken">
            <summary>设置 Dispatcher.InvokeAsync(Action callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncOf1FuncOfM0DispatcherPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeAsyncOf1FuncOfM0DispatcherPriorityCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDelegateDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDelegateObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDelegateTimeSpanDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, TimeSpan timeout, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDelegateTimeSpanObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, TimeSpan timeout, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityDelegate">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityDelegateObject">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityDelegateObjectObjectArray">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityTimeSpanDelegate">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityTimeSpanDelegateObject">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeDispatcherPriorityTimeSpanDelegateObjectObjectArray">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeOf1FuncOfM0DispatcherPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherPriority,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeOf1FuncOfM0DispatcherPriorityCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeOf1FuncOfM0DispatcherPriorityCancellationTokenTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Windows.Threading.Dispatcher,System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.InvokeShutdown">
            <summary>设置 Dispatcher.InvokeShutdown() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.IsTSFMessagePumpEnabledSetBoolean">
            <summary>设置 Dispatcher.set_IsTSFMessagePumpEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.LegacyInvokeImplDispatcherPriorityTimeSpanDelegateObjectInt32">
            <summary>设置 Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.PromoteTimersInt32">
            <summary>设置 Dispatcher.PromoteTimers(Int32 currentTimeInTicks) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.PtsCacheGet">
            <summary>设置 Dispatcher.get_PtsCache() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.PtsCacheSetObject">
            <summary>设置 Dispatcher.set_PtsCache(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.RemoveTimerDispatcherTimer">
            <summary>设置 Dispatcher.RemoveTimer(DispatcherTimer timer) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved0Get">
            <summary>设置 Dispatcher.get_Reserved0() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved0SetObject">
            <summary>设置 Dispatcher.set_Reserved0(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved1Get">
            <summary>设置 Dispatcher.get_Reserved1() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved1SetObject">
            <summary>设置 Dispatcher.set_Reserved1(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved2Get">
            <summary>设置 Dispatcher.get_Reserved2() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved2SetObject">
            <summary>设置 Dispatcher.set_Reserved2(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved3Get">
            <summary>设置 Dispatcher.get_Reserved3() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved3SetObject">
            <summary>设置 Dispatcher.set_Reserved3(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved4Get">
            <summary>设置 Dispatcher.get_Reserved4() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.Reserved4SetObject">
            <summary>设置 Dispatcher.set_Reserved4(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.SetPriorityDispatcherOperationDispatcherPriority">
            <summary>设置 Dispatcher.SetPriority(DispatcherOperation operation, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.ShutdownFinishedAddEventHandler">
            <summary>设置 Dispatcher.add_ShutdownFinished(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.ShutdownFinishedRemoveEventHandler">
            <summary>设置 Dispatcher.remove_ShutdownFinished(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.ShutdownStartedAddEventHandler">
            <summary>设置 Dispatcher.add_ShutdownStarted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.ShutdownStartedRemoveEventHandler">
            <summary>设置 Dispatcher.remove_ShutdownStarted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.UnhandledExceptionAddDispatcherUnhandledExceptionEventHandler">
            <summary>设置 Dispatcher.add_UnhandledException(DispatcherUnhandledExceptionEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.UnhandledExceptionFilterAddDispatcherUnhandledExceptionFilterEventHandler">
            <summary>设置 Dispatcher.add_UnhandledExceptionFilter(DispatcherUnhandledExceptionFilterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.UnhandledExceptionFilterRemoveDispatcherUnhandledExceptionFilterEventHandler">
            <summary>设置 Dispatcher.remove_UnhandledExceptionFilter(DispatcherUnhandledExceptionFilterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.UnhandledExceptionRemoveDispatcherUnhandledExceptionEventHandler">
            <summary>设置 Dispatcher.remove_UnhandledException(DispatcherUnhandledExceptionEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.UpdateWin32Timer">
            <summary>设置 Dispatcher.UpdateWin32Timer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.VerifyAccess">
            <summary>设置 Dispatcher.VerifyAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.AllInstances.WrappedInvokeDelegateObjectInt32Delegate">
            <summary>设置 Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeDelegateDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(Delegate method, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeDelegateObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(Delegate method, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeDispatcherPriorityDelegate">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeDispatcherPriorityDelegateObject">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeDispatcherPriorityDelegateObjectObjectArray">
            <summary>设置 Dispatcher.BeginInvoke(DispatcherPriority priority, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.BeginInvokeShutdownDispatcherPriority">
            <summary>设置 Dispatcher.BeginInvokeShutdown(DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.CheckAccess">
            <summary>设置 Dispatcher.CheckAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Constructor">
            <summary>设置 Dispatcher.Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.CriticalInvokeShutdown">
            <summary>设置 Dispatcher.CriticalInvokeShutdown() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.CriticalRequestProcessingBoolean">
            <summary>设置 Dispatcher.CriticalRequestProcessing(Boolean force) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.CurrentDispatcherGet">
            <summary>设置 Dispatcher.get_CurrentDispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.DisableProcessing">
            <summary>设置 Dispatcher.DisableProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ExitAllFrames">
            <summary>设置 Dispatcher.ExitAllFrames() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.HasShutdownFinishedGet">
            <summary>设置 Dispatcher.get_HasShutdownFinished() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.HasShutdownStartedGet">
            <summary>设置 Dispatcher.get_HasShutdownStarted() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.HooksGet">
            <summary>设置 Dispatcher.get_Hooks() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InputManagerGet">
            <summary>设置 Dispatcher.get_InputManager() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InputManagerSetObject">
            <summary>设置 Dispatcher.set_InputManager(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InputMethodGet">
            <summary>设置 Dispatcher.get_InputMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InputMethodSetObject">
            <summary>设置 Dispatcher.set_InputMethod(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAction">
            <summary>设置 Dispatcher.Invoke(Action callback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeActionDispatcherPriority">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeActionDispatcherPriorityCancellationToken">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeActionDispatcherPriorityCancellationTokenTimeSpan">
            <summary>设置 Dispatcher.Invoke(Action callback, DispatcherPriority priority, CancellationToken cancellationToken, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncAction">
            <summary>设置 Dispatcher.InvokeAsync(Action callback) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncActionDispatcherPriority">
            <summary>设置 Dispatcher.InvokeAsync(Action callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncActionDispatcherPriorityCancellationToken">
            <summary>设置 Dispatcher.InvokeAsync(Action callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncOf1FuncOfM0DispatcherPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeAsyncOf1FuncOfM0DispatcherPriorityCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.Windows.Threading.DispatcherOperation{``0}})">
            <summary>设置 Dispatcher.InvokeAsync(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDelegateDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDelegateObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDelegateTimeSpanDispatcherPriorityObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, TimeSpan timeout, DispatcherPriority priority, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDelegateTimeSpanObjectArray">
            <summary>设置 Dispatcher.Invoke(Delegate method, TimeSpan timeout, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityDelegate">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityDelegateObject">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityDelegateObjectObjectArray">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityTimeSpanDelegate">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityTimeSpanDelegateObject">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object arg) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeDispatcherPriorityTimeSpanDelegateObjectObjectArray">
            <summary>设置 Dispatcher.Invoke(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object arg, Object[] args) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeOf1FuncOfM0DispatcherPriority``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherPriority,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeOf1FuncOfM0DispatcherPriorityCancellationToken``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcher.InvokeOf1FuncOfM0DispatcherPriorityCancellationTokenTimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan,``0})">
            <summary>设置 Dispatcher.Invoke(Func`1&lt;!!0&gt; callback, DispatcherPriority priority, CancellationToken cancellationToken, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.InvokeShutdown">
            <summary>设置 Dispatcher.InvokeShutdown() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.IsTSFMessagePumpEnabledSetBoolean">
            <summary>设置 Dispatcher.set_IsTSFMessagePumpEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.LegacyInvokeImplDispatcherPriorityTimeSpanDelegateObjectInt32">
            <summary>设置 Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.PromoteTimersInt32">
            <summary>设置 Dispatcher.PromoteTimers(Int32 currentTimeInTicks) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.PtsCacheGet">
            <summary>设置 Dispatcher.get_PtsCache() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.PtsCacheSetObject">
            <summary>设置 Dispatcher.set_PtsCache(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.PushFrameDispatcherFrame">
            <summary>设置 Dispatcher.PushFrame(DispatcherFrame frame) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.RemoveTimerDispatcherTimer">
            <summary>设置 Dispatcher.RemoveTimer(DispatcherTimer timer) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved0Get">
            <summary>设置 Dispatcher.get_Reserved0() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved0SetObject">
            <summary>设置 Dispatcher.set_Reserved0(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved1Get">
            <summary>设置 Dispatcher.get_Reserved1() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved1SetObject">
            <summary>设置 Dispatcher.set_Reserved1(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved2Get">
            <summary>设置 Dispatcher.get_Reserved2() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved2SetObject">
            <summary>设置 Dispatcher.set_Reserved2(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved3Get">
            <summary>设置 Dispatcher.get_Reserved3() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved3SetObject">
            <summary>设置 Dispatcher.set_Reserved3(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved4Get">
            <summary>设置 Dispatcher.get_Reserved4() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Reserved4SetObject">
            <summary>设置 Dispatcher.set_Reserved4(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Run">
            <summary>设置 Dispatcher.Run() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.SetPriorityDispatcherOperationDispatcherPriority">
            <summary>设置 Dispatcher.SetPriority(DispatcherOperation operation, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ShutdownFinishedAddEventHandler">
            <summary>设置 Dispatcher.add_ShutdownFinished(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ShutdownFinishedRemoveEventHandler">
            <summary>设置 Dispatcher.remove_ShutdownFinished(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ShutdownStartedAddEventHandler">
            <summary>设置 Dispatcher.add_ShutdownStarted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ShutdownStartedRemoveEventHandler">
            <summary>设置 Dispatcher.remove_ShutdownStarted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.StaticConstructor">
            <summary>设置 Dispatcher.Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.UnhandledExceptionAddDispatcherUnhandledExceptionEventHandler">
            <summary>设置 Dispatcher.add_UnhandledException(DispatcherUnhandledExceptionEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.UnhandledExceptionFilterAddDispatcherUnhandledExceptionFilterEventHandler">
            <summary>设置 Dispatcher.add_UnhandledExceptionFilter(DispatcherUnhandledExceptionFilterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.UnhandledExceptionFilterRemoveDispatcherUnhandledExceptionFilterEventHandler">
            <summary>设置 Dispatcher.remove_UnhandledExceptionFilter(DispatcherUnhandledExceptionFilterEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.UnhandledExceptionRemoveDispatcherUnhandledExceptionEventHandler">
            <summary>设置 Dispatcher.remove_UnhandledException(DispatcherUnhandledExceptionEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.UpdateWin32Timer">
            <summary>设置 Dispatcher.UpdateWin32Timer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.ValidatePriorityDispatcherPriorityString">
            <summary>设置 Dispatcher.ValidatePriority(DispatcherPriority priority, String parameterName) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.VerifyAccess">
            <summary>设置 Dispatcher.VerifyAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.WrappedInvokeDelegateObjectInt32Delegate">
            <summary>设置 Dispatcher.WrappedInvoke(Delegate callback, Object args, Int32 numArgs, Delegate catchHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.Yield">
            <summary>设置 Dispatcher.Yield() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcher.YieldDispatcherPriority">
            <summary>设置 Dispatcher.Yield(DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherEventArgs">
            <summary>System.Windows.Threading.DispatcherEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.#ctor(System.Windows.Threading.DispatcherEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.AllInstances.DispatcherGet">
            <summary>设置 DispatcherEventArgs.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.ConstructorDispatcher">
            <summary>设置 DispatcherEventArgs.DispatcherEventArgs(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherEventArgs.DispatcherGet">
            <summary>设置 DispatcherEventArgs.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherFrame">
            <summary>System.Windows.Threading.DispatcherFrame 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherFrame.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherFrame.#ctor(System.Windows.Threading.DispatcherFrame)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherFrame.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.AllInstances.ContinueGet">
            <summary>设置 DispatcherFrame.get_Continue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.AllInstances.ContinueSetBoolean">
            <summary>设置 DispatcherFrame.set_Continue(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherFrame.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherFrame.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.Constructor">
            <summary>设置 DispatcherFrame.DispatcherFrame() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.ConstructorBoolean">
            <summary>设置 DispatcherFrame.DispatcherFrame(Boolean exitWhenRequested) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.ContinueGet">
            <summary>设置 DispatcherFrame.get_Continue() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.ContinueSetBoolean">
            <summary>设置 DispatcherFrame.set_Continue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherFrame.StaticConstructor">
            <summary>设置 DispatcherFrame.DispatcherFrame() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs">
            <summary>System.Windows.Threading.DispatcherHookEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherHookEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.AllInstances.DispatcherGet">
            <summary>设置 DispatcherHookEventArgs.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.AllInstances.OperationGet">
            <summary>设置 DispatcherHookEventArgs.get_Operation() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.ConstructorDispatcherOperation">
            <summary>设置 DispatcherHookEventArgs.DispatcherHookEventArgs(DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.DispatcherGet">
            <summary>设置 DispatcherHookEventArgs.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHookEventArgs.OperationGet">
            <summary>设置 DispatcherHookEventArgs.get_Operation() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherHooks">
            <summary>System.Windows.Threading.DispatcherHooks 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHooks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHooks.#ctor(System.Windows.Threading.DispatcherHooks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.DispatcherInactiveAddEventHandler">
            <summary>设置 DispatcherHooks.add_DispatcherInactive(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.DispatcherInactiveRemoveEventHandler">
            <summary>设置 DispatcherHooks.remove_DispatcherInactive(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationAbortedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationAborted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationAbortedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationAborted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationCompletedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationCompleted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationCompletedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationCompleted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationPostedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationPosted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationPostedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationPosted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationPriorityChangedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationPriorityChanged(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationPriorityChangedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationPriorityChanged(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationStartedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationStarted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.OperationStartedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationStarted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseDispatcherInactiveDispatcher">
            <summary>设置 DispatcherHooks.RaiseDispatcherInactive(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseOperationAbortedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationAborted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseOperationCompletedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationCompleted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseOperationPostedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationPosted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseOperationPriorityChangedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationPriorityChanged(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.AllInstances.RaiseOperationStartedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationStarted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHooks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherHooks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.Constructor">
            <summary>设置 DispatcherHooks.DispatcherHooks() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.DispatcherInactiveAddEventHandler">
            <summary>设置 DispatcherHooks.add_DispatcherInactive(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.DispatcherInactiveRemoveEventHandler">
            <summary>设置 DispatcherHooks.remove_DispatcherInactive(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationAbortedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationAborted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationAbortedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationAborted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationCompletedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationCompleted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationCompletedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationCompleted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationPostedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationPosted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationPostedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationPosted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationPriorityChangedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationPriorityChanged(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationPriorityChangedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationPriorityChanged(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationStartedAddDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.add_OperationStarted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.OperationStartedRemoveDispatcherHookEventHandler">
            <summary>设置 DispatcherHooks.remove_OperationStarted(DispatcherHookEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseDispatcherInactiveDispatcher">
            <summary>设置 DispatcherHooks.RaiseDispatcherInactive(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseOperationAbortedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationAborted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseOperationCompletedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationCompleted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseOperationPostedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationPosted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseOperationPriorityChangedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationPriorityChanged(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherHooks.RaiseOperationStartedDispatcherDispatcherOperation">
            <summary>设置 DispatcherHooks.RaiseOperationStarted(Dispatcher dispatcher, DispatcherOperation operation) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherObject">
            <summary>System.Windows.Threading.DispatcherObject 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherObject.#ctor(System.Windows.Threading.DispatcherObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.AllInstances.CheckAccess">
            <summary>设置 DispatcherObject.CheckAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.AllInstances.DetachFromDispatcher">
            <summary>设置 DispatcherObject.DetachFromDispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.AllInstances.DispatcherGet">
            <summary>设置 DispatcherObject.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.AllInstances.VerifyAccess">
            <summary>设置 DispatcherObject.VerifyAccess() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.CheckAccess">
            <summary>设置 DispatcherObject.CheckAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.Constructor">
            <summary>设置 DispatcherObject.DispatcherObject() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.DetachFromDispatcher">
            <summary>设置 DispatcherObject.DetachFromDispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.DispatcherGet">
            <summary>设置 DispatcherObject.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherObject.VerifyAccess">
            <summary>设置 DispatcherObject.VerifyAccess() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherOperation">
            <summary>System.Windows.Threading.DispatcherOperation 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation.#ctor(System.Windows.Threading.DispatcherOperation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.Abort">
            <summary>设置 DispatcherOperation.Abort() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AbortedAddEventHandler">
            <summary>设置 DispatcherOperation.add_Aborted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AbortedRemoveEventHandler">
            <summary>设置 DispatcherOperation.remove_Aborted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.Abort">
            <summary>设置 DispatcherOperation.Abort() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.AbortedAddEventHandler">
            <summary>设置 DispatcherOperation.add_Aborted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.AbortedRemoveEventHandler">
            <summary>设置 DispatcherOperation.remove_Aborted(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.CompletedAddEventHandler">
            <summary>设置 DispatcherOperation.add_Completed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.CompletedRemoveEventHandler">
            <summary>设置 DispatcherOperation.remove_Completed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.DispatcherGet">
            <summary>设置 DispatcherOperation.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.GetAwaiter">
            <summary>设置 DispatcherOperation.GetAwaiter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.IdGet">
            <summary>设置 DispatcherOperation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.Invoke">
            <summary>设置 DispatcherOperation.Invoke() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.InvokeCompletions">
            <summary>设置 DispatcherOperation.InvokeCompletions() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.InvokeDelegateCore">
            <summary>设置 DispatcherOperation.InvokeDelegateCore() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.NameGet">
            <summary>设置 DispatcherOperation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.PriorityGet">
            <summary>设置 DispatcherOperation.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.PrioritySetDispatcherPriority">
            <summary>设置 DispatcherOperation.set_Priority(DispatcherPriority value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.ResultGet">
            <summary>设置 DispatcherOperation.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.StatusGet">
            <summary>设置 DispatcherOperation.get_Status() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.TaskGet">
            <summary>设置 DispatcherOperation.get_Task() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.Wait">
            <summary>设置 DispatcherOperation.Wait() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.AllInstances.WaitTimeSpan">
            <summary>设置 DispatcherOperation.Wait(TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.CompletedAddEventHandler">
            <summary>设置 DispatcherOperation.add_Completed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.CompletedRemoveEventHandler">
            <summary>设置 DispatcherOperation.remove_Completed(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.ConstructorDispatcherDelegateDispatcherPriorityObjectInt32">
            <summary>设置 DispatcherOperation.DispatcherOperation(Dispatcher dispatcher, Delegate method, DispatcherPriority priority, Object args, Int32 numArgs) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.ConstructorDispatcherDispatcherPriorityAction">
            <summary>设置 DispatcherOperation.DispatcherOperation(Dispatcher dispatcher, DispatcherPriority priority, Action action) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.ConstructorDispatcherDispatcherPriorityDelegateObjectArray">
            <summary>设置 DispatcherOperation.DispatcherOperation(Dispatcher dispatcher, DispatcherPriority priority, Delegate method, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.DispatcherGet">
            <summary>设置 DispatcherOperation.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.GetAwaiter">
            <summary>设置 DispatcherOperation.GetAwaiter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.IdGet">
            <summary>设置 DispatcherOperation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.Invoke">
            <summary>设置 DispatcherOperation.Invoke() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.InvokeCompletions">
            <summary>设置 DispatcherOperation.InvokeCompletions() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.InvokeDelegateCore">
            <summary>设置 DispatcherOperation.InvokeDelegateCore() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.NameGet">
            <summary>设置 DispatcherOperation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.PriorityGet">
            <summary>设置 DispatcherOperation.get_Priority() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.PrioritySetDispatcherPriority">
            <summary>设置 DispatcherOperation.set_Priority(DispatcherPriority value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.ResultGet">
            <summary>设置 DispatcherOperation.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.StaticConstructor">
            <summary>设置 DispatcherOperation.DispatcherOperation() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.StatusGet">
            <summary>设置 DispatcherOperation.get_Status() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.TaskGet">
            <summary>设置 DispatcherOperation.get_Task() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.Wait">
            <summary>设置 DispatcherOperation.Wait() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation.WaitTimeSpan">
            <summary>设置 DispatcherOperation.Wait(TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherOperation`1">
            <summary>System.Windows.Threading.DispatcherOperation`1 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.#ctor(System.Windows.Threading.DispatcherOperation{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.AllInstances.GetAwaiter">
            <summary>设置 DispatcherOperation`1.GetAwaiter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.AllInstances.InvokeDelegateCore">
            <summary>设置 DispatcherOperation`1.InvokeDelegateCore() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.AllInstances.ResultGet">
            <summary>设置 DispatcherOperation`1.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.AllInstances.TaskGet">
            <summary>设置 DispatcherOperation`1.get_Task() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.ConstructorDispatcherDispatcherPriorityFuncOfT0">
            <summary>设置 DispatcherOperation`1.DispatcherOperation`1(Dispatcher dispatcher, DispatcherPriority priority, Func`1&lt;!0&gt; func) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.GetAwaiter">
            <summary>设置 DispatcherOperation`1.GetAwaiter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.InvokeDelegateCore">
            <summary>设置 DispatcherOperation`1.InvokeDelegateCore() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.ResultGet">
            <summary>设置 DispatcherOperation`1.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherOperation`1.TaskGet">
            <summary>设置 DispatcherOperation`1.get_Task() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable">
            <summary>System.Windows.Threading.DispatcherPriorityAwaitable 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaitable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter">
            <summary>System.Windows.Threading.DispatcherPriorityAwaiter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherPriorityAwaiter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled">
            <summary>System.Windows.Threading.DispatcherProcessingDisabled 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.EqualityOpDispatcherProcessingDisabledDispatcherProcessingDisabled">
            <summary>设置 DispatcherProcessingDisabled.op_Equality(DispatcherProcessingDisabled left, DispatcherProcessingDisabled right) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherProcessingDisabled.InequalityOpDispatcherProcessingDisabledDispatcherProcessingDisabled">
            <summary>设置 DispatcherProcessingDisabled.op_Inequality(DispatcherProcessingDisabled left, DispatcherProcessingDisabled right) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext">
            <summary>System.Windows.Threading.DispatcherSynchronizationContext 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.#ctor(System.Windows.Threading.DispatcherSynchronizationContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.AllInstances.CreateCopy">
            <summary>设置 DispatcherSynchronizationContext.CreateCopy() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.AllInstances.PostSendOrPostCallbackObject">
            <summary>设置 DispatcherSynchronizationContext.Post(SendOrPostCallback d, Object state) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.AllInstances.SendSendOrPostCallbackObject">
            <summary>设置 DispatcherSynchronizationContext.Send(SendOrPostCallback d, Object state) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.AllInstances.WaitIntPtrArrayBooleanInt32">
            <summary>设置 DispatcherSynchronizationContext.Wait(IntPtr[] waitHandles, Boolean waitAll, Int32 millisecondsTimeout) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.Constructor">
            <summary>设置 DispatcherSynchronizationContext.DispatcherSynchronizationContext() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.ConstructorDispatcher">
            <summary>设置 DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.ConstructorDispatcherDispatcherPriority">
            <summary>设置 DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher dispatcher, DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.CreateCopy">
            <summary>设置 DispatcherSynchronizationContext.CreateCopy() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.PostSendOrPostCallbackObject">
            <summary>设置 DispatcherSynchronizationContext.Post(SendOrPostCallback d, Object state) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.SendSendOrPostCallbackObject">
            <summary>设置 DispatcherSynchronizationContext.Send(SendOrPostCallback d, Object state) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherSynchronizationContext.WaitIntPtrArrayBooleanInt32">
            <summary>设置 DispatcherSynchronizationContext.Wait(IntPtr[] waitHandles, Boolean waitAll, Int32 millisecondsTimeout) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherTimer">
            <summary>System.Windows.Threading.DispatcherTimer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherTimer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherTimer.#ctor(System.Windows.Threading.DispatcherTimer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.DispatcherGet">
            <summary>设置 DispatcherTimer.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.IntervalGet">
            <summary>设置 DispatcherTimer.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.IntervalSetTimeSpan">
            <summary>设置 DispatcherTimer.set_Interval(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.IsEnabledGet">
            <summary>设置 DispatcherTimer.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.IsEnabledSetBoolean">
            <summary>设置 DispatcherTimer.set_IsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.Promote">
            <summary>设置 DispatcherTimer.Promote() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.Start">
            <summary>设置 DispatcherTimer.Start() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.Stop">
            <summary>设置 DispatcherTimer.Stop() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.TagGet">
            <summary>设置 DispatcherTimer.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.TagSetObject">
            <summary>设置 DispatcherTimer.set_Tag(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.TickAddEventHandler">
            <summary>设置 DispatcherTimer.add_Tick(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.AllInstances.TickRemoveEventHandler">
            <summary>设置 DispatcherTimer.remove_Tick(EventHandler value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherTimer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherTimer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.Constructor">
            <summary>设置 DispatcherTimer.DispatcherTimer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.ConstructorDispatcherPriority">
            <summary>设置 DispatcherTimer.DispatcherTimer(DispatcherPriority priority) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.ConstructorDispatcherPriorityDispatcher">
            <summary>设置 DispatcherTimer.DispatcherTimer(DispatcherPriority priority, Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.ConstructorTimeSpanDispatcherPriorityEventHandlerDispatcher">
            <summary>设置 DispatcherTimer.DispatcherTimer(TimeSpan interval, DispatcherPriority priority, EventHandler callback, Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.DispatcherGet">
            <summary>设置 DispatcherTimer.get_Dispatcher() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.IntervalGet">
            <summary>设置 DispatcherTimer.get_Interval() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.IntervalSetTimeSpan">
            <summary>设置 DispatcherTimer.set_Interval(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.IsEnabledGet">
            <summary>设置 DispatcherTimer.get_IsEnabled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.IsEnabledSetBoolean">
            <summary>设置 DispatcherTimer.set_IsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.Promote">
            <summary>设置 DispatcherTimer.Promote() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.Start">
            <summary>设置 DispatcherTimer.Start() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.Stop">
            <summary>设置 DispatcherTimer.Stop() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.TagGet">
            <summary>设置 DispatcherTimer.get_Tag() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.TagSetObject">
            <summary>设置 DispatcherTimer.set_Tag(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.TickAddEventHandler">
            <summary>设置 DispatcherTimer.add_Tick(EventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherTimer.TickRemoveEventHandler">
            <summary>设置 DispatcherTimer.remove_Tick(EventHandler value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs">
            <summary>System.Windows.Threading.DispatcherUnhandledExceptionEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.#ctor(System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.AllInstances.ExceptionGet">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.AllInstances.HandledGet">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.AllInstances.HandledSetBoolean">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.AllInstances.InitializeExceptionBoolean">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.Initialize(Exception exception, Boolean handled) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.ConstructorDispatcher">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.DispatcherUnhandledExceptionEventArgs(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.ExceptionGet">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.HandledGet">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.HandledSetBoolean">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionEventArgs.InitializeExceptionBoolean">
            <summary>设置 DispatcherUnhandledExceptionEventArgs.Initialize(Exception exception, Boolean handled) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs">
            <summary>System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.#ctor(System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.AllInstances.ExceptionGet">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.AllInstances.InitializeExceptionBoolean">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.Initialize(Exception exception, Boolean requestCatch) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.AllInstances.RequestCatchGet">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.get_RequestCatch() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.AllInstances.RequestCatchSetBoolean">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.set_RequestCatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.ConstructorDispatcher">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.DispatcherUnhandledExceptionFilterEventArgs(Dispatcher dispatcher) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.ExceptionGet">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.InitializeExceptionBoolean">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.Initialize(Exception exception, Boolean requestCatch) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.RequestCatchGet">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.get_RequestCatch() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.ShimDispatcherUnhandledExceptionFilterEventArgs.RequestCatchSetBoolean">
            <summary>设置 DispatcherUnhandledExceptionFilterEventArgs.set_RequestCatch(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.StubDispatcherFrame">
            <summary>System.Windows.Threading.DispatcherFrame 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherFrame.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherFrame.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherFrame.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherFrame.InitializeStub">
            <summary>初始化 type StubDispatcherFrame 的新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherFrame.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherFrame.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.StubDispatcherObject">
            <summary>System.Windows.Threading.DispatcherObject 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherObject.InitializeStub">
            <summary>初始化 type StubDispatcherObject 的新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Threading.Fakes.StubDispatcherTimer">
            <summary>System.Windows.Threading.DispatcherTimer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherTimer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherTimer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Threading.Fakes.StubDispatcherTimer.InitializeStub">
            <summary>初始化 type StubDispatcherTimer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherTimer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Threading.Fakes.StubDispatcherTimer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
