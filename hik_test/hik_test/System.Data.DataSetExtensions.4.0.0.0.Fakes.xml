<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.DataSetExtensions.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:System.Data.Fakes.ShimDataRowComparer">
            <summary>System.Data.DataRowComparer 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer.DefaultGet">
            <summary>设置 DataRowComparer.get_Default() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimDataRowComparer`1">
            <summary>System.Data.DataRowComparer`1 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer`1.#ctor(System.Data.DataRowComparer{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimDataRowComparer`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.AllInstances.EqualsT0T0">
            <summary>设置 DataRowComparer`1.Equals(!0 leftRow, !0 rightRow) 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.AllInstances.GetHashCodeT0">
            <summary>设置 DataRowComparer`1.GetHashCode(!0 row) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.Constructor">
            <summary>设置 DataRowComparer`1.DataRowComparer`1() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.DefaultGet">
            <summary>设置 DataRowComparer`1.get_Default() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.EqualsT0T0">
            <summary>设置 DataRowComparer`1.Equals(!0 leftRow, !0 rightRow) 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.GetHashCodeT0">
            <summary>设置 DataRowComparer`1.GetHashCode(!0 row) 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowComparer`1.StaticConstructor">
            <summary>设置 DataRowComparer`1.DataRowComparer`1() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimDataRowExtensions">
            <summary>System.Data.DataRowExtensions 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataRowExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowDataColumn``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.Data.DataColumn,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, DataColumn column) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowDataColumnDataRowVersion``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, DataColumn column, DataRowVersion version) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.Int32,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, Int32 columnIndex) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowInt32DataRowVersion``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.Int32,System.Data.DataRowVersion,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, Int32 columnIndex, DataRowVersion version) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.String,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, String columnName) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.FieldOf1DataRowStringDataRowVersion``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataRow,System.String,System.Data.DataRowVersion,``0})">
            <summary>设置 DataRowExtensions.Field(DataRow row, String columnName, DataRowVersion version) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.SetFieldOf1DataRowDataColumnM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.DataRow,System.Data.DataColumn,``0})">
            <summary>设置 DataRowExtensions.SetField(DataRow row, DataColumn column, !!0 value) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.SetFieldOf1DataRowInt32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.DataRow,System.Int32,``0})">
            <summary>设置 DataRowExtensions.SetField(DataRow row, Int32 columnIndex, !!0 value) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataRowExtensions.SetFieldOf1DataRowStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.DataRow,System.String,``0})">
            <summary>设置 DataRowExtensions.SetField(DataRow row, String columnName, !!0 value) 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimDataTableExtensions">
            <summary>System.Data.DataTableExtensions 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataTableExtensions.AsDataViewDataTable">
            <summary>设置 DataTableExtensions.AsDataView(DataTable table) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.AsDataViewOf1EnumerableRowCollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Data.DataView})">
            <summary>设置 DataTableExtensions.AsDataView(EnumerableRowCollection`1&lt;!!0&gt; source) 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataTableExtensions.AsEnumerableDataTable">
            <summary>设置 DataTableExtensions.AsEnumerable(DataTable source) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimDataTableExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.CopyToDataTableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Data.DataTable})">
            <summary>设置 DataTableExtensions.CopyToDataTable(IEnumerable`1&lt;!!0&gt; source) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.CopyToDataTableOf1IEnumerableOfM0DataTableLoadOption``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption})">
            <summary>设置 DataTableExtensions.CopyToDataTable(IEnumerable`1&lt;!!0&gt; source, DataTable table, LoadOption options) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimDataTableExtensions.CopyToDataTableOf1IEnumerableOfM0DataTableLoadOptionFillErrorEventHandler``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler})">
            <summary>设置 DataTableExtensions.CopyToDataTable(IEnumerable`1&lt;!!0&gt; source, DataTable table, LoadOption options, FillErrorEventHandler errorHandler) 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEnumerableRowCollection">
            <summary>System.Data.EnumerableRowCollection 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection.#ctor(System.Data.EnumerableRowCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEnumerableRowCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection.Constructor">
            <summary>设置 EnumerableRowCollection.EnumerableRowCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEnumerableRowCollection`1">
            <summary>System.Data.EnumerableRowCollection`1 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.#ctor(System.Data.EnumerableRowCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEnumerableRowCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.AllInstances.Constructor">
            <summary>设置 EnumerableRowCollection`1.EnumerableRowCollection`1() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.AllInstances.GetEnumerator">
            <summary>设置 EnumerableRowCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EnumerableRowCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.Constructor">
            <summary>设置 EnumerableRowCollection`1.EnumerableRowCollection`1() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.GetEnumerator">
            <summary>设置 EnumerableRowCollection`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 EnumerableRowCollection`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimEnumerableRowCollectionExtensions">
            <summary>System.Data.EnumerableRowCollectionExtensions 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.CastOf1EnumerableRowCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection,System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection source) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.OrderByDescendingOf2EnumerableRowCollectionOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.OrderByDescendingOf2EnumerableRowCollectionOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.OrderByOf2EnumerableRowCollectionOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.OrderByOf2EnumerableRowCollectionOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.SelectOf2EnumerableRowCollectionOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Data.EnumerableRowCollection{``1}})">
            <summary>设置 EnumerableRowCollectionExtensions.Select(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.ThenByDescendingOf2OrderedEnumerableRowCollectionOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.ThenByDescendingOf2OrderedEnumerableRowCollectionOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.ThenByOf2OrderedEnumerableRowCollectionOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.ThenByOf2OrderedEnumerableRowCollectionOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimEnumerableRowCollectionExtensions.WhereOf1EnumerableRowCollectionOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean},System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 EnumerableRowCollectionExtensions.Where(EnumerableRowCollection`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate) 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1">
            <summary>System.Data.OrderedEnumerableRowCollection`1 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.#ctor(System.Data.OrderedEnumerableRowCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.AllInstances.Constructor">
            <summary>设置 OrderedEnumerableRowCollection`1.OrderedEnumerableRowCollection`1() 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimOrderedEnumerableRowCollection`1.Constructor">
            <summary>设置 OrderedEnumerableRowCollection`1.OrderedEnumerableRowCollection`1() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimTypedTableBase`1">
            <summary>System.Data.TypedTableBase`1 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.#ctor(System.Data.TypedTableBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimTypedTableBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.AllInstances.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{`0},System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBase`1.Cast() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.AllInstances.GetEnumerator">
            <summary>设置 TypedTableBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 TypedTableBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.ComponentModel.IListSource)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.ComponentModel.ISupportInitialize)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.ComponentModel.ISupportInitializeNotification)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.IServiceProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBase`1.CastOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBase`1.Cast() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.Constructor">
            <summary>设置 TypedTableBase`1.TypedTableBase`1() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.ConstructorSerializationInfoStreamingContext">
            <summary>设置 TypedTableBase`1.TypedTableBase`1(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.GetEnumerator">
            <summary>设置 TypedTableBase`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBase`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 TypedTableBase`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.ShimTypedTableBaseExtensions">
            <summary>System.Data.TypedTableBaseExtensions 的填充码类型</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.AsEnumerableOf1TypedTableBaseOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.AsEnumerable(TypedTableBase`1&lt;!!0&gt; source) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Data.Fakes.ShimTypedTableBaseExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.ElementAtOrDefaultOf1TypedTableBaseOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Int32,``0})">
            <summary>设置 TypedTableBaseExtensions.ElementAtOrDefault(TypedTableBase`1&lt;!!0&gt; source, Int32 index) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.OrderByDescendingOf2TypedTableBaseOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.OrderByDescending(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.OrderByDescendingOf2TypedTableBaseOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.OrderByDescending(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.OrderByOf2TypedTableBaseOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.OrderBy(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.OrderByOf2TypedTableBaseOfM0FuncOfM0M1IComparerOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Data.OrderedEnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.OrderBy(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, IComparer`1&lt;!!1&gt; comparer) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.SelectOf2TypedTableBaseOfM0FuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Data.EnumerableRowCollection{``1}})">
            <summary>设置 TypedTableBaseExtensions.Select(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; selector) 的 填充码</summary>
        </member>
        <member name="M:System.Data.Fakes.ShimTypedTableBaseExtensions.WhereOf1TypedTableBaseOfM0FuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean},System.Data.EnumerableRowCollection{``0}})">
            <summary>设置 TypedTableBaseExtensions.Where(TypedTableBase`1&lt;!!0&gt; source, Func`2&lt;!!0,Boolean&gt; predicate) 的 填充码</summary>
        </member>
        <member name="T:System.Data.Fakes.StubTypedTableBase`1">
            <summary>System.Data.TypedTableBase`1 的存根类型</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.AttachBackingFieldToSite">
            <summary>附加委托以将 StubTypedTableBase.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.BeginInit">
            <summary>设置 DataTable.BeginInit() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.BeginInit01">
            <summary>设置 DataTable.BeginInit() 的 stub</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.Clone">
            <summary>设置 DataTable.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.Clone01">
            <summary>设置 DataTable.Clone() 的 stub</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.Container">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.ContainerGet">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.CreateInstance">
            <summary>设置 DataTable.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.CreateInstance01">
            <summary>设置 DataTable.CreateInstance() 的 stub</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.DesignMode">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.DesignModeGet">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.Dispose(System.Boolean)">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.DisposeBoolean">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.EndInit">
            <summary>设置 DataTable.EndInit() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.EndInit01">
            <summary>设置 DataTable.EndInit() 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 DataTable.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 DataTable.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.GetRowType">
            <summary>设置 DataTable.GetRowType() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.GetRowType01">
            <summary>设置 DataTable.GetRowType() 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.GetSchema">
            <summary>设置 DataTable.GetSchema() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.GetSchema01">
            <summary>设置 DataTable.GetSchema() 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.GetService(System.Type)">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.GetServiceType">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.InitializeStub">
            <summary>初始化 type StubTypedTableBase 的新实例</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
            <summary>设置 DataTable.Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.LoadIDataReaderLoadOptionFillErrorEventHandler">
            <summary>设置 DataTable.Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>设置 DataTable.NewRowFromBuilder(DataRowBuilder builder) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.NewRowFromBuilderDataRowBuilder">
            <summary>设置 DataTable.NewRowFromBuilder(DataRowBuilder builder) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
            <summary>设置 DataTable.OnColumnChanged(DataColumnChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnColumnChangedDataColumnChangeEventArgs">
            <summary>设置 DataTable.OnColumnChanged(DataColumnChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
            <summary>设置 DataTable.OnColumnChanging(DataColumnChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnColumnChangingDataColumnChangeEventArgs">
            <summary>设置 DataTable.OnColumnChanging(DataColumnChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 DataTable.OnPropertyChanging(PropertyChangedEventArgs pcevent) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnPropertyChangingPropertyChangedEventArgs">
            <summary>设置 DataTable.OnPropertyChanging(PropertyChangedEventArgs pcevent) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnRemoveColumn(System.Data.DataColumn)">
            <summary>设置 DataTable.OnRemoveColumn(DataColumn column) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnRemoveColumnDataColumn">
            <summary>设置 DataTable.OnRemoveColumn(DataColumn column) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowChanged(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnRowChangedDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowChanged(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowChanging(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnRowChangingDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowChanging(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowDeleted(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnRowDeletedDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowDeleted(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowDeleting(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnRowDeletingDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowDeleting(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnTableCleared(System.Data.DataTableClearEventArgs)">
            <summary>设置 DataTable.OnTableCleared(DataTableClearEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnTableClearedDataTableClearEventArgs">
            <summary>设置 DataTable.OnTableCleared(DataTableClearEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnTableClearing(System.Data.DataTableClearEventArgs)">
            <summary>设置 DataTable.OnTableClearing(DataTableClearEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnTableClearingDataTableClearEventArgs">
            <summary>设置 DataTable.OnTableClearing(DataTableClearEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
            <summary>设置 DataTable.OnTableNewRow(DataTableNewRowEventArgs e) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.OnTableNewRowDataTableNewRowEventArgs">
            <summary>设置 DataTable.OnTableNewRow(DataTableNewRowEventArgs e) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.ReadXmlSerializable(System.Xml.XmlReader)">
            <summary>设置 DataTable.ReadXmlSerializable(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.ReadXmlSerializableXmlReader">
            <summary>设置 DataTable.ReadXmlSerializable(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.Reset">
            <summary>设置 DataTable.Reset() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.Reset01">
            <summary>设置 DataTable.Reset() 的 stub</summary>
        </member>
        <member name="P:System.Data.Fakes.StubTypedTableBase`1.Site">
            <summary>设置 DataTable.get_Site() 的 stub</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.SiteGet">
            <summary>设置 DataTable.get_Site() 的 stub</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.SiteSetISite">
            <summary>设置 DataTable.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:System.Data.Fakes.StubTypedTableBase`1.ToString">
            <summary>设置 DataTable.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Data.Fakes.StubTypedTableBase`1.ToString01">
            <summary>设置 DataTable.ToString() 的 stub</summary>
        </member>
    </members>
</doc>
