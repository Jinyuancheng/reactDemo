<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Xaml.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Markup.Fakes.ShimAmbientAttribute">
            <summary>System.Windows.Markup.AmbientAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimAmbientAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimAmbientAttribute.#ctor(System.Windows.Markup.AmbientAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimAmbientAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimAmbientAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimAmbientAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimAmbientAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimAmbientAttribute.Constructor">
            <summary>设置 AmbientAttribute.AmbientAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimArrayExtension">
            <summary>System.Windows.Markup.ArrayExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimArrayExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimArrayExtension.#ctor(System.Windows.Markup.ArrayExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AddChildObject">
            <summary>设置 ArrayExtension.AddChild(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AddTextString">
            <summary>设置 ArrayExtension.AddText(String text) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.AddChildObject">
            <summary>设置 ArrayExtension.AddChild(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.AddTextString">
            <summary>设置 ArrayExtension.AddText(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.ItemsGet">
            <summary>设置 ArrayExtension.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.ProvideValueIServiceProvider">
            <summary>设置 ArrayExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.TypeGet">
            <summary>设置 ArrayExtension.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.AllInstances.TypeSetType">
            <summary>设置 ArrayExtension.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimArrayExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimArrayExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.Constructor">
            <summary>设置 ArrayExtension.ArrayExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.ConstructorArray">
            <summary>设置 ArrayExtension.ArrayExtension(Array elements) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.ConstructorType">
            <summary>设置 ArrayExtension.ArrayExtension(Type arrayType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.ItemsGet">
            <summary>设置 ArrayExtension.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.ProvideValueIServiceProvider">
            <summary>设置 ArrayExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.TypeGet">
            <summary>设置 ArrayExtension.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimArrayExtension.TypeSetType">
            <summary>设置 ArrayExtension.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute">
            <summary>System.Windows.Markup.ConstructorArgumentAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.#ctor(System.Windows.Markup.ConstructorArgumentAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.AllInstances.ArgumentNameGet">
            <summary>设置 ConstructorArgumentAttribute.get_ArgumentName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.ArgumentNameGet">
            <summary>设置 ConstructorArgumentAttribute.get_ArgumentName() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimConstructorArgumentAttribute.ConstructorString">
            <summary>设置 ConstructorArgumentAttribute.ConstructorArgumentAttribute(String argumentName) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimContentPropertyAttribute">
            <summary>System.Windows.Markup.ContentPropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.#ctor(System.Windows.Markup.ContentPropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.AllInstances.NameGet">
            <summary>设置 ContentPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.Constructor">
            <summary>设置 ContentPropertyAttribute.ContentPropertyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.ConstructorString">
            <summary>设置 ContentPropertyAttribute.ContentPropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentPropertyAttribute.NameGet">
            <summary>设置 ContentPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimContentWrapperAttribute">
            <summary>System.Windows.Markup.ContentWrapperAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.#ctor(System.Windows.Markup.ContentWrapperAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.AllInstances.ContentWrapperGet">
            <summary>设置 ContentWrapperAttribute.get_ContentWrapper() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.AllInstances.EqualsObject">
            <summary>设置 ContentWrapperAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.AllInstances.GetHashCode01">
            <summary>设置 ContentWrapperAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.AllInstances.TypeIdGet">
            <summary>设置 ContentWrapperAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.ConstructorType">
            <summary>设置 ContentWrapperAttribute.ContentWrapperAttribute(Type contentWrapper) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.ContentWrapperGet">
            <summary>设置 ContentWrapperAttribute.get_ContentWrapper() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.EqualsObject">
            <summary>设置 ContentWrapperAttribute.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.GetHashCode">
            <summary>设置 ContentWrapperAttribute.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimContentWrapperAttribute.TypeIdGet">
            <summary>设置 ContentWrapperAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer">
            <summary>System.Windows.Markup.DateTimeValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.#ctor(System.Windows.Markup.DateTimeValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.Constructor">
            <summary>设置 DateTimeValueSerializer.DateTimeValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDateTimeValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDependsOnAttribute">
            <summary>System.Windows.Markup.DependsOnAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDependsOnAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDependsOnAttribute.#ctor(System.Windows.Markup.DependsOnAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDependsOnAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.AllInstances.NameGet">
            <summary>设置 DependsOnAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.AllInstances.TypeIdGet">
            <summary>设置 DependsOnAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDependsOnAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDependsOnAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.ConstructorString">
            <summary>设置 DependsOnAttribute.DependsOnAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.NameGet">
            <summary>设置 DependsOnAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDependsOnAttribute.TypeIdGet">
            <summary>设置 DependsOnAttribute.get_TypeId() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute">
            <summary>System.Windows.Markup.DictionaryKeyPropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.#ctor(System.Windows.Markup.DictionaryKeyPropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.AllInstances.NameGet">
            <summary>设置 DictionaryKeyPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.ConstructorString">
            <summary>设置 DictionaryKeyPropertyAttribute.DictionaryKeyPropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimDictionaryKeyPropertyAttribute.NameGet">
            <summary>设置 DictionaryKeyPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMarkupExtension">
            <summary>System.Windows.Markup.MarkupExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtension.#ctor(System.Windows.Markup.MarkupExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMarkupExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtension.Constructor">
            <summary>设置 MarkupExtension.MarkupExtension() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute">
            <summary>System.Windows.Markup.MarkupExtensionReturnTypeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.#ctor(System.Windows.Markup.MarkupExtensionReturnTypeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.AllInstances.ExpressionTypeGet">
            <summary>设置 MarkupExtensionReturnTypeAttribute.get_ExpressionType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.AllInstances.ReturnTypeGet">
            <summary>设置 MarkupExtensionReturnTypeAttribute.get_ReturnType() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.Constructor">
            <summary>设置 MarkupExtensionReturnTypeAttribute.MarkupExtensionReturnTypeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.ConstructorType">
            <summary>设置 MarkupExtensionReturnTypeAttribute.MarkupExtensionReturnTypeAttribute(Type returnType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.ConstructorTypeType">
            <summary>设置 MarkupExtensionReturnTypeAttribute.MarkupExtensionReturnTypeAttribute(Type returnType, Type expressionType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.ExpressionTypeGet">
            <summary>设置 MarkupExtensionReturnTypeAttribute.get_ExpressionType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMarkupExtensionReturnTypeAttribute.ReturnTypeGet">
            <summary>设置 MarkupExtensionReturnTypeAttribute.get_ReturnType() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMemberDefinition">
            <summary>System.Windows.Markup.MemberDefinition 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMemberDefinition.#ctor(System.Windows.Markup.MemberDefinition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimMemberDefinition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMemberDefinition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimMemberDefinition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMemberDefinition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimMemberDefinition.Constructor">
            <summary>设置 MemberDefinition.MemberDefinition() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNameReferenceConverter">
            <summary>System.Windows.Markup.NameReferenceConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameReferenceConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameReferenceConverter.#ctor(System.Windows.Markup.NameReferenceConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNameReferenceConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 NameReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 NameReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameReferenceConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameReferenceConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.Constructor">
            <summary>设置 NameReferenceConverter.NameReferenceConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 NameReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameReferenceConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 NameReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute">
            <summary>System.Windows.Markup.NameScopePropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.#ctor(System.Windows.Markup.NameScopePropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.AllInstances.NameGet">
            <summary>设置 NameScopePropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.AllInstances.TypeGet">
            <summary>设置 NameScopePropertyAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.ConstructorString">
            <summary>设置 NameScopePropertyAttribute.NameScopePropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.ConstructorStringType">
            <summary>设置 NameScopePropertyAttribute.NameScopePropertyAttribute(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.NameGet">
            <summary>设置 NameScopePropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNameScopePropertyAttribute.TypeGet">
            <summary>设置 NameScopePropertyAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNullExtension">
            <summary>System.Windows.Markup.NullExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNullExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNullExtension.#ctor(System.Windows.Markup.NullExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimNullExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNullExtension.AllInstances.ProvideValueIServiceProvider">
            <summary>设置 NullExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNullExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimNullExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNullExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNullExtension.Constructor">
            <summary>设置 NullExtension.NullExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimNullExtension.ProvideValueIServiceProvider">
            <summary>设置 NullExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimPropertyDefinition">
            <summary>System.Windows.Markup.PropertyDefinition 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimPropertyDefinition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimPropertyDefinition.#ctor(System.Windows.Markup.PropertyDefinition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.AttributesGet">
            <summary>设置 PropertyDefinition.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.ModifierGet">
            <summary>设置 PropertyDefinition.get_Modifier() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.ModifierSetString">
            <summary>设置 PropertyDefinition.set_Modifier(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.NameGet">
            <summary>设置 PropertyDefinition.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.NameSetString">
            <summary>设置 PropertyDefinition.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.TypeGet">
            <summary>设置 PropertyDefinition.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AllInstances.TypeSetXamlType">
            <summary>设置 PropertyDefinition.set_Type(XamlType value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.AttributesGet">
            <summary>设置 PropertyDefinition.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimPropertyDefinition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimPropertyDefinition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.Constructor">
            <summary>设置 PropertyDefinition.PropertyDefinition() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.ModifierGet">
            <summary>设置 PropertyDefinition.get_Modifier() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.ModifierSetString">
            <summary>设置 PropertyDefinition.set_Modifier(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.NameGet">
            <summary>设置 PropertyDefinition.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.NameSetString">
            <summary>设置 PropertyDefinition.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.TypeGet">
            <summary>设置 PropertyDefinition.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimPropertyDefinition.TypeSetXamlType">
            <summary>设置 PropertyDefinition.set_Type(XamlType value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimReference">
            <summary>System.Windows.Markup.Reference 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimReference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimReference.#ctor(System.Windows.Markup.Reference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimReference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.AllInstances.NameGet">
            <summary>设置 Reference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.AllInstances.NameSetString">
            <summary>设置 Reference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.AllInstances.ProvideValueIServiceProvider">
            <summary>设置 Reference.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimReference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimReference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.Constructor">
            <summary>设置 Reference.Reference() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.ConstructorString">
            <summary>设置 Reference.Reference(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.NameGet">
            <summary>设置 Reference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.NameSetString">
            <summary>设置 Reference.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimReference.ProvideValueIServiceProvider">
            <summary>设置 Reference.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute">
            <summary>System.Windows.Markup.RootNamespaceAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.#ctor(System.Windows.Markup.RootNamespaceAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.AllInstances.NamespaceGet">
            <summary>设置 RootNamespaceAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.ConstructorString">
            <summary>设置 RootNamespaceAttribute.RootNamespaceAttribute(String nameSpace) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRootNamespaceAttribute.NamespaceGet">
            <summary>设置 RootNamespaceAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute">
            <summary>System.Windows.Markup.RuntimeNamePropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.#ctor(System.Windows.Markup.RuntimeNamePropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.AllInstances.NameGet">
            <summary>设置 RuntimeNamePropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.ConstructorString">
            <summary>设置 RuntimeNamePropertyAttribute.RuntimeNamePropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimRuntimeNamePropertyAttribute.NameGet">
            <summary>设置 RuntimeNamePropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimStaticExtension">
            <summary>System.Windows.Markup.StaticExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimStaticExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimStaticExtension.#ctor(System.Windows.Markup.StaticExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances.MemberGet">
            <summary>设置 StaticExtension.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances.MemberSetString">
            <summary>设置 StaticExtension.set_Member(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances.MemberTypeGet">
            <summary>设置 StaticExtension.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances.MemberTypeSetType">
            <summary>设置 StaticExtension.set_MemberType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.AllInstances.ProvideValueIServiceProvider">
            <summary>设置 StaticExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimStaticExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimStaticExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.Constructor">
            <summary>设置 StaticExtension.StaticExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.ConstructorString">
            <summary>设置 StaticExtension.StaticExtension(String member) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.MemberGet">
            <summary>设置 StaticExtension.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.MemberSetString">
            <summary>设置 StaticExtension.set_Member(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.MemberTypeGet">
            <summary>设置 StaticExtension.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.MemberTypeSetType">
            <summary>设置 StaticExtension.set_MemberType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimStaticExtension.ProvideValueIServiceProvider">
            <summary>设置 StaticExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute">
            <summary>System.Windows.Markup.TrimSurroundingWhitespaceAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.#ctor(System.Windows.Markup.TrimSurroundingWhitespaceAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTrimSurroundingWhitespaceAttribute.Constructor">
            <summary>设置 TrimSurroundingWhitespaceAttribute.TrimSurroundingWhitespaceAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimTypeExtension">
            <summary>System.Windows.Markup.TypeExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTypeExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTypeExtension.#ctor(System.Windows.Markup.TypeExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances.ProvideValueIServiceProvider">
            <summary>设置 TypeExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances.TypeGet">
            <summary>设置 TypeExtension.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances.TypeNameGet">
            <summary>设置 TypeExtension.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances.TypeNameSetString">
            <summary>设置 TypeExtension.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.AllInstances.TypeSetType">
            <summary>设置 TypeExtension.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTypeExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimTypeExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.Constructor">
            <summary>设置 TypeExtension.TypeExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.ConstructorString">
            <summary>设置 TypeExtension.TypeExtension(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.ConstructorType">
            <summary>设置 TypeExtension.TypeExtension(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.ProvideValueIServiceProvider">
            <summary>设置 TypeExtension.ProvideValue(IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.TypeGet">
            <summary>设置 TypeExtension.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.TypeNameGet">
            <summary>设置 TypeExtension.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.TypeNameSetString">
            <summary>设置 TypeExtension.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimTypeExtension.TypeSetType">
            <summary>设置 TypeExtension.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimUidPropertyAttribute">
            <summary>System.Windows.Markup.UidPropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.#ctor(System.Windows.Markup.UidPropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.AllInstances.NameGet">
            <summary>设置 UidPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.ConstructorString">
            <summary>设置 UidPropertyAttribute.UidPropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUidPropertyAttribute.NameGet">
            <summary>设置 UidPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute">
            <summary>System.Windows.Markup.UsableDuringInitializationAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.#ctor(System.Windows.Markup.UsableDuringInitializationAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.AllInstances.UsableGet">
            <summary>设置 UsableDuringInitializationAttribute.get_Usable() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.ConstructorBoolean">
            <summary>设置 UsableDuringInitializationAttribute.UsableDuringInitializationAttribute(Boolean usable) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimUsableDuringInitializationAttribute.UsableGet">
            <summary>设置 UsableDuringInitializationAttribute.get_Usable() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimValueSerializer">
            <summary>System.Windows.Markup.ValueSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimValueSerializer.#ctor(System.Windows.Markup.ValueSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.GetConvertFromExceptionObject">
            <summary>设置 ValueSerializer.GetConvertFromException(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.GetConvertToExceptionObjectType">
            <summary>设置 ValueSerializer.GetConvertToException(Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.AllInstances.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimValueSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimValueSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.Constructor">
            <summary>设置 ValueSerializer.ValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetConvertFromExceptionObject">
            <summary>设置 ValueSerializer.GetConvertFromException(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetConvertToExceptionObjectType">
            <summary>设置 ValueSerializer.GetConvertToException(Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetSerializerForPropertyDescriptor">
            <summary>设置 ValueSerializer.GetSerializerFor(PropertyDescriptor descriptor) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetSerializerForPropertyDescriptorIValueSerializerContext">
            <summary>设置 ValueSerializer.GetSerializerFor(PropertyDescriptor descriptor, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetSerializerForType">
            <summary>设置 ValueSerializer.GetSerializerFor(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.GetSerializerForTypeIValueSerializerContext">
            <summary>设置 ValueSerializer.GetSerializerFor(Type type, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.StaticConstructor">
            <summary>设置 ValueSerializer.ValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute">
            <summary>System.Windows.Markup.WhitespaceSignificantCollectionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.#ctor(System.Windows.Markup.WhitespaceSignificantCollectionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimWhitespaceSignificantCollectionAttribute.Constructor">
            <summary>设置 WhitespaceSignificantCollectionAttribute.WhitespaceSignificantCollectionAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXData">
            <summary>System.Windows.Markup.XData 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXData.#ctor(System.Windows.Markup.XData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.AllInstances.TextGet">
            <summary>设置 XData.get_Text() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.AllInstances.TextSetString">
            <summary>设置 XData.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.AllInstances.XmlReaderGet">
            <summary>设置 XData.get_XmlReader() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.AllInstances.XmlReaderSetObject">
            <summary>设置 XData.set_XmlReader(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.Constructor">
            <summary>设置 XData.XData() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.TextGet">
            <summary>设置 XData.get_Text() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.TextSetString">
            <summary>设置 XData.set_Text(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.XmlReaderGet">
            <summary>设置 XData.get_XmlReader() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXData.XmlReaderSetObject">
            <summary>设置 XData.set_XmlReader(Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute">
            <summary>System.Windows.Markup.XamlDeferLoadAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.#ctor(System.Windows.Markup.XamlDeferLoadAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.ContentTypeGet">
            <summary>设置 XamlDeferLoadAttribute.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.ContentTypeNameGet">
            <summary>设置 XamlDeferLoadAttribute.get_ContentTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.ContentTypeSetType">
            <summary>设置 XamlDeferLoadAttribute.set_ContentType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.LoaderTypeGet">
            <summary>设置 XamlDeferLoadAttribute.get_LoaderType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.LoaderTypeNameGet">
            <summary>设置 XamlDeferLoadAttribute.get_LoaderTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.AllInstances.LoaderTypeSetType">
            <summary>设置 XamlDeferLoadAttribute.set_LoaderType(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.ConstructorStringString">
            <summary>设置 XamlDeferLoadAttribute.XamlDeferLoadAttribute(String loaderType, String contentType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.ConstructorTypeType">
            <summary>设置 XamlDeferLoadAttribute.XamlDeferLoadAttribute(Type loaderType, Type contentType) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.ContentTypeGet">
            <summary>设置 XamlDeferLoadAttribute.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.ContentTypeNameGet">
            <summary>设置 XamlDeferLoadAttribute.get_ContentTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.ContentTypeSetType">
            <summary>设置 XamlDeferLoadAttribute.set_ContentType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.LoaderTypeGet">
            <summary>设置 XamlDeferLoadAttribute.get_LoaderType() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.LoaderTypeNameGet">
            <summary>设置 XamlDeferLoadAttribute.get_LoaderTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlDeferLoadAttribute.LoaderTypeSetType">
            <summary>设置 XamlDeferLoadAttribute.set_LoaderType(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute">
            <summary>System.Windows.Markup.XamlSetMarkupExtensionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.#ctor(System.Windows.Markup.XamlSetMarkupExtensionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.AllInstances.XamlSetMarkupExtensionHandlerGet">
            <summary>设置 XamlSetMarkupExtensionAttribute.get_XamlSetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.AllInstances.XamlSetMarkupExtensionHandlerSetString">
            <summary>设置 XamlSetMarkupExtensionAttribute.set_XamlSetMarkupExtensionHandler(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.ConstructorString">
            <summary>设置 XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionAttribute(String xamlSetMarkupExtensionHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandlerGet">
            <summary>设置 XamlSetMarkupExtensionAttribute.get_XamlSetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandlerSetString">
            <summary>设置 XamlSetMarkupExtensionAttribute.set_XamlSetMarkupExtensionHandler(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs">
            <summary>System.Windows.Markup.XamlSetMarkupExtensionEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.#ctor(System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.AllInstances.CallBase">
            <summary>设置 XamlSetMarkupExtensionEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.AllInstances.MarkupExtensionGet">
            <summary>设置 XamlSetMarkupExtensionEventArgs.get_MarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.AllInstances.ServiceProviderGet">
            <summary>设置 XamlSetMarkupExtensionEventArgs.get_ServiceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.AllInstances.ServiceProviderSetIServiceProvider">
            <summary>设置 XamlSetMarkupExtensionEventArgs.set_ServiceProvider(IServiceProvider value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.CallBase">
            <summary>设置 XamlSetMarkupExtensionEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.ConstructorXamlMemberMarkupExtensionIServiceProvider">
            <summary>设置 XamlSetMarkupExtensionEventArgs.XamlSetMarkupExtensionEventArgs(XamlMember member, MarkupExtension value, IServiceProvider serviceProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.MarkupExtensionGet">
            <summary>设置 XamlSetMarkupExtensionEventArgs.get_MarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.ServiceProviderGet">
            <summary>设置 XamlSetMarkupExtensionEventArgs.get_ServiceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetMarkupExtensionEventArgs.ServiceProviderSetIServiceProvider">
            <summary>设置 XamlSetMarkupExtensionEventArgs.set_ServiceProvider(IServiceProvider value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute">
            <summary>System.Windows.Markup.XamlSetTypeConverterAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.#ctor(System.Windows.Markup.XamlSetTypeConverterAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.AllInstances.XamlSetTypeConverterHandlerGet">
            <summary>设置 XamlSetTypeConverterAttribute.get_XamlSetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.AllInstances.XamlSetTypeConverterHandlerSetString">
            <summary>设置 XamlSetTypeConverterAttribute.set_XamlSetTypeConverterHandler(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.ConstructorString">
            <summary>设置 XamlSetTypeConverterAttribute.XamlSetTypeConverterAttribute(String xamlSetTypeConverterHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.XamlSetTypeConverterHandlerGet">
            <summary>设置 XamlSetTypeConverterAttribute.get_XamlSetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterAttribute.XamlSetTypeConverterHandlerSetString">
            <summary>设置 XamlSetTypeConverterAttribute.set_XamlSetTypeConverterHandler(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs">
            <summary>System.Windows.Markup.XamlSetTypeConverterEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.#ctor(System.Windows.Markup.XamlSetTypeConverterEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.CallBase">
            <summary>设置 XamlSetTypeConverterEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.CultureInfoGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_CultureInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.CultureInfoSetCultureInfo">
            <summary>设置 XamlSetTypeConverterEventArgs.set_CultureInfo(CultureInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.ServiceProviderGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_ServiceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.ServiceProviderSetITypeDescriptorContext">
            <summary>设置 XamlSetTypeConverterEventArgs.set_ServiceProvider(ITypeDescriptorContext value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.TypeConverterGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.AllInstances.TypeConverterSetTypeConverter">
            <summary>设置 XamlSetTypeConverterEventArgs.set_TypeConverter(TypeConverter value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.CallBase">
            <summary>设置 XamlSetTypeConverterEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.ConstructorXamlMemberTypeConverterObjectITypeDescriptorContextCultureInfo">
            <summary>设置 XamlSetTypeConverterEventArgs.XamlSetTypeConverterEventArgs(XamlMember member, TypeConverter typeConverter, Object value, ITypeDescriptorContext serviceProvider, CultureInfo cultureInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.CultureInfoGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_CultureInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.CultureInfoSetCultureInfo">
            <summary>设置 XamlSetTypeConverterEventArgs.set_CultureInfo(CultureInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.ServiceProviderGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_ServiceProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.ServiceProviderSetITypeDescriptorContext">
            <summary>设置 XamlSetTypeConverterEventArgs.set_ServiceProvider(ITypeDescriptorContext value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.TypeConverterGet">
            <summary>设置 XamlSetTypeConverterEventArgs.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetTypeConverterEventArgs.TypeConverterSetTypeConverter">
            <summary>设置 XamlSetTypeConverterEventArgs.set_TypeConverter(TypeConverter value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs">
            <summary>System.Windows.Markup.XamlSetValueEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.#ctor(System.Windows.Markup.XamlSetValueEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.CallBase">
            <summary>设置 XamlSetValueEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.HandledGet">
            <summary>设置 XamlSetValueEventArgs.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.HandledSetBoolean">
            <summary>设置 XamlSetValueEventArgs.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.MemberGet">
            <summary>设置 XamlSetValueEventArgs.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.MemberSetXamlMember">
            <summary>设置 XamlSetValueEventArgs.set_Member(XamlMember value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.ValueGet">
            <summary>设置 XamlSetValueEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.AllInstances.ValueSetObject">
            <summary>设置 XamlSetValueEventArgs.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.CallBase">
            <summary>设置 XamlSetValueEventArgs.CallBase() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.ConstructorXamlMemberObject">
            <summary>设置 XamlSetValueEventArgs.XamlSetValueEventArgs(XamlMember member, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.HandledGet">
            <summary>设置 XamlSetValueEventArgs.get_Handled() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.HandledSetBoolean">
            <summary>设置 XamlSetValueEventArgs.set_Handled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.MemberGet">
            <summary>设置 XamlSetValueEventArgs.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.MemberSetXamlMember">
            <summary>设置 XamlSetValueEventArgs.set_Member(XamlMember value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.ValueGet">
            <summary>设置 XamlSetValueEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXamlSetValueEventArgs.ValueSetObject">
            <summary>设置 XamlSetValueEventArgs.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute">
            <summary>System.Windows.Markup.XmlLangPropertyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.#ctor(System.Windows.Markup.XmlLangPropertyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.AllInstances.NameGet">
            <summary>设置 XmlLangPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.ConstructorString">
            <summary>设置 XmlLangPropertyAttribute.XmlLangPropertyAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlLangPropertyAttribute.NameGet">
            <summary>设置 XmlLangPropertyAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute">
            <summary>System.Windows.Markup.XmlnsCompatibleWithAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.#ctor(System.Windows.Markup.XmlnsCompatibleWithAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.AllInstances.NewNamespaceGet">
            <summary>设置 XmlnsCompatibleWithAttribute.get_NewNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.AllInstances.OldNamespaceGet">
            <summary>设置 XmlnsCompatibleWithAttribute.get_OldNamespace() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.ConstructorStringString">
            <summary>设置 XmlnsCompatibleWithAttribute.XmlnsCompatibleWithAttribute(String oldNamespace, String newNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.NewNamespaceGet">
            <summary>设置 XmlnsCompatibleWithAttribute.get_NewNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsCompatibleWithAttribute.OldNamespaceGet">
            <summary>设置 XmlnsCompatibleWithAttribute.get_OldNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute">
            <summary>System.Windows.Markup.XmlnsDefinitionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.#ctor(System.Windows.Markup.XmlnsDefinitionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AllInstances.AssemblyNameGet">
            <summary>设置 XmlnsDefinitionAttribute.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AllInstances.AssemblyNameSetString">
            <summary>设置 XmlnsDefinitionAttribute.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AllInstances.ClrNamespaceGet">
            <summary>设置 XmlnsDefinitionAttribute.get_ClrNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AllInstances.XmlNamespaceGet">
            <summary>设置 XmlnsDefinitionAttribute.get_XmlNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AssemblyNameGet">
            <summary>设置 XmlnsDefinitionAttribute.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.AssemblyNameSetString">
            <summary>设置 XmlnsDefinitionAttribute.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.ClrNamespaceGet">
            <summary>设置 XmlnsDefinitionAttribute.get_ClrNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.ConstructorStringString">
            <summary>设置 XmlnsDefinitionAttribute.XmlnsDefinitionAttribute(String xmlNamespace, String clrNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsDefinitionAttribute.XmlNamespaceGet">
            <summary>设置 XmlnsDefinitionAttribute.get_XmlNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute">
            <summary>System.Windows.Markup.XmlnsPrefixAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.#ctor(System.Windows.Markup.XmlnsPrefixAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.AllInstances.PrefixGet">
            <summary>设置 XmlnsPrefixAttribute.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.AllInstances.XmlNamespaceGet">
            <summary>设置 XmlnsPrefixAttribute.get_XmlNamespace() 的 填充码</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.ConstructorStringString">
            <summary>设置 XmlnsPrefixAttribute.XmlnsPrefixAttribute(String xmlNamespace, String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.PrefixGet">
            <summary>设置 XmlnsPrefixAttribute.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.ShimXmlnsPrefixAttribute.XmlNamespaceGet">
            <summary>设置 XmlnsPrefixAttribute.get_XmlNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubArrayExtension">
            <summary>System.Windows.Markup.ArrayExtension 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubArrayExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubArrayExtension.#ctor(System.Array)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubArrayExtension.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubArrayExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubArrayExtension.InitializeStub">
            <summary>初始化 type StubArrayExtension 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubArrayExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubArrayExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubArrayExtension.ProvideValue(System.IServiceProvider)">
            <summary>设置 ArrayExtension.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubArrayExtension.ProvideValueIServiceProvider">
            <summary>设置 ArrayExtension.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubDateTimeValueSerializer">
            <summary>System.Windows.Markup.DateTimeValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 DateTimeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 DateTimeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 DateTimeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 DateTimeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 DateTimeValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.InitializeStub">
            <summary>初始化 type StubDateTimeValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubDateTimeValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIComponentConnector">
            <summary>System.Windows.Markup.IComponentConnector 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIComponentConnector.#ctor">
            <summary>初始化 type StubIComponentConnector 的新实例</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIComponentConnector.ConnectInt32Object">
            <summary>设置 IComponentConnector.Connect(Int32 connectionId, Object target) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIComponentConnector.InitializeComponent">
            <summary>设置 IComponentConnector.InitializeComponent() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIComponentConnector.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)">
            <summary>设置 IComponentConnector.Connect(Int32 connectionId, Object target) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIComponentConnector.System#Windows#Markup#IComponentConnector#InitializeComponent">
            <summary>设置 IComponentConnector.InitializeComponent() 的 存根</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubINameScope">
            <summary>System.Windows.Markup.INameScope 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScope.#ctor">
            <summary>初始化 type StubINameScope 的新实例</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScope.FindNameString">
            <summary>设置 INameScope.FindName(String name) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScope.RegisterNameStringObject">
            <summary>设置 INameScope.RegisterName(String name, Object scopedElement) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScope.System#Windows#Markup#INameScope#FindName(System.String)">
            <summary>设置 INameScope.FindName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScope.System#Windows#Markup#INameScope#RegisterName(System.String,System.Object)">
            <summary>设置 INameScope.RegisterName(String name, Object scopedElement) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScope.System#Windows#Markup#INameScope#UnregisterName(System.String)">
            <summary>设置 INameScope.UnregisterName(String name) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScope.UnregisterNameString">
            <summary>设置 INameScope.UnregisterName(String name) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubINameScopeDictionary">
            <summary>System.Windows.Markup.INameScopeDictionary 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.#ctor">
            <summary>初始化 type StubINameScopeDictionary 的新实例</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.AddKeyValuePairOfStringObject">
            <summary>设置 ICollection`1.Add(!0 item) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.AddStringObject">
            <summary>设置 IDictionary`2.Add(!0 key, !1 value) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.Clear">
            <summary>设置 ICollection`1.Clear() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.ContainsKeyString">
            <summary>设置 IDictionary`2.ContainsKey(!0 key) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.ContainsKeyValuePairOfStringObject">
            <summary>设置 ICollection`1.Contains(!0 item) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>设置 ICollection`1.CopyTo(!0[] array, Int32 arrayIndex) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count">
            <summary>设置 ICollection`1.get_Count() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.CountGet">
            <summary>设置 ICollection`1.get_Count() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.FindNameString">
            <summary>设置 INameScope.FindName(String name) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.GetEnumerator">
            <summary>设置 IEnumerable`1.GetEnumerator() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.GetEnumerator01">
            <summary>设置 IEnumerable.GetEnumerator() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <summary>设置 ICollection`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.IsReadOnlyGet">
            <summary>设置 ICollection`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)">
            <summary>设置 IDictionary`2.get_Item(!0 key) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.ItemGetString">
            <summary>设置 IDictionary`2.get_Item(!0 key) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.ItemSetStringObject">
            <summary>设置 IDictionary`2.set_Item(!0 key, !1 value) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys">
            <summary>设置 IDictionary`2.get_Keys() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.KeysGet">
            <summary>设置 IDictionary`2.get_Keys() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.RegisterNameStringObject">
            <summary>设置 INameScope.RegisterName(String name, Object scopedElement) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.RemoveKeyValuePairOfStringObject">
            <summary>设置 ICollection`1.Remove(!0 item) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.RemoveString">
            <summary>设置 IDictionary`2.Remove(!0 key) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>设置 ICollection`1.Add(!0 item) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear">
            <summary>设置 ICollection`1.Clear() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>设置 ICollection`1.Contains(!0 item) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>设置 ICollection`1.CopyTo(!0[] array, Int32 arrayIndex) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>设置 ICollection`1.Remove(!0 item) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)">
            <summary>设置 IDictionary`2.Add(!0 key, !1 value) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)">
            <summary>设置 IDictionary`2.ContainsKey(!0 key) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)">
            <summary>设置 IDictionary`2.Remove(!0 key) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)">
            <summary>设置 IDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>设置 IEnumerable`1.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Windows#Markup#INameScope#FindName(System.String)">
            <summary>设置 INameScope.FindName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Windows#Markup#INameScope#RegisterName(System.String,System.Object)">
            <summary>设置 INameScope.RegisterName(String name, Object scopedElement) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Windows#Markup#INameScope#UnregisterName(System.String)">
            <summary>设置 INameScope.UnregisterName(String name) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.TryGetValueStringObjectOut">
            <summary>设置 IDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.UnregisterNameString">
            <summary>设置 INameScope.UnregisterName(String name) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubINameScopeDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <summary>设置 IDictionary`2.get_Values() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubINameScopeDictionary.ValuesGet">
            <summary>设置 IDictionary`2.get_Values() 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIProvideValueTarget">
            <summary>System.Windows.Markup.IProvideValueTarget 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIProvideValueTarget.#ctor">
            <summary>初始化 type StubIProvideValueTarget 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIProvideValueTarget.System#Windows#Markup#IProvideValueTarget#TargetObject">
            <summary>设置 IProvideValueTarget.get_TargetObject() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIProvideValueTarget.TargetObjectGet">
            <summary>设置 IProvideValueTarget.get_TargetObject() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIProvideValueTarget.System#Windows#Markup#IProvideValueTarget#TargetProperty">
            <summary>设置 IProvideValueTarget.get_TargetProperty() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIProvideValueTarget.TargetPropertyGet">
            <summary>设置 IProvideValueTarget.get_TargetProperty() 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIQueryAmbient">
            <summary>System.Windows.Markup.IQueryAmbient 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIQueryAmbient.#ctor">
            <summary>初始化 type StubIQueryAmbient 的新实例</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIQueryAmbient.IsAmbientPropertyAvailableString">
            <summary>设置 IQueryAmbient.IsAmbientPropertyAvailable(String propertyName) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIQueryAmbient.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
            <summary>设置 IQueryAmbient.IsAmbientPropertyAvailable(String propertyName) 的 存根</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIUriContext">
            <summary>System.Windows.Markup.IUriContext 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIUriContext.#ctor">
            <summary>初始化 type StubIUriContext 的新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIUriContext.AttachBackingFieldToBaseUri">
            <summary>附加委托以将 StubIUriContext.BaseUri 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIUriContext.System#Windows#Markup#IUriContext#BaseUri">
            <summary>设置 IUriContext.get_BaseUri() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIUriContext.BaseUriGet">
            <summary>设置 IUriContext.get_BaseUri() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIUriContext.BaseUriSetUri">
            <summary>设置 IUriContext.set_BaseUri(Uri value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIValueSerializerContext">
            <summary>System.Windows.Markup.IValueSerializerContext 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.#ctor">
            <summary>初始化 type StubIValueSerializerContext 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>设置 ITypeDescriptorContext.get_Container() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.ContainerGet">
            <summary>设置 ITypeDescriptorContext.get_Container() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.GetServiceType">
            <summary>设置 IServiceProvider.GetService(Type serviceType) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.GetValueSerializerForPropertyDescriptor">
            <summary>设置 IValueSerializerContext.GetValueSerializerFor(PropertyDescriptor descriptor) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.GetValueSerializerForType">
            <summary>设置 IValueSerializerContext.GetValueSerializerFor(Type type) 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>设置 ITypeDescriptorContext.get_Instance() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.InstanceGet">
            <summary>设置 ITypeDescriptorContext.get_Instance() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.OnComponentChanged">
            <summary>设置 ITypeDescriptorContext.OnComponentChanged() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.OnComponentChanging">
            <summary>设置 ITypeDescriptorContext.OnComponentChanging() 的 stub</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>设置 ITypeDescriptorContext.get_PropertyDescriptor() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIValueSerializerContext.PropertyDescriptorGet">
            <summary>设置 ITypeDescriptorContext.get_PropertyDescriptor() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>设置 ITypeDescriptorContext.OnComponentChanged() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>设置 ITypeDescriptorContext.OnComponentChanging() 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#IServiceProvider#GetService(System.Type)">
            <summary>设置 IServiceProvider.GetService(Type serviceType) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#Windows#Markup#IValueSerializerContext#GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
            <summary>设置 IValueSerializerContext.GetValueSerializerFor(PropertyDescriptor descriptor) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIValueSerializerContext.System#Windows#Markup#IValueSerializerContext#GetValueSerializerFor(System.Type)">
            <summary>设置 IValueSerializerContext.GetValueSerializerFor(Type type) 的 存根</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubIXamlTypeResolver">
            <summary>System.Windows.Markup.IXamlTypeResolver 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIXamlTypeResolver.#ctor">
            <summary>初始化 type StubIXamlTypeResolver 的新实例</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubIXamlTypeResolver.ResolveString">
            <summary>设置 IXamlTypeResolver.Resolve(String qualifiedTypeName) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubIXamlTypeResolver.System#Windows#Markup#IXamlTypeResolver#Resolve(System.String)">
            <summary>设置 IXamlTypeResolver.Resolve(String qualifiedTypeName) 的 存根</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubMarkupExtension">
            <summary>System.Windows.Markup.MarkupExtension 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMarkupExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMarkupExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMarkupExtension.InitializeStub">
            <summary>初始化 type StubMarkupExtension 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMarkupExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMarkupExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMarkupExtension.ProvideValue(System.IServiceProvider)">
            <summary>设置 MarkupExtension.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubMarkupExtension.ProvideValueIServiceProvider">
            <summary>设置 MarkupExtension.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubMemberDefinition">
            <summary>System.Windows.Markup.MemberDefinition 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMemberDefinition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMemberDefinition.AttachBackingFieldToName">
            <summary>附加委托以将 StubMemberDefinition.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMemberDefinition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubMemberDefinition.InitializeStub">
            <summary>初始化 type StubMemberDefinition 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMemberDefinition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMemberDefinition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubMemberDefinition.Name">
            <summary>设置 MemberDefinition.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubMemberDefinition.NameGet">
            <summary>设置 MemberDefinition.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubMemberDefinition.NameSetString">
            <summary>设置 MemberDefinition.set_Name(String value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubNameReferenceConverter">
            <summary>System.Windows.Markup.NameReferenceConverter 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNameReferenceConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 NameReferenceConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 NameReferenceConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 NameReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 NameReferenceConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 NameReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 NameReferenceConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.InitializeStub">
            <summary>初始化 type StubNameReferenceConverter 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNameReferenceConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNameReferenceConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNameReferenceConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNameReferenceConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubNullExtension">
            <summary>System.Windows.Markup.NullExtension 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNullExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNullExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNullExtension.InitializeStub">
            <summary>初始化 type StubNullExtension 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNullExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubNullExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubNullExtension.ProvideValue(System.IServiceProvider)">
            <summary>设置 NullExtension.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubNullExtension.ProvideValueIServiceProvider">
            <summary>设置 NullExtension.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubPropertyDefinition">
            <summary>System.Windows.Markup.PropertyDefinition 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubPropertyDefinition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubPropertyDefinition.AttachBackingFieldToName">
            <summary>附加委托以将 StubPropertyDefinition.Name 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubPropertyDefinition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubPropertyDefinition.InitializeStub">
            <summary>初始化 type StubPropertyDefinition 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubPropertyDefinition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubPropertyDefinition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubPropertyDefinition.Name">
            <summary>设置 PropertyDefinition.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubPropertyDefinition.NameGet">
            <summary>设置 PropertyDefinition.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubPropertyDefinition.NameSetString">
            <summary>设置 PropertyDefinition.set_Name(String value) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubReference">
            <summary>System.Windows.Markup.Reference 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubReference.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubReference.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubReference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubReference.InitializeStub">
            <summary>初始化 type StubReference 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubReference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubReference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubReference.ProvideValue(System.IServiceProvider)">
            <summary>设置 Reference.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubReference.ProvideValueIServiceProvider">
            <summary>设置 Reference.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubStaticExtension">
            <summary>System.Windows.Markup.StaticExtension 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubStaticExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubStaticExtension.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubStaticExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubStaticExtension.InitializeStub">
            <summary>初始化 type StubStaticExtension 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubStaticExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubStaticExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubStaticExtension.ProvideValue(System.IServiceProvider)">
            <summary>设置 StaticExtension.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubStaticExtension.ProvideValueIServiceProvider">
            <summary>设置 StaticExtension.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubTypeExtension">
            <summary>System.Windows.Markup.TypeExtension 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubTypeExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubTypeExtension.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubTypeExtension.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubTypeExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubTypeExtension.InitializeStub">
            <summary>初始化 type StubTypeExtension 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubTypeExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubTypeExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubTypeExtension.ProvideValue(System.IServiceProvider)">
            <summary>设置 TypeExtension.ProvideValue(IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubTypeExtension.ProvideValueIServiceProvider">
            <summary>设置 TypeExtension.ProvideValue(IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubValueSerializer">
            <summary>System.Windows.Markup.ValueSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubValueSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubValueSerializer.CanConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubValueSerializer.CanConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.CanConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubValueSerializer.ConvertFromStringStringIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertFromString(String value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubValueSerializer.ConvertToStringObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.ConvertToString(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.InitializeStub">
            <summary>初始化 type StubValueSerializer 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubValueSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubValueSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 存根</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubValueSerializer.TypeReferencesObjectIValueSerializerContext">
            <summary>设置 ValueSerializer.TypeReferences(Object value, IValueSerializerContext context) 的 stub</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs">
            <summary>System.Windows.Markup.XamlSetMarkupExtensionEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.CallBase">
            <summary>设置 XamlSetMarkupExtensionEventArgs.CallBase() 的 存根</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.Microsoft#QualityTools#Testing#Fakes#Stubs#IPartialStub#CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.CallBase01">
            <summary>设置 XamlSetMarkupExtensionEventArgs.CallBase() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.InitializeStub">
            <summary>初始化 type StubXamlSetMarkupExtensionEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetMarkupExtensionEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs">
            <summary>System.Windows.Markup.XamlSetTypeConverterEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.CallBase">
            <summary>设置 XamlSetTypeConverterEventArgs.CallBase() 的 存根</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.Microsoft#QualityTools#Testing#Fakes#Stubs#IPartialStub#CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.CallBase01">
            <summary>设置 XamlSetTypeConverterEventArgs.CallBase() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.InitializeStub">
            <summary>初始化 type StubXamlSetTypeConverterEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetTypeConverterEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs">
            <summary>System.Windows.Markup.XamlSetValueEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.CallBase">
            <summary>设置 XamlSetValueEventArgs.CallBase() 的 存根</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.Microsoft#QualityTools#Testing#Fakes#Stubs#IPartialStub#CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.CallBase01">
            <summary>设置 XamlSetValueEventArgs.CallBase() 的 stub</summary>
        </member>
        <member name="M:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.InitializeStub">
            <summary>初始化 type StubXamlSetValueEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Windows.Markup.Fakes.StubXamlSetValueEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimAmbientPropertyValue">
            <summary>System.Xaml.AmbientPropertyValue 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAmbientPropertyValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAmbientPropertyValue.#ctor(System.Xaml.AmbientPropertyValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimAmbientPropertyValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.AllInstances.RetrievedPropertyGet">
            <summary>设置 AmbientPropertyValue.get_RetrievedProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.AllInstances.ValueGet">
            <summary>设置 AmbientPropertyValue.get_Value() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAmbientPropertyValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAmbientPropertyValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.ConstructorXamlMemberObject">
            <summary>设置 AmbientPropertyValue.AmbientPropertyValue(XamlMember property, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.RetrievedPropertyGet">
            <summary>设置 AmbientPropertyValue.get_RetrievedProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAmbientPropertyValue.ValueGet">
            <summary>设置 AmbientPropertyValue.get_Value() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimAttachableMemberIdentifier">
            <summary>System.Xaml.AttachableMemberIdentifier 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachableMemberIdentifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachableMemberIdentifier.#ctor(System.Xaml.AttachableMemberIdentifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.DeclaringTypeGet">
            <summary>设置 AttachableMemberIdentifier.get_DeclaringType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.EqualsAttachableMemberIdentifier">
            <summary>设置 AttachableMemberIdentifier.Equals(AttachableMemberIdentifier other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.EqualsObject">
            <summary>设置 AttachableMemberIdentifier.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.GetHashCode01">
            <summary>设置 AttachableMemberIdentifier.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.MemberNameGet">
            <summary>设置 AttachableMemberIdentifier.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.AllInstances.ToString01">
            <summary>设置 AttachableMemberIdentifier.ToString() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachableMemberIdentifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachableMemberIdentifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachableMemberIdentifier.Bind(System.IEquatable{System.Xaml.AttachableMemberIdentifier})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.ConstructorTypeString">
            <summary>设置 AttachableMemberIdentifier.AttachableMemberIdentifier(Type declaringType, String memberName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.DeclaringTypeGet">
            <summary>设置 AttachableMemberIdentifier.get_DeclaringType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.EqualityOpAttachableMemberIdentifierAttachableMemberIdentifier">
            <summary>设置 AttachableMemberIdentifier.op_Equality(AttachableMemberIdentifier left, AttachableMemberIdentifier right) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.EqualsAttachableMemberIdentifier">
            <summary>设置 AttachableMemberIdentifier.Equals(AttachableMemberIdentifier other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.EqualsObject">
            <summary>设置 AttachableMemberIdentifier.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.GetHashCode">
            <summary>设置 AttachableMemberIdentifier.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.InequalityOpAttachableMemberIdentifierAttachableMemberIdentifier">
            <summary>设置 AttachableMemberIdentifier.op_Inequality(AttachableMemberIdentifier left, AttachableMemberIdentifier right) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.MemberNameGet">
            <summary>设置 AttachableMemberIdentifier.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachableMemberIdentifier.ToString">
            <summary>设置 AttachableMemberIdentifier.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimAttachablePropertyServices">
            <summary>System.Xaml.AttachablePropertyServices 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachablePropertyServices.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachablePropertyServices.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachablePropertyServices.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.CopyPropertiesToObjectKeyValuePairOfAttachableMemberIdentifierObjectArrayInt32">
            <summary>设置 AttachablePropertyServices.CopyPropertiesTo(Object instance, KeyValuePair`2&lt;AttachableMemberIdentifier,Object&gt;[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.GetAttachedPropertyCountObject">
            <summary>设置 AttachablePropertyServices.GetAttachedPropertyCount(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.RemovePropertyObjectAttachableMemberIdentifier">
            <summary>设置 AttachablePropertyServices.RemoveProperty(Object instance, AttachableMemberIdentifier name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.SetPropertyObjectAttachableMemberIdentifierObject">
            <summary>设置 AttachablePropertyServices.SetProperty(Object instance, AttachableMemberIdentifier name, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.StaticConstructor">
            <summary>设置 AttachablePropertyServices.AttachablePropertyServices() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimAttachablePropertyServices.TryGetPropertyObjectAttachableMemberIdentifierObjectOut">
            <summary>设置 AttachablePropertyServices.TryGetProperty(Object instance, AttachableMemberIdentifier name, Object&amp; value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimAttachablePropertyServices.TryGetPropertyOf1ObjectAttachableMemberIdentifierM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Object,System.Xaml.AttachableMemberIdentifier,``0,System.Boolean})">
            <summary>设置 AttachablePropertyServices.TryGetProperty(Object instance, AttachableMemberIdentifier name, !!0&amp; value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimNamespaceDeclaration">
            <summary>System.Xaml.NamespaceDeclaration 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimNamespaceDeclaration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimNamespaceDeclaration.#ctor(System.Xaml.NamespaceDeclaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimNamespaceDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.AllInstances.NamespaceGet">
            <summary>设置 NamespaceDeclaration.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.AllInstances.PrefixGet">
            <summary>设置 NamespaceDeclaration.get_Prefix() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimNamespaceDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimNamespaceDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.ConstructorStringString">
            <summary>设置 NamespaceDeclaration.NamespaceDeclaration(String ns, String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.NamespaceGet">
            <summary>设置 NamespaceDeclaration.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimNamespaceDeclaration.PrefixGet">
            <summary>设置 NamespaceDeclaration.get_Prefix() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlBackgroundReader">
            <summary>System.Xaml.XamlBackgroundReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.#ctor(System.Xaml.XamlBackgroundReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.DisposeBoolean">
            <summary>设置 XamlBackgroundReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.HasLineInfoGet">
            <summary>设置 XamlBackgroundReader.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.IsEofGet">
            <summary>设置 XamlBackgroundReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.LineNumberGet">
            <summary>设置 XamlBackgroundReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.LinePositionGet">
            <summary>设置 XamlBackgroundReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.MemberGet">
            <summary>设置 XamlBackgroundReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.NamespaceGet">
            <summary>设置 XamlBackgroundReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.NodeTypeGet">
            <summary>设置 XamlBackgroundReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.Read">
            <summary>设置 XamlBackgroundReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.SchemaContextGet">
            <summary>设置 XamlBackgroundReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.StartThread">
            <summary>设置 XamlBackgroundReader.StartThread() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.StartThreadString">
            <summary>设置 XamlBackgroundReader.StartThread(String threadName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.TypeGet">
            <summary>设置 XamlBackgroundReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.AllInstances.ValueGet">
            <summary>设置 XamlBackgroundReader.get_Value() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.Bind(System.Xaml.IXamlLineInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlBackgroundReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.ConstructorXamlReader">
            <summary>设置 XamlBackgroundReader.XamlBackgroundReader(XamlReader wrappedReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.DisposeBoolean">
            <summary>设置 XamlBackgroundReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.HasLineInfoGet">
            <summary>设置 XamlBackgroundReader.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.IsEofGet">
            <summary>设置 XamlBackgroundReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.LineNumberGet">
            <summary>设置 XamlBackgroundReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.LinePositionGet">
            <summary>设置 XamlBackgroundReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.MemberGet">
            <summary>设置 XamlBackgroundReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.NamespaceGet">
            <summary>设置 XamlBackgroundReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.NodeTypeGet">
            <summary>设置 XamlBackgroundReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.Read">
            <summary>设置 XamlBackgroundReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.SchemaContextGet">
            <summary>设置 XamlBackgroundReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.StartThread">
            <summary>设置 XamlBackgroundReader.StartThread() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.StartThreadString">
            <summary>设置 XamlBackgroundReader.StartThread(String threadName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.TypeGet">
            <summary>设置 XamlBackgroundReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlBackgroundReader.ValueGet">
            <summary>设置 XamlBackgroundReader.get_Value() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDeferringLoader">
            <summary>System.Xaml.XamlDeferringLoader 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDeferringLoader.#ctor(System.Xaml.XamlDeferringLoader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDeferringLoader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDeferringLoader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDeferringLoader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDeferringLoader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDeferringLoader.Constructor">
            <summary>设置 XamlDeferringLoader.XamlDeferringLoader() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDirective">
            <summary>System.Xaml.XamlDirective 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDirective.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDirective.#ctor(System.Xaml.XamlDirective)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDirective.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.AllowedLocationGet">
            <summary>设置 XamlDirective.get_AllowedLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.GetHashCode01">
            <summary>设置 XamlDirective.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.GetXamlNamespaces">
            <summary>设置 XamlDirective.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupCustomAttributeProvider">
            <summary>设置 XamlDirective.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupDeferringLoader">
            <summary>设置 XamlDirective.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupDependsOn">
            <summary>设置 XamlDirective.LookupDependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupInvoker">
            <summary>设置 XamlDirective.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsAmbient">
            <summary>设置 XamlDirective.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsEvent">
            <summary>设置 XamlDirective.LookupIsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsReadOnly">
            <summary>设置 XamlDirective.LookupIsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsReadPublic">
            <summary>设置 XamlDirective.LookupIsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsUnknown">
            <summary>设置 XamlDirective.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsWriteOnly">
            <summary>设置 XamlDirective.LookupIsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupIsWritePublic">
            <summary>设置 XamlDirective.LookupIsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupTargetType">
            <summary>设置 XamlDirective.LookupTargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupType">
            <summary>设置 XamlDirective.LookupType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupTypeConverter">
            <summary>设置 XamlDirective.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupUnderlyingGetter">
            <summary>设置 XamlDirective.LookupUnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupUnderlyingMember">
            <summary>设置 XamlDirective.LookupUnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.LookupUnderlyingSetter">
            <summary>设置 XamlDirective.LookupUnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllInstances.ToString01">
            <summary>设置 XamlDirective.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.AllowedLocationGet">
            <summary>设置 XamlDirective.get_AllowedLocation() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDirective.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDirective.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDirective.Bind(System.IEquatable{System.Xaml.XamlMember})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.ConstructorIEnumerableOfStringStringXamlTypeXamlValueConverterOfTypeConverterAllowedMemberLocations">
            <summary>设置 XamlDirective.XamlDirective(IEnumerable`1&lt;String&gt; xamlNamespaces, String name, XamlType xamlType, XamlValueConverter`1&lt;TypeConverter&gt; typeConverter, AllowedMemberLocations allowedLocation) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.ConstructorStringString">
            <summary>设置 XamlDirective.XamlDirective(String xamlNamespace, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.GetHashCode">
            <summary>设置 XamlDirective.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.GetXamlNamespaces">
            <summary>设置 XamlDirective.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupCustomAttributeProvider">
            <summary>设置 XamlDirective.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupDeferringLoader">
            <summary>设置 XamlDirective.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupDependsOn">
            <summary>设置 XamlDirective.LookupDependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupInvoker">
            <summary>设置 XamlDirective.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsAmbient">
            <summary>设置 XamlDirective.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsEvent">
            <summary>设置 XamlDirective.LookupIsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsReadOnly">
            <summary>设置 XamlDirective.LookupIsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsReadPublic">
            <summary>设置 XamlDirective.LookupIsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsUnknown">
            <summary>设置 XamlDirective.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsWriteOnly">
            <summary>设置 XamlDirective.LookupIsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupIsWritePublic">
            <summary>设置 XamlDirective.LookupIsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupTargetType">
            <summary>设置 XamlDirective.LookupTargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupType">
            <summary>设置 XamlDirective.LookupType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupTypeConverter">
            <summary>设置 XamlDirective.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupUnderlyingGetter">
            <summary>设置 XamlDirective.LookupUnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupUnderlyingMember">
            <summary>设置 XamlDirective.LookupUnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.LookupUnderlyingSetter">
            <summary>设置 XamlDirective.LookupUnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDirective.ToString">
            <summary>设置 XamlDirective.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDuplicateMemberException">
            <summary>System.Xaml.XamlDuplicateMemberException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDuplicateMemberException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDuplicateMemberException.#ctor(System.Xaml.XamlDuplicateMemberException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances.DuplicateMemberGet">
            <summary>设置 XamlDuplicateMemberException.get_DuplicateMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances.DuplicateMemberSetXamlMember">
            <summary>设置 XamlDuplicateMemberException.set_DuplicateMember(XamlMember value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlDuplicateMemberException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances.ParentTypeGet">
            <summary>设置 XamlDuplicateMemberException.get_ParentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.AllInstances.ParentTypeSetXamlType">
            <summary>设置 XamlDuplicateMemberException.set_ParentType(XamlType value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDuplicateMemberException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDuplicateMemberException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlDuplicateMemberException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.Constructor">
            <summary>设置 XamlDuplicateMemberException.XamlDuplicateMemberException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlDuplicateMemberException.XamlDuplicateMemberException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ConstructorString">
            <summary>设置 XamlDuplicateMemberException.XamlDuplicateMemberException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ConstructorStringException">
            <summary>设置 XamlDuplicateMemberException.XamlDuplicateMemberException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ConstructorXamlMemberXamlType">
            <summary>设置 XamlDuplicateMemberException.XamlDuplicateMemberException(XamlMember member, XamlType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.DuplicateMemberGet">
            <summary>设置 XamlDuplicateMemberException.get_DuplicateMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.DuplicateMemberSetXamlMember">
            <summary>设置 XamlDuplicateMemberException.set_DuplicateMember(XamlMember value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlDuplicateMemberException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ParentTypeGet">
            <summary>设置 XamlDuplicateMemberException.get_ParentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlDuplicateMemberException.ParentTypeSetXamlType">
            <summary>设置 XamlDuplicateMemberException.set_ParentType(XamlType value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlException">
            <summary>System.Xaml.XamlException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlException.#ctor(System.Xaml.XamlException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.LineNumberGet">
            <summary>设置 XamlException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.LineNumberSetInt32">
            <summary>设置 XamlException.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.LinePositionGet">
            <summary>设置 XamlException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.LinePositionSetInt32">
            <summary>设置 XamlException.set_LinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.AllInstances.MessageGet">
            <summary>设置 XamlException.get_Message() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.Constructor">
            <summary>设置 XamlException.XamlException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlException.XamlException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.ConstructorString">
            <summary>设置 XamlException.XamlException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.ConstructorStringException">
            <summary>设置 XamlException.XamlException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.ConstructorStringExceptionInt32Int32">
            <summary>设置 XamlException.XamlException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.LineNumberGet">
            <summary>设置 XamlException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.LineNumberSetInt32">
            <summary>设置 XamlException.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.LinePositionGet">
            <summary>设置 XamlException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.LinePositionSetInt32">
            <summary>设置 XamlException.set_LinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlInternalException">
            <summary>System.Xaml.XamlInternalException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlInternalException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlInternalException.#ctor(System.Xaml.XamlInternalException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlInternalException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlInternalException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlInternalException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlInternalException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlInternalException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlInternalException.Constructor">
            <summary>设置 XamlInternalException.XamlInternalException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlInternalException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlInternalException.XamlInternalException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlInternalException.ConstructorString">
            <summary>设置 XamlInternalException.XamlInternalException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlInternalException.ConstructorStringException">
            <summary>设置 XamlInternalException.XamlInternalException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlLanguage">
            <summary>System.Xaml.XamlLanguage 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlLanguage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.AllDirectivesGet">
            <summary>设置 XamlLanguage.get_AllDirectives() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.AllTypesGet">
            <summary>设置 XamlLanguage.get_AllTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ArgumentsGet">
            <summary>设置 XamlLanguage.get_Arguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ArrayGet">
            <summary>设置 XamlLanguage.get_Array() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.AsyncRecordsGet">
            <summary>设置 XamlLanguage.get_AsyncRecords() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.BaseGet">
            <summary>设置 XamlLanguage.get_Base() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlLanguage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlLanguage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.BooleanGet">
            <summary>设置 XamlLanguage.get_Boolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ByteGet">
            <summary>设置 XamlLanguage.get_Byte() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.CharGet">
            <summary>设置 XamlLanguage.get_Char() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ClassAttributesGet">
            <summary>设置 XamlLanguage.get_ClassAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ClassGet">
            <summary>设置 XamlLanguage.get_Class() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ClassModifierGet">
            <summary>设置 XamlLanguage.get_ClassModifier() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.CodeGet">
            <summary>设置 XamlLanguage.get_Code() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ConnectionIdGet">
            <summary>设置 XamlLanguage.get_ConnectionId() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.DecimalGet">
            <summary>设置 XamlLanguage.get_Decimal() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.DoubleGet">
            <summary>设置 XamlLanguage.get_Double() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.FactoryMethodGet">
            <summary>设置 XamlLanguage.get_FactoryMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.FieldModifierGet">
            <summary>设置 XamlLanguage.get_FieldModifier() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.InitializationGet">
            <summary>设置 XamlLanguage.get_Initialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.Int16Get">
            <summary>设置 XamlLanguage.get_Int16() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.Int32Get">
            <summary>设置 XamlLanguage.get_Int32() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.Int64Get">
            <summary>设置 XamlLanguage.get_Int64() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ItemsGet">
            <summary>设置 XamlLanguage.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.KeyGet">
            <summary>设置 XamlLanguage.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.LangGet">
            <summary>设置 XamlLanguage.get_Lang() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.MemberGet">
            <summary>设置 XamlLanguage.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.MembersGet">
            <summary>设置 XamlLanguage.get_Members() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.NameGet">
            <summary>设置 XamlLanguage.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.NullGet">
            <summary>设置 XamlLanguage.get_Null() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ObjectGet">
            <summary>设置 XamlLanguage.get_Object() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.PositionalParametersGet">
            <summary>设置 XamlLanguage.get_PositionalParameters() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.PropertyGet">
            <summary>设置 XamlLanguage.get_Property() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.ReferenceGet">
            <summary>设置 XamlLanguage.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.SharedGet">
            <summary>设置 XamlLanguage.get_Shared() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.SingleGet">
            <summary>设置 XamlLanguage.get_Single() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.SpaceGet">
            <summary>设置 XamlLanguage.get_Space() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.StaticConstructor">
            <summary>设置 XamlLanguage.XamlLanguage() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.StaticGet">
            <summary>设置 XamlLanguage.get_Static() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.StringGet">
            <summary>设置 XamlLanguage.get_String() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.SubclassGet">
            <summary>设置 XamlLanguage.get_Subclass() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.SynchronousModeGet">
            <summary>设置 XamlLanguage.get_SynchronousMode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.TimeSpanGet">
            <summary>设置 XamlLanguage.get_TimeSpan() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.TypeArgumentsGet">
            <summary>设置 XamlLanguage.get_TypeArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.TypeGet">
            <summary>设置 XamlLanguage.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.UidGet">
            <summary>设置 XamlLanguage.get_Uid() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.UnknownContentGet">
            <summary>设置 XamlLanguage.get_UnknownContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.UriGet">
            <summary>设置 XamlLanguage.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.XDataGet">
            <summary>设置 XamlLanguage.get_XData() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.XamlNamespacesGet">
            <summary>设置 XamlLanguage.get_XamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlLanguage.XmlNamespacesGet">
            <summary>设置 XamlLanguage.get_XmlNamespaces() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlMember">
            <summary>System.Xaml.XamlMember 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlMember.#ctor(System.Xaml.XamlMember)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.DeclaringTypeGet">
            <summary>设置 XamlMember.get_DeclaringType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.DeferringLoaderGet">
            <summary>设置 XamlMember.get_DeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.DependsOnGet">
            <summary>设置 XamlMember.get_DependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.EqualsObject">
            <summary>设置 XamlMember.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.EqualsXamlMember">
            <summary>设置 XamlMember.Equals(XamlMember other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.GetHashCode01">
            <summary>设置 XamlMember.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.GetXamlNamespaces">
            <summary>设置 XamlMember.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.InvokerGet">
            <summary>设置 XamlMember.get_Invoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsAmbientGet">
            <summary>设置 XamlMember.get_IsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsAttachableGet">
            <summary>设置 XamlMember.get_IsAttachable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsDirectiveGet">
            <summary>设置 XamlMember.get_IsDirective() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsEventGet">
            <summary>设置 XamlMember.get_IsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsNameValidGet">
            <summary>设置 XamlMember.get_IsNameValid() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsReadOnlyGet">
            <summary>设置 XamlMember.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsReadPublicGet">
            <summary>设置 XamlMember.get_IsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsUnknownGet">
            <summary>设置 XamlMember.get_IsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsWriteOnlyGet">
            <summary>设置 XamlMember.get_IsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.IsWritePublicGet">
            <summary>设置 XamlMember.get_IsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupCustomAttributeProvider">
            <summary>设置 XamlMember.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupDeferringLoader">
            <summary>设置 XamlMember.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupDependsOn">
            <summary>设置 XamlMember.LookupDependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupInvoker">
            <summary>设置 XamlMember.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsAmbient">
            <summary>设置 XamlMember.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsEvent">
            <summary>设置 XamlMember.LookupIsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsReadOnly">
            <summary>设置 XamlMember.LookupIsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsReadPublic">
            <summary>设置 XamlMember.LookupIsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsUnknown">
            <summary>设置 XamlMember.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsWriteOnly">
            <summary>设置 XamlMember.LookupIsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupIsWritePublic">
            <summary>设置 XamlMember.LookupIsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupTargetType">
            <summary>设置 XamlMember.LookupTargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupType">
            <summary>设置 XamlMember.LookupType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupTypeConverter">
            <summary>设置 XamlMember.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupUnderlyingGetter">
            <summary>设置 XamlMember.LookupUnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupUnderlyingMember">
            <summary>设置 XamlMember.LookupUnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupUnderlyingSetter">
            <summary>设置 XamlMember.LookupUnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.LookupValueSerializer">
            <summary>设置 XamlMember.LookupValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.NameGet">
            <summary>设置 XamlMember.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.PreferredXamlNamespaceGet">
            <summary>设置 XamlMember.get_PreferredXamlNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.SerializationVisibilityGet">
            <summary>设置 XamlMember.get_SerializationVisibility() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.TargetTypeGet">
            <summary>设置 XamlMember.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.ToString01">
            <summary>设置 XamlMember.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.TypeConverterGet">
            <summary>设置 XamlMember.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.TypeGet">
            <summary>设置 XamlMember.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.UnderlyingMemberGet">
            <summary>设置 XamlMember.get_UnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.AllInstances.ValueSerializerGet">
            <summary>设置 XamlMember.get_ValueSerializer() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlMember.Bind(System.IEquatable{System.Xaml.XamlMember})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorEventInfoXamlSchemaContext">
            <summary>设置 XamlMember.XamlMember(EventInfo eventInfo, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorEventInfoXamlSchemaContextXamlMemberInvoker">
            <summary>设置 XamlMember.XamlMember(EventInfo eventInfo, XamlSchemaContext schemaContext, XamlMemberInvoker invoker) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorPropertyInfoXamlSchemaContext">
            <summary>设置 XamlMember.XamlMember(PropertyInfo propertyInfo, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorPropertyInfoXamlSchemaContextXamlMemberInvoker">
            <summary>设置 XamlMember.XamlMember(PropertyInfo propertyInfo, XamlSchemaContext schemaContext, XamlMemberInvoker invoker) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorStringMethodInfoMethodInfoXamlSchemaContext">
            <summary>设置 XamlMember.XamlMember(String attachablePropertyName, MethodInfo getter, MethodInfo setter, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorStringMethodInfoMethodInfoXamlSchemaContextXamlMemberInvoker">
            <summary>设置 XamlMember.XamlMember(String attachablePropertyName, MethodInfo getter, MethodInfo setter, XamlSchemaContext schemaContext, XamlMemberInvoker invoker) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorStringMethodInfoXamlSchemaContext">
            <summary>设置 XamlMember.XamlMember(String attachableEventName, MethodInfo adder, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorStringMethodInfoXamlSchemaContextXamlMemberInvoker">
            <summary>设置 XamlMember.XamlMember(String attachableEventName, MethodInfo adder, XamlSchemaContext schemaContext, XamlMemberInvoker invoker) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ConstructorStringXamlTypeBoolean">
            <summary>设置 XamlMember.XamlMember(String name, XamlType declaringType, Boolean isAttachable) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.DeclaringTypeGet">
            <summary>设置 XamlMember.get_DeclaringType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.DeferringLoaderGet">
            <summary>设置 XamlMember.get_DeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.DependsOnGet">
            <summary>设置 XamlMember.get_DependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.EqualityOpXamlMemberXamlMember">
            <summary>设置 XamlMember.op_Equality(XamlMember xamlMember1, XamlMember xamlMember2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.EqualsObject">
            <summary>设置 XamlMember.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.EqualsXamlMember">
            <summary>设置 XamlMember.Equals(XamlMember other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.GetHashCode">
            <summary>设置 XamlMember.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.GetXamlNamespaces">
            <summary>设置 XamlMember.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.InequalityOpXamlMemberXamlMember">
            <summary>设置 XamlMember.op_Inequality(XamlMember xamlMember1, XamlMember xamlMember2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.InvokerGet">
            <summary>设置 XamlMember.get_Invoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsAmbientGet">
            <summary>设置 XamlMember.get_IsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsAttachableGet">
            <summary>设置 XamlMember.get_IsAttachable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsDirectiveGet">
            <summary>设置 XamlMember.get_IsDirective() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsEventGet">
            <summary>设置 XamlMember.get_IsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsNameValidGet">
            <summary>设置 XamlMember.get_IsNameValid() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsReadOnlyGet">
            <summary>设置 XamlMember.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsReadPublicGet">
            <summary>设置 XamlMember.get_IsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsUnknownGet">
            <summary>设置 XamlMember.get_IsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsWriteOnlyGet">
            <summary>设置 XamlMember.get_IsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.IsWritePublicGet">
            <summary>设置 XamlMember.get_IsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupCustomAttributeProvider">
            <summary>设置 XamlMember.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupDeferringLoader">
            <summary>设置 XamlMember.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupDependsOn">
            <summary>设置 XamlMember.LookupDependsOn() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupInvoker">
            <summary>设置 XamlMember.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsAmbient">
            <summary>设置 XamlMember.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsEvent">
            <summary>设置 XamlMember.LookupIsEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsReadOnly">
            <summary>设置 XamlMember.LookupIsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsReadPublic">
            <summary>设置 XamlMember.LookupIsReadPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsUnknown">
            <summary>设置 XamlMember.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsWriteOnly">
            <summary>设置 XamlMember.LookupIsWriteOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupIsWritePublic">
            <summary>设置 XamlMember.LookupIsWritePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupTargetType">
            <summary>设置 XamlMember.LookupTargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupType">
            <summary>设置 XamlMember.LookupType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupTypeConverter">
            <summary>设置 XamlMember.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupUnderlyingGetter">
            <summary>设置 XamlMember.LookupUnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupUnderlyingMember">
            <summary>设置 XamlMember.LookupUnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupUnderlyingSetter">
            <summary>设置 XamlMember.LookupUnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.LookupValueSerializer">
            <summary>设置 XamlMember.LookupValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.NameGet">
            <summary>设置 XamlMember.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.PreferredXamlNamespaceGet">
            <summary>设置 XamlMember.get_PreferredXamlNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.SerializationVisibilityGet">
            <summary>设置 XamlMember.get_SerializationVisibility() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.TargetTypeGet">
            <summary>设置 XamlMember.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ToString">
            <summary>设置 XamlMember.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.TypeConverterGet">
            <summary>设置 XamlMember.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.TypeGet">
            <summary>设置 XamlMember.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.UnderlyingMemberGet">
            <summary>设置 XamlMember.get_UnderlyingMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlMember.ValueSerializerGet">
            <summary>设置 XamlMember.get_ValueSerializer() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlNodeList">
            <summary>System.Xaml.XamlNodeList 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeList.#ctor(System.Xaml.XamlNodeList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlNodeList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.AllInstances.Clear">
            <summary>设置 XamlNodeList.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.AllInstances.CountGet">
            <summary>设置 XamlNodeList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.AllInstances.GetReader">
            <summary>设置 XamlNodeList.GetReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.AllInstances.WriterGet">
            <summary>设置 XamlNodeList.get_Writer() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.Clear">
            <summary>设置 XamlNodeList.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.ConstructorXamlSchemaContext">
            <summary>设置 XamlNodeList.XamlNodeList(XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.ConstructorXamlSchemaContextInt32">
            <summary>设置 XamlNodeList.XamlNodeList(XamlSchemaContext schemaContext, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.CountGet">
            <summary>设置 XamlNodeList.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.GetReader">
            <summary>设置 XamlNodeList.GetReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeList.WriterGet">
            <summary>设置 XamlNodeList.get_Writer() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlNodeQueue">
            <summary>System.Xaml.XamlNodeQueue 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeQueue.#ctor(System.Xaml.XamlNodeQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlNodeQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.AllInstances.CountGet">
            <summary>设置 XamlNodeQueue.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.AllInstances.IsEmptyGet">
            <summary>设置 XamlNodeQueue.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.AllInstances.ReaderGet">
            <summary>设置 XamlNodeQueue.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.AllInstances.WriterGet">
            <summary>设置 XamlNodeQueue.get_Writer() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlNodeQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.ConstructorXamlSchemaContext">
            <summary>设置 XamlNodeQueue.XamlNodeQueue(XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.CountGet">
            <summary>设置 XamlNodeQueue.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.IsEmptyGet">
            <summary>设置 XamlNodeQueue.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.ReaderGet">
            <summary>设置 XamlNodeQueue.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlNodeQueue.WriterGet">
            <summary>设置 XamlNodeQueue.get_Writer() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectEventArgs">
            <summary>System.Xaml.XamlObjectEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectEventArgs.#ctor(System.Xaml.XamlObjectEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.ElementLineNumberGet">
            <summary>设置 XamlObjectEventArgs.get_ElementLineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.ElementLineNumberSetInt32">
            <summary>设置 XamlObjectEventArgs.set_ElementLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.ElementLinePositionGet">
            <summary>设置 XamlObjectEventArgs.get_ElementLinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.ElementLinePositionSetInt32">
            <summary>设置 XamlObjectEventArgs.set_ElementLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.InstanceGet">
            <summary>设置 XamlObjectEventArgs.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.InstanceSetObject">
            <summary>设置 XamlObjectEventArgs.set_Instance(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.SourceBamlUriGet">
            <summary>设置 XamlObjectEventArgs.get_SourceBamlUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.AllInstances.SourceBamlUriSetUri">
            <summary>设置 XamlObjectEventArgs.set_SourceBamlUri(Uri value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.ConstructorObject">
            <summary>设置 XamlObjectEventArgs.XamlObjectEventArgs(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.ElementLineNumberGet">
            <summary>设置 XamlObjectEventArgs.get_ElementLineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.ElementLineNumberSetInt32">
            <summary>设置 XamlObjectEventArgs.set_ElementLineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.ElementLinePositionGet">
            <summary>设置 XamlObjectEventArgs.get_ElementLinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.ElementLinePositionSetInt32">
            <summary>设置 XamlObjectEventArgs.set_ElementLinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.InstanceGet">
            <summary>设置 XamlObjectEventArgs.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.InstanceSetObject">
            <summary>设置 XamlObjectEventArgs.set_Instance(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.SourceBamlUriGet">
            <summary>设置 XamlObjectEventArgs.get_SourceBamlUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectEventArgs.SourceBamlUriSetUri">
            <summary>设置 XamlObjectEventArgs.set_SourceBamlUri(Uri value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReader">
            <summary>System.Xaml.XamlObjectReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReader.#ctor(System.Xaml.XamlObjectReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.InstanceGet">
            <summary>设置 XamlObjectReader.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.IsEofGet">
            <summary>设置 XamlObjectReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.MemberGet">
            <summary>设置 XamlObjectReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.NamespaceGet">
            <summary>设置 XamlObjectReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.NodeTypeGet">
            <summary>设置 XamlObjectReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.Read">
            <summary>设置 XamlObjectReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.SchemaContextGet">
            <summary>设置 XamlObjectReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.TypeGet">
            <summary>设置 XamlObjectReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.AllInstances.ValueGet">
            <summary>设置 XamlObjectReader.get_Value() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.ConstructorObject">
            <summary>设置 XamlObjectReader.XamlObjectReader(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.ConstructorObjectXamlObjectReaderSettings">
            <summary>设置 XamlObjectReader.XamlObjectReader(Object instance, XamlObjectReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.ConstructorObjectXamlSchemaContext">
            <summary>设置 XamlObjectReader.XamlObjectReader(Object instance, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.ConstructorObjectXamlSchemaContextXamlObjectReaderSettings">
            <summary>设置 XamlObjectReader.XamlObjectReader(Object instance, XamlSchemaContext schemaContext, XamlObjectReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.InstanceGet">
            <summary>设置 XamlObjectReader.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.IsEofGet">
            <summary>设置 XamlObjectReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.MemberGet">
            <summary>设置 XamlObjectReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.NamespaceGet">
            <summary>设置 XamlObjectReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.NodeTypeGet">
            <summary>设置 XamlObjectReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.Read">
            <summary>设置 XamlObjectReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.SchemaContextGet">
            <summary>设置 XamlObjectReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.TypeGet">
            <summary>设置 XamlObjectReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReader.ValueGet">
            <summary>设置 XamlObjectReader.get_Value() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReaderException">
            <summary>System.Xaml.XamlObjectReaderException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderException.#ctor(System.Xaml.XamlObjectReaderException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReaderException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderException.Constructor">
            <summary>设置 XamlObjectReaderException.XamlObjectReaderException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlObjectReaderException.XamlObjectReaderException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderException.ConstructorString">
            <summary>设置 XamlObjectReaderException.XamlObjectReaderException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderException.ConstructorStringException">
            <summary>设置 XamlObjectReaderException.XamlObjectReaderException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReaderSettings">
            <summary>System.Xaml.XamlObjectReaderSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderSettings.#ctor(System.Xaml.XamlObjectReaderSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectReaderSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.AllInstances.RequireExplicitContentVisibilityGet">
            <summary>设置 XamlObjectReaderSettings.get_RequireExplicitContentVisibility() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.AllInstances.RequireExplicitContentVisibilitySetBoolean">
            <summary>设置 XamlObjectReaderSettings.set_RequireExplicitContentVisibility(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectReaderSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.Constructor">
            <summary>设置 XamlObjectReaderSettings.XamlObjectReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.RequireExplicitContentVisibilityGet">
            <summary>设置 XamlObjectReaderSettings.get_RequireExplicitContentVisibility() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectReaderSettings.RequireExplicitContentVisibilitySetBoolean">
            <summary>设置 XamlObjectReaderSettings.set_RequireExplicitContentVisibility(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriter">
            <summary>System.Xaml.XamlObjectWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.#ctor(System.Xaml.XamlObjectWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.Clear">
            <summary>设置 XamlObjectWriter.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.DisposeBoolean">
            <summary>设置 XamlObjectWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.OnAfterBeginInitObject">
            <summary>设置 XamlObjectWriter.OnAfterBeginInit(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.OnAfterEndInitObject">
            <summary>设置 XamlObjectWriter.OnAfterEndInit(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.OnAfterPropertiesObject">
            <summary>设置 XamlObjectWriter.OnAfterProperties(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.OnBeforePropertiesObject">
            <summary>设置 XamlObjectWriter.OnBeforeProperties(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.OnSetValueObjectXamlMemberObject">
            <summary>设置 XamlObjectWriter.OnSetValue(Object eventSender, XamlMember member, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.ResultGet">
            <summary>设置 XamlObjectWriter.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.RootNameScopeGet">
            <summary>设置 XamlObjectWriter.get_RootNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.SchemaContextGet">
            <summary>设置 XamlObjectWriter.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.SetLineInfoInt32Int32">
            <summary>设置 XamlObjectWriter.SetLineInfo(Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.ShouldProvideLineInfoGet">
            <summary>设置 XamlObjectWriter.get_ShouldProvideLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteEndMember">
            <summary>设置 XamlObjectWriter.WriteEndMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteEndObject">
            <summary>设置 XamlObjectWriter.WriteEndObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteGetObject">
            <summary>设置 XamlObjectWriter.WriteGetObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlObjectWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteStartMemberXamlMember">
            <summary>设置 XamlObjectWriter.WriteStartMember(XamlMember property) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteStartObjectXamlType">
            <summary>设置 XamlObjectWriter.WriteStartObject(XamlType xamlType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.AllInstances.WriteValueObject">
            <summary>设置 XamlObjectWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.Bind(System.Xaml.IXamlLineInfoConsumer)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.Clear">
            <summary>设置 XamlObjectWriter.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.ConstructorXamlSchemaContext">
            <summary>设置 XamlObjectWriter.XamlObjectWriter(XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.ConstructorXamlSchemaContextXamlObjectWriterSettings">
            <summary>设置 XamlObjectWriter.XamlObjectWriter(XamlSchemaContext schemaContext, XamlObjectWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.DisposeBoolean">
            <summary>设置 XamlObjectWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.OnAfterBeginInitObject">
            <summary>设置 XamlObjectWriter.OnAfterBeginInit(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.OnAfterEndInitObject">
            <summary>设置 XamlObjectWriter.OnAfterEndInit(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.OnAfterPropertiesObject">
            <summary>设置 XamlObjectWriter.OnAfterProperties(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.OnBeforePropertiesObject">
            <summary>设置 XamlObjectWriter.OnBeforeProperties(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.OnSetValueObjectXamlMemberObject">
            <summary>设置 XamlObjectWriter.OnSetValue(Object eventSender, XamlMember member, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.ResultGet">
            <summary>设置 XamlObjectWriter.get_Result() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.RootNameScopeGet">
            <summary>设置 XamlObjectWriter.get_RootNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.SchemaContextGet">
            <summary>设置 XamlObjectWriter.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.SetLineInfoInt32Int32">
            <summary>设置 XamlObjectWriter.SetLineInfo(Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.ShouldProvideLineInfoGet">
            <summary>设置 XamlObjectWriter.get_ShouldProvideLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteEndMember">
            <summary>设置 XamlObjectWriter.WriteEndMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteEndObject">
            <summary>设置 XamlObjectWriter.WriteEndObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteGetObject">
            <summary>设置 XamlObjectWriter.WriteGetObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlObjectWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteStartMemberXamlMember">
            <summary>设置 XamlObjectWriter.WriteStartMember(XamlMember property) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteStartObjectXamlType">
            <summary>设置 XamlObjectWriter.WriteStartObject(XamlType xamlType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriter.WriteValueObject">
            <summary>设置 XamlObjectWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriterException">
            <summary>System.Xaml.XamlObjectWriterException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterException.#ctor(System.Xaml.XamlObjectWriterException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriterException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterException.Constructor">
            <summary>设置 XamlObjectWriterException.XamlObjectWriterException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlObjectWriterException.XamlObjectWriterException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterException.ConstructorString">
            <summary>设置 XamlObjectWriterException.XamlObjectWriterException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterException.ConstructorStringException">
            <summary>设置 XamlObjectWriterException.XamlObjectWriterException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriterSettings">
            <summary>System.Xaml.XamlObjectWriterSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AccessLevelGet">
            <summary>设置 XamlObjectWriterSettings.get_AccessLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AccessLevelSetXamlAccessLevel">
            <summary>设置 XamlObjectWriterSettings.set_AccessLevel(XamlAccessLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterBeginInitHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterBeginInitHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterBeginInitHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterBeginInitHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterEndInitHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterEndInitHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterEndInitHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterEndInitHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterPropertiesHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterPropertiesHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AfterPropertiesHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterPropertiesHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AccessLevelGet">
            <summary>设置 XamlObjectWriterSettings.get_AccessLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AccessLevelSetXamlAccessLevel">
            <summary>设置 XamlObjectWriterSettings.set_AccessLevel(XamlAccessLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterBeginInitHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterBeginInitHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterBeginInitHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterBeginInitHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterEndInitHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterEndInitHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterEndInitHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterEndInitHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterPropertiesHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_AfterPropertiesHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.AfterPropertiesHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_AfterPropertiesHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.BeforePropertiesHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_BeforePropertiesHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.BeforePropertiesHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_BeforePropertiesHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.ExternalNameScopeGet">
            <summary>设置 XamlObjectWriterSettings.get_ExternalNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.ExternalNameScopeSetINameScope">
            <summary>设置 XamlObjectWriterSettings.set_ExternalNameScope(INameScope value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.IgnoreCanConvertGet">
            <summary>设置 XamlObjectWriterSettings.get_IgnoreCanConvert() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.IgnoreCanConvertSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_IgnoreCanConvert(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.PreferUnconvertedDictionaryKeysGet">
            <summary>设置 XamlObjectWriterSettings.get_PreferUnconvertedDictionaryKeys() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.PreferUnconvertedDictionaryKeysSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_PreferUnconvertedDictionaryKeys(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.RegisterNamesOnExternalNamescopeGet">
            <summary>设置 XamlObjectWriterSettings.get_RegisterNamesOnExternalNamescope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.RegisterNamesOnExternalNamescopeSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_RegisterNamesOnExternalNamescope(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.RootObjectInstanceGet">
            <summary>设置 XamlObjectWriterSettings.get_RootObjectInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.RootObjectInstanceSetObject">
            <summary>设置 XamlObjectWriterSettings.set_RootObjectInstance(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SkipDuplicatePropertyCheckGet">
            <summary>设置 XamlObjectWriterSettings.get_SkipDuplicatePropertyCheck() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SkipDuplicatePropertyCheckSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_SkipDuplicatePropertyCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SkipProvideValueOnRootGet">
            <summary>设置 XamlObjectWriterSettings.get_SkipProvideValueOnRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SkipProvideValueOnRootSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_SkipProvideValueOnRoot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SourceBamlUriGet">
            <summary>设置 XamlObjectWriterSettings.get_SourceBamlUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.SourceBamlUriSetUri">
            <summary>设置 XamlObjectWriterSettings.set_SourceBamlUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.XamlSetValueHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_XamlSetValueHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.AllInstances.XamlSetValueHandlerSetEventHandlerOfXamlSetValueEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_XamlSetValueHandler(EventHandler`1&lt;XamlSetValueEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.BeforePropertiesHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_BeforePropertiesHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.BeforePropertiesHandlerSetEventHandlerOfXamlObjectEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_BeforePropertiesHandler(EventHandler`1&lt;XamlObjectEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlObjectWriterSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.Constructor">
            <summary>设置 XamlObjectWriterSettings.XamlObjectWriterSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.ConstructorXamlObjectWriterSettings">
            <summary>设置 XamlObjectWriterSettings.XamlObjectWriterSettings(XamlObjectWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.ExternalNameScopeGet">
            <summary>设置 XamlObjectWriterSettings.get_ExternalNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.ExternalNameScopeSetINameScope">
            <summary>设置 XamlObjectWriterSettings.set_ExternalNameScope(INameScope value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.IgnoreCanConvertGet">
            <summary>设置 XamlObjectWriterSettings.get_IgnoreCanConvert() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.IgnoreCanConvertSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_IgnoreCanConvert(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.PreferUnconvertedDictionaryKeysGet">
            <summary>设置 XamlObjectWriterSettings.get_PreferUnconvertedDictionaryKeys() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.PreferUnconvertedDictionaryKeysSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_PreferUnconvertedDictionaryKeys(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.RegisterNamesOnExternalNamescopeGet">
            <summary>设置 XamlObjectWriterSettings.get_RegisterNamesOnExternalNamescope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.RegisterNamesOnExternalNamescopeSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_RegisterNamesOnExternalNamescope(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.RootObjectInstanceGet">
            <summary>设置 XamlObjectWriterSettings.get_RootObjectInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.RootObjectInstanceSetObject">
            <summary>设置 XamlObjectWriterSettings.set_RootObjectInstance(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SkipDuplicatePropertyCheckGet">
            <summary>设置 XamlObjectWriterSettings.get_SkipDuplicatePropertyCheck() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SkipDuplicatePropertyCheckSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_SkipDuplicatePropertyCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SkipProvideValueOnRootGet">
            <summary>设置 XamlObjectWriterSettings.get_SkipProvideValueOnRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SkipProvideValueOnRootSetBoolean">
            <summary>设置 XamlObjectWriterSettings.set_SkipProvideValueOnRoot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SourceBamlUriGet">
            <summary>设置 XamlObjectWriterSettings.get_SourceBamlUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.SourceBamlUriSetUri">
            <summary>设置 XamlObjectWriterSettings.set_SourceBamlUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.XamlSetValueHandlerGet">
            <summary>设置 XamlObjectWriterSettings.get_XamlSetValueHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlObjectWriterSettings.XamlSetValueHandlerSetEventHandlerOfXamlSetValueEventArgs">
            <summary>设置 XamlObjectWriterSettings.set_XamlSetValueHandler(EventHandler`1&lt;XamlSetValueEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlParseException">
            <summary>System.Xaml.XamlParseException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlParseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlParseException.#ctor(System.Xaml.XamlParseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlParseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlParseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlParseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlParseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlParseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlParseException.Constructor">
            <summary>设置 XamlParseException.XamlParseException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlParseException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlParseException.XamlParseException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlParseException.ConstructorString">
            <summary>设置 XamlParseException.XamlParseException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlParseException.ConstructorStringException">
            <summary>设置 XamlParseException.XamlParseException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlReader">
            <summary>System.Xaml.XamlReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReader.#ctor(System.Xaml.XamlReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.Close">
            <summary>设置 XamlReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.DisposeBoolean">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.IsDisposedGet">
            <summary>设置 XamlReader.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.IsDisposedSetBoolean">
            <summary>设置 XamlReader.set_IsDisposed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.Skip">
            <summary>设置 XamlReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.AllInstances.SystemIDisposableDispose">
            <summary>设置 XamlReader.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.Close">
            <summary>设置 XamlReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.Constructor">
            <summary>设置 XamlReader.XamlReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.DisposeBoolean">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.IsDisposedGet">
            <summary>设置 XamlReader.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.IsDisposedSetBoolean">
            <summary>设置 XamlReader.set_IsDisposed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.Skip">
            <summary>设置 XamlReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReader.SystemIDisposableDispose">
            <summary>设置 XamlReader.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlReaderSettings">
            <summary>System.Xaml.XamlReaderSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReaderSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.AllowProtectedMembersOnRootGet">
            <summary>设置 XamlReaderSettings.get_AllowProtectedMembersOnRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.AllowProtectedMembersOnRootSetBoolean">
            <summary>设置 XamlReaderSettings.set_AllowProtectedMembersOnRoot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.BaseUriGet">
            <summary>设置 XamlReaderSettings.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.BaseUriSetUri">
            <summary>设置 XamlReaderSettings.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.IgnoreUidsOnPropertyElementsGet">
            <summary>设置 XamlReaderSettings.get_IgnoreUidsOnPropertyElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.IgnoreUidsOnPropertyElementsSetBoolean">
            <summary>设置 XamlReaderSettings.set_IgnoreUidsOnPropertyElements(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.LocalAssemblyGet">
            <summary>设置 XamlReaderSettings.get_LocalAssembly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.LocalAssemblySetAssembly">
            <summary>设置 XamlReaderSettings.set_LocalAssembly(Assembly value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.ProvideLineInfoGet">
            <summary>设置 XamlReaderSettings.get_ProvideLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.ProvideLineInfoSetBoolean">
            <summary>设置 XamlReaderSettings.set_ProvideLineInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.ValuesMustBeStringGet">
            <summary>设置 XamlReaderSettings.get_ValuesMustBeString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllInstances.ValuesMustBeStringSetBoolean">
            <summary>设置 XamlReaderSettings.set_ValuesMustBeString(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllowProtectedMembersOnRootGet">
            <summary>设置 XamlReaderSettings.get_AllowProtectedMembersOnRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.AllowProtectedMembersOnRootSetBoolean">
            <summary>设置 XamlReaderSettings.set_AllowProtectedMembersOnRoot(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.BaseUriGet">
            <summary>设置 XamlReaderSettings.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.BaseUriSetUri">
            <summary>设置 XamlReaderSettings.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReaderSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlReaderSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.Constructor">
            <summary>设置 XamlReaderSettings.XamlReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.ConstructorXamlReaderSettings">
            <summary>设置 XamlReaderSettings.XamlReaderSettings(XamlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.IgnoreUidsOnPropertyElementsGet">
            <summary>设置 XamlReaderSettings.get_IgnoreUidsOnPropertyElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.IgnoreUidsOnPropertyElementsSetBoolean">
            <summary>设置 XamlReaderSettings.set_IgnoreUidsOnPropertyElements(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.LocalAssemblyGet">
            <summary>设置 XamlReaderSettings.get_LocalAssembly() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.LocalAssemblySetAssembly">
            <summary>设置 XamlReaderSettings.set_LocalAssembly(Assembly value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.ProvideLineInfoGet">
            <summary>设置 XamlReaderSettings.get_ProvideLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.ProvideLineInfoSetBoolean">
            <summary>设置 XamlReaderSettings.set_ProvideLineInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.ValuesMustBeStringGet">
            <summary>设置 XamlReaderSettings.get_ValuesMustBeString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlReaderSettings.ValuesMustBeStringSetBoolean">
            <summary>设置 XamlReaderSettings.set_ValuesMustBeString(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaContext">
            <summary>System.Xaml.XamlSchemaContext 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.#ctor(System.Xaml.XamlSchemaContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.FullyQualifyAssemblyNamesInClrNamespacesGet">
            <summary>设置 XamlSchemaContext.get_FullyQualifyAssemblyNamesInClrNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetAllXamlNamespaces">
            <summary>设置 XamlSchemaContext.GetAllXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetAllXamlTypesString">
            <summary>设置 XamlSchemaContext.GetAllXamlTypes(String xamlNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetPreferredPrefixString">
            <summary>设置 XamlSchemaContext.GetPreferredPrefix(String xmlns) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetValueConverterOf1TypeXamlType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xaml.XamlSchemaContext,System.Type,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{``0}})">
            <summary>设置 XamlSchemaContext.GetValueConverter(Type converterType, XamlType targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetXamlDirectiveStringString">
            <summary>设置 XamlSchemaContext.GetXamlDirective(String xamlNamespace, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetXamlTypeStringStringXamlTypeArray">
            <summary>设置 XamlSchemaContext.GetXamlType(String xamlNamespace, String name, XamlType[] typeArguments) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetXamlTypeType">
            <summary>设置 XamlSchemaContext.GetXamlType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.GetXamlTypeXamlTypeName">
            <summary>设置 XamlSchemaContext.GetXamlType(XamlTypeName xamlTypeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.OnAssemblyResolveString">
            <summary>设置 XamlSchemaContext.OnAssemblyResolve(String assemblyName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.ReferenceAssembliesGet">
            <summary>设置 XamlSchemaContext.get_ReferenceAssemblies() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.SupportMarkupExtensionsWithDuplicateArityGet">
            <summary>设置 XamlSchemaContext.get_SupportMarkupExtensionsWithDuplicateArity() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.AllInstances.TryGetCompatibleXamlNamespaceStringStringOut">
            <summary>设置 XamlSchemaContext.TryGetCompatibleXamlNamespace(String xamlNamespace, String&amp; compatibleNamespace) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.Constructor">
            <summary>设置 XamlSchemaContext.XamlSchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.ConstructorIEnumerableOfAssembly">
            <summary>设置 XamlSchemaContext.XamlSchemaContext(IEnumerable`1&lt;Assembly&gt; referenceAssemblies) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.ConstructorIEnumerableOfAssemblyXamlSchemaContextSettings">
            <summary>设置 XamlSchemaContext.XamlSchemaContext(IEnumerable`1&lt;Assembly&gt; referenceAssemblies, XamlSchemaContextSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.ConstructorXamlSchemaContextSettings">
            <summary>设置 XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespacesGet">
            <summary>设置 XamlSchemaContext.get_FullyQualifyAssemblyNamesInClrNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetAllXamlNamespaces">
            <summary>设置 XamlSchemaContext.GetAllXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetAllXamlTypesString">
            <summary>设置 XamlSchemaContext.GetAllXamlTypes(String xamlNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetPreferredPrefixString">
            <summary>设置 XamlSchemaContext.GetPreferredPrefix(String xmlns) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContext.GetValueConverterOf1TypeXamlType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{``0}})">
            <summary>设置 XamlSchemaContext.GetValueConverter(Type converterType, XamlType targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetXamlDirectiveStringString">
            <summary>设置 XamlSchemaContext.GetXamlDirective(String xamlNamespace, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetXamlTypeStringStringXamlTypeArray">
            <summary>设置 XamlSchemaContext.GetXamlType(String xamlNamespace, String name, XamlType[] typeArguments) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetXamlTypeType">
            <summary>设置 XamlSchemaContext.GetXamlType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.GetXamlTypeXamlTypeName">
            <summary>设置 XamlSchemaContext.GetXamlType(XamlTypeName xamlTypeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.OnAssemblyResolveString">
            <summary>设置 XamlSchemaContext.OnAssemblyResolve(String assemblyName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.ReferenceAssembliesGet">
            <summary>设置 XamlSchemaContext.get_ReferenceAssemblies() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.SupportMarkupExtensionsWithDuplicateArityGet">
            <summary>设置 XamlSchemaContext.get_SupportMarkupExtensionsWithDuplicateArity() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContext.TryGetCompatibleXamlNamespaceStringStringOut">
            <summary>设置 XamlSchemaContext.TryGetCompatibleXamlNamespace(String xamlNamespace, String&amp; compatibleNamespace) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaContextSettings">
            <summary>System.Xaml.XamlSchemaContextSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContextSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaContextSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.AllInstances.FullyQualifyAssemblyNamesInClrNamespacesGet">
            <summary>设置 XamlSchemaContextSettings.get_FullyQualifyAssemblyNamesInClrNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.AllInstances.FullyQualifyAssemblyNamesInClrNamespacesSetBoolean">
            <summary>设置 XamlSchemaContextSettings.set_FullyQualifyAssemblyNamesInClrNamespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.AllInstances.SupportMarkupExtensionsWithDuplicateArityGet">
            <summary>设置 XamlSchemaContextSettings.get_SupportMarkupExtensionsWithDuplicateArity() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.AllInstances.SupportMarkupExtensionsWithDuplicateAritySetBoolean">
            <summary>设置 XamlSchemaContextSettings.set_SupportMarkupExtensionsWithDuplicateArity(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContextSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaContextSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.Constructor">
            <summary>设置 XamlSchemaContextSettings.XamlSchemaContextSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.ConstructorXamlSchemaContextSettings">
            <summary>设置 XamlSchemaContextSettings.XamlSchemaContextSettings(XamlSchemaContextSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespacesGet">
            <summary>设置 XamlSchemaContextSettings.get_FullyQualifyAssemblyNamesInClrNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespacesSetBoolean">
            <summary>设置 XamlSchemaContextSettings.set_FullyQualifyAssemblyNamesInClrNamespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArityGet">
            <summary>设置 XamlSchemaContextSettings.get_SupportMarkupExtensionsWithDuplicateArity() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateAritySetBoolean">
            <summary>设置 XamlSchemaContextSettings.set_SupportMarkupExtensionsWithDuplicateArity(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaException">
            <summary>System.Xaml.XamlSchemaException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaException.#ctor(System.Xaml.XamlSchemaException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlSchemaException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlSchemaException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaException.Constructor">
            <summary>设置 XamlSchemaException.XamlSchemaException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlSchemaException.XamlSchemaException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaException.ConstructorString">
            <summary>设置 XamlSchemaException.XamlSchemaException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlSchemaException.ConstructorStringException">
            <summary>设置 XamlSchemaException.XamlSchemaException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlServices">
            <summary>System.Xaml.XamlServices 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlServices.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlServices.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlServices.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.LoadStream">
            <summary>设置 XamlServices.Load(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.LoadString">
            <summary>设置 XamlServices.Load(String fileName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.LoadTextReader">
            <summary>设置 XamlServices.Load(TextReader textReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.LoadXamlReader">
            <summary>设置 XamlServices.Load(XamlReader xamlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.LoadXmlReader">
            <summary>设置 XamlServices.Load(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.ParseString">
            <summary>设置 XamlServices.Parse(String xaml) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveObject">
            <summary>设置 XamlServices.Save(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveStreamObject">
            <summary>设置 XamlServices.Save(Stream stream, Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveStringObject">
            <summary>设置 XamlServices.Save(String fileName, Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveTextWriterObject">
            <summary>设置 XamlServices.Save(TextWriter writer, Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveXamlWriterObject">
            <summary>设置 XamlServices.Save(XamlWriter writer, Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.SaveXmlWriterObject">
            <summary>设置 XamlServices.Save(XmlWriter writer, Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.TransformXamlReaderXamlWriter">
            <summary>设置 XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlServices.TransformXamlReaderXamlWriterBoolean">
            <summary>设置 XamlServices.Transform(XamlReader xamlReader, XamlWriter xamlWriter, Boolean closeWriter) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlType">
            <summary>System.Xaml.XamlType 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlType.#ctor(System.Xaml.XamlType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.AllowedContentTypesGet">
            <summary>设置 XamlType.get_AllowedContentTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.BaseTypeGet">
            <summary>设置 XamlType.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.CanAssignToXamlType">
            <summary>设置 XamlType.CanAssignTo(XamlType xamlType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ConstructionRequiresArgumentsGet">
            <summary>设置 XamlType.get_ConstructionRequiresArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ContentPropertyGet">
            <summary>设置 XamlType.get_ContentProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ContentWrappersGet">
            <summary>设置 XamlType.get_ContentWrappers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.DeferringLoaderGet">
            <summary>设置 XamlType.get_DeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.EqualsObject">
            <summary>设置 XamlType.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.EqualsXamlType">
            <summary>设置 XamlType.Equals(XamlType other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetAliasedPropertyXamlDirective">
            <summary>设置 XamlType.GetAliasedProperty(XamlDirective directive) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetAllAttachableMembers">
            <summary>设置 XamlType.GetAllAttachableMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetAllMembers">
            <summary>设置 XamlType.GetAllMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetAttachableMemberString">
            <summary>设置 XamlType.GetAttachableMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetHashCode01">
            <summary>设置 XamlType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetMemberString">
            <summary>设置 XamlType.GetMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetPositionalParametersInt32">
            <summary>设置 XamlType.GetPositionalParameters(Int32 parameterCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.GetXamlNamespaces">
            <summary>设置 XamlType.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.InvokerGet">
            <summary>设置 XamlType.get_Invoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsAmbientGet">
            <summary>设置 XamlType.get_IsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsArrayGet">
            <summary>设置 XamlType.get_IsArray() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsCollectionGet">
            <summary>设置 XamlType.get_IsCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsConstructibleGet">
            <summary>设置 XamlType.get_IsConstructible() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsDictionaryGet">
            <summary>设置 XamlType.get_IsDictionary() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsGenericGet">
            <summary>设置 XamlType.get_IsGeneric() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsMarkupExtensionGet">
            <summary>设置 XamlType.get_IsMarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsNameScopeGet">
            <summary>设置 XamlType.get_IsNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsNameValidGet">
            <summary>设置 XamlType.get_IsNameValid() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsNullableGet">
            <summary>设置 XamlType.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsPublicGet">
            <summary>设置 XamlType.get_IsPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsUnknownGet">
            <summary>设置 XamlType.get_IsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsUsableDuringInitializationGet">
            <summary>设置 XamlType.get_IsUsableDuringInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsWhitespaceSignificantCollectionGet">
            <summary>设置 XamlType.get_IsWhitespaceSignificantCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.IsXDataGet">
            <summary>设置 XamlType.get_IsXData() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ItemTypeGet">
            <summary>设置 XamlType.get_ItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.KeyTypeGet">
            <summary>设置 XamlType.get_KeyType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupAliasedPropertyXamlDirective">
            <summary>设置 XamlType.LookupAliasedProperty(XamlDirective directive) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupAllAttachableMembers">
            <summary>设置 XamlType.LookupAllAttachableMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupAllMembers">
            <summary>设置 XamlType.LookupAllMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupAllowedContentTypes">
            <summary>设置 XamlType.LookupAllowedContentTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupAttachableMemberString">
            <summary>设置 XamlType.LookupAttachableMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupBaseType">
            <summary>设置 XamlType.LookupBaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupCollectionKind">
            <summary>设置 XamlType.LookupCollectionKind() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupConstructionRequiresArguments">
            <summary>设置 XamlType.LookupConstructionRequiresArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupContentProperty">
            <summary>设置 XamlType.LookupContentProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupContentWrappers">
            <summary>设置 XamlType.LookupContentWrappers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupCustomAttributeProvider">
            <summary>设置 XamlType.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupDeferringLoader">
            <summary>设置 XamlType.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupInvoker">
            <summary>设置 XamlType.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsAmbient">
            <summary>设置 XamlType.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsConstructible">
            <summary>设置 XamlType.LookupIsConstructible() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsMarkupExtension">
            <summary>设置 XamlType.LookupIsMarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsNameScope">
            <summary>设置 XamlType.LookupIsNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsNullable">
            <summary>设置 XamlType.LookupIsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsPublic">
            <summary>设置 XamlType.LookupIsPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsUnknown">
            <summary>设置 XamlType.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsWhitespaceSignificantCollection">
            <summary>设置 XamlType.LookupIsWhitespaceSignificantCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupIsXData">
            <summary>设置 XamlType.LookupIsXData() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupItemType">
            <summary>设置 XamlType.LookupItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupKeyType">
            <summary>设置 XamlType.LookupKeyType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupMarkupExtensionReturnType">
            <summary>设置 XamlType.LookupMarkupExtensionReturnType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupMemberStringBoolean">
            <summary>设置 XamlType.LookupMember(String name, Boolean skipReadOnlyCheck) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupPositionalParametersInt32">
            <summary>设置 XamlType.LookupPositionalParameters(Int32 parameterCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupSetMarkupExtensionHandler">
            <summary>设置 XamlType.LookupSetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupSetTypeConverterHandler">
            <summary>设置 XamlType.LookupSetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupTrimSurroundingWhitespace">
            <summary>设置 XamlType.LookupTrimSurroundingWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupTypeConverter">
            <summary>设置 XamlType.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupUnderlyingType">
            <summary>设置 XamlType.LookupUnderlyingType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupUsableDuringInitialization">
            <summary>设置 XamlType.LookupUsableDuringInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.LookupValueSerializer">
            <summary>设置 XamlType.LookupValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.MarkupExtensionReturnTypeGet">
            <summary>设置 XamlType.get_MarkupExtensionReturnType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.NameGet">
            <summary>设置 XamlType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.PreferredXamlNamespaceGet">
            <summary>设置 XamlType.get_PreferredXamlNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.SchemaContextGet">
            <summary>设置 XamlType.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ToString01">
            <summary>设置 XamlType.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.TrimSurroundingWhitespaceGet">
            <summary>设置 XamlType.get_TrimSurroundingWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.TypeArgumentsGet">
            <summary>设置 XamlType.get_TypeArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.TypeConverterGet">
            <summary>设置 XamlType.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.UnderlyingTypeGet">
            <summary>设置 XamlType.get_UnderlyingType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllInstances.ValueSerializerGet">
            <summary>设置 XamlType.get_ValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.AllowedContentTypesGet">
            <summary>设置 XamlType.get_AllowedContentTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.BaseTypeGet">
            <summary>设置 XamlType.get_BaseType() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlType.Bind(System.IEquatable{System.Xaml.XamlType})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.CanAssignToXamlType">
            <summary>设置 XamlType.CanAssignTo(XamlType xamlType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ConstructionRequiresArgumentsGet">
            <summary>设置 XamlType.get_ConstructionRequiresArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ConstructorStringIListOfXamlTypeXamlSchemaContext">
            <summary>设置 XamlType.XamlType(String typeName, IList`1&lt;XamlType&gt; typeArguments, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ConstructorStringStringIListOfXamlTypeXamlSchemaContext">
            <summary>设置 XamlType.XamlType(String unknownTypeNamespace, String unknownTypeName, IList`1&lt;XamlType&gt; typeArguments, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ConstructorTypeXamlSchemaContext">
            <summary>设置 XamlType.XamlType(Type underlyingType, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ConstructorTypeXamlSchemaContextXamlTypeInvoker">
            <summary>设置 XamlType.XamlType(Type underlyingType, XamlSchemaContext schemaContext, XamlTypeInvoker invoker) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ContentPropertyGet">
            <summary>设置 XamlType.get_ContentProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ContentWrappersGet">
            <summary>设置 XamlType.get_ContentWrappers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.DeferringLoaderGet">
            <summary>设置 XamlType.get_DeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.EqualityOpXamlTypeXamlType">
            <summary>设置 XamlType.op_Equality(XamlType xamlType1, XamlType xamlType2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.EqualsObject">
            <summary>设置 XamlType.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.EqualsXamlType">
            <summary>设置 XamlType.Equals(XamlType other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetAliasedPropertyXamlDirective">
            <summary>设置 XamlType.GetAliasedProperty(XamlDirective directive) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetAllAttachableMembers">
            <summary>设置 XamlType.GetAllAttachableMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetAllMembers">
            <summary>设置 XamlType.GetAllMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetAttachableMemberString">
            <summary>设置 XamlType.GetAttachableMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetHashCode">
            <summary>设置 XamlType.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetMemberString">
            <summary>设置 XamlType.GetMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetPositionalParametersInt32">
            <summary>设置 XamlType.GetPositionalParameters(Int32 parameterCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.GetXamlNamespaces">
            <summary>设置 XamlType.GetXamlNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.InequalityOpXamlTypeXamlType">
            <summary>设置 XamlType.op_Inequality(XamlType xamlType1, XamlType xamlType2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.InvokerGet">
            <summary>设置 XamlType.get_Invoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsAmbientGet">
            <summary>设置 XamlType.get_IsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsArrayGet">
            <summary>设置 XamlType.get_IsArray() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsCollectionGet">
            <summary>设置 XamlType.get_IsCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsConstructibleGet">
            <summary>设置 XamlType.get_IsConstructible() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsDictionaryGet">
            <summary>设置 XamlType.get_IsDictionary() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsGenericGet">
            <summary>设置 XamlType.get_IsGeneric() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsMarkupExtensionGet">
            <summary>设置 XamlType.get_IsMarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsNameScopeGet">
            <summary>设置 XamlType.get_IsNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsNameValidGet">
            <summary>设置 XamlType.get_IsNameValid() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsNullableGet">
            <summary>设置 XamlType.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsPublicGet">
            <summary>设置 XamlType.get_IsPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsUnknownGet">
            <summary>设置 XamlType.get_IsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsUsableDuringInitializationGet">
            <summary>设置 XamlType.get_IsUsableDuringInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsWhitespaceSignificantCollectionGet">
            <summary>设置 XamlType.get_IsWhitespaceSignificantCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.IsXDataGet">
            <summary>设置 XamlType.get_IsXData() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ItemTypeGet">
            <summary>设置 XamlType.get_ItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.KeyTypeGet">
            <summary>设置 XamlType.get_KeyType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupAliasedPropertyXamlDirective">
            <summary>设置 XamlType.LookupAliasedProperty(XamlDirective directive) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupAllAttachableMembers">
            <summary>设置 XamlType.LookupAllAttachableMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupAllMembers">
            <summary>设置 XamlType.LookupAllMembers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupAllowedContentTypes">
            <summary>设置 XamlType.LookupAllowedContentTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupAttachableMemberString">
            <summary>设置 XamlType.LookupAttachableMember(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupBaseType">
            <summary>设置 XamlType.LookupBaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupCollectionKind">
            <summary>设置 XamlType.LookupCollectionKind() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupConstructionRequiresArguments">
            <summary>设置 XamlType.LookupConstructionRequiresArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupContentProperty">
            <summary>设置 XamlType.LookupContentProperty() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupContentWrappers">
            <summary>设置 XamlType.LookupContentWrappers() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupCustomAttributeProvider">
            <summary>设置 XamlType.LookupCustomAttributeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupDeferringLoader">
            <summary>设置 XamlType.LookupDeferringLoader() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupInvoker">
            <summary>设置 XamlType.LookupInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsAmbient">
            <summary>设置 XamlType.LookupIsAmbient() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsConstructible">
            <summary>设置 XamlType.LookupIsConstructible() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsMarkupExtension">
            <summary>设置 XamlType.LookupIsMarkupExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsNameScope">
            <summary>设置 XamlType.LookupIsNameScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsNullable">
            <summary>设置 XamlType.LookupIsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsPublic">
            <summary>设置 XamlType.LookupIsPublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsUnknown">
            <summary>设置 XamlType.LookupIsUnknown() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsWhitespaceSignificantCollection">
            <summary>设置 XamlType.LookupIsWhitespaceSignificantCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupIsXData">
            <summary>设置 XamlType.LookupIsXData() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupItemType">
            <summary>设置 XamlType.LookupItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupKeyType">
            <summary>设置 XamlType.LookupKeyType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupMarkupExtensionReturnType">
            <summary>设置 XamlType.LookupMarkupExtensionReturnType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupMemberStringBoolean">
            <summary>设置 XamlType.LookupMember(String name, Boolean skipReadOnlyCheck) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupPositionalParametersInt32">
            <summary>设置 XamlType.LookupPositionalParameters(Int32 parameterCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupSetMarkupExtensionHandler">
            <summary>设置 XamlType.LookupSetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupSetTypeConverterHandler">
            <summary>设置 XamlType.LookupSetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupTrimSurroundingWhitespace">
            <summary>设置 XamlType.LookupTrimSurroundingWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupTypeConverter">
            <summary>设置 XamlType.LookupTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupUnderlyingType">
            <summary>设置 XamlType.LookupUnderlyingType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupUsableDuringInitialization">
            <summary>设置 XamlType.LookupUsableDuringInitialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.LookupValueSerializer">
            <summary>设置 XamlType.LookupValueSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.MarkupExtensionReturnTypeGet">
            <summary>设置 XamlType.get_MarkupExtensionReturnType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.NameGet">
            <summary>设置 XamlType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.PreferredXamlNamespaceGet">
            <summary>设置 XamlType.get_PreferredXamlNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.SchemaContextGet">
            <summary>设置 XamlType.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ToString">
            <summary>设置 XamlType.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.TrimSurroundingWhitespaceGet">
            <summary>设置 XamlType.get_TrimSurroundingWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.TypeArgumentsGet">
            <summary>设置 XamlType.get_TypeArguments() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.TypeConverterGet">
            <summary>设置 XamlType.get_TypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.UnderlyingTypeGet">
            <summary>设置 XamlType.get_UnderlyingType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlType.ValueSerializerGet">
            <summary>设置 XamlType.get_ValueSerializer() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlWriter">
            <summary>System.Xaml.XamlWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriter.#ctor(System.Xaml.XamlWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.Close">
            <summary>设置 XamlWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.DisposeBoolean">
            <summary>设置 XamlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.IsDisposedGet">
            <summary>设置 XamlWriter.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.IsDisposedSetBoolean">
            <summary>设置 XamlWriter.set_IsDisposed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.SystemIDisposableDispose">
            <summary>设置 XamlWriter.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.AllInstances.WriteNodeXamlReader">
            <summary>设置 XamlWriter.WriteNode(XamlReader reader) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.Close">
            <summary>设置 XamlWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.Constructor">
            <summary>设置 XamlWriter.XamlWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.DisposeBoolean">
            <summary>设置 XamlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.IsDisposedGet">
            <summary>设置 XamlWriter.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.IsDisposedSetBoolean">
            <summary>设置 XamlWriter.set_IsDisposed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.SystemIDisposableDispose">
            <summary>设置 XamlWriter.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriter.WriteNodeXamlReader">
            <summary>设置 XamlWriter.WriteNode(XamlReader reader) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlWriterSettings">
            <summary>System.Xaml.XamlWriterSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriterSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlWriterSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriterSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlWriterSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriterSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriterSettings.Constructor">
            <summary>设置 XamlWriterSettings.XamlWriterSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlWriterSettings.ConstructorXamlWriterSettings">
            <summary>设置 XamlWriterSettings.XamlWriterSettings(XamlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlReader">
            <summary>System.Xaml.XamlXmlReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.#ctor(System.Xaml.XamlXmlReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.HasLineInfoGet">
            <summary>设置 XamlXmlReader.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.IsEofGet">
            <summary>设置 XamlXmlReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.LineNumberGet">
            <summary>设置 XamlXmlReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.LinePositionGet">
            <summary>设置 XamlXmlReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.MemberGet">
            <summary>设置 XamlXmlReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.NamespaceGet">
            <summary>设置 XamlXmlReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.NodeTypeGet">
            <summary>设置 XamlXmlReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.Read">
            <summary>设置 XamlXmlReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.SchemaContextGet">
            <summary>设置 XamlXmlReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.TypeGet">
            <summary>设置 XamlXmlReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.AllInstances.ValueGet">
            <summary>设置 XamlXmlReader.get_Value() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.Bind(System.Xaml.IXamlLineInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStream">
            <summary>设置 XamlXmlReader.XamlXmlReader(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStreamXamlSchemaContext">
            <summary>设置 XamlXmlReader.XamlXmlReader(Stream stream, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStreamXamlSchemaContextXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(Stream stream, XamlSchemaContext schemaContext, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStreamXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(Stream stream, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorString">
            <summary>设置 XamlXmlReader.XamlXmlReader(String fileName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStringXamlSchemaContext">
            <summary>设置 XamlXmlReader.XamlXmlReader(String fileName, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStringXamlSchemaContextXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(String fileName, XamlSchemaContext schemaContext, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorStringXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(String fileName, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorTextReader">
            <summary>设置 XamlXmlReader.XamlXmlReader(TextReader textReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorTextReaderXamlSchemaContext">
            <summary>设置 XamlXmlReader.XamlXmlReader(TextReader textReader, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorTextReaderXamlSchemaContextXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(TextReader textReader, XamlSchemaContext schemaContext, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorTextReaderXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(TextReader textReader, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorXmlReader">
            <summary>设置 XamlXmlReader.XamlXmlReader(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorXmlReaderXamlSchemaContext">
            <summary>设置 XamlXmlReader.XamlXmlReader(XmlReader xmlReader, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorXmlReaderXamlSchemaContextXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(XmlReader xmlReader, XamlSchemaContext schemaContext, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ConstructorXmlReaderXamlXmlReaderSettings">
            <summary>设置 XamlXmlReader.XamlXmlReader(XmlReader xmlReader, XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.HasLineInfoGet">
            <summary>设置 XamlXmlReader.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.IsEofGet">
            <summary>设置 XamlXmlReader.get_IsEof() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.LineNumberGet">
            <summary>设置 XamlXmlReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.LinePositionGet">
            <summary>设置 XamlXmlReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.MemberGet">
            <summary>设置 XamlXmlReader.get_Member() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.NamespaceGet">
            <summary>设置 XamlXmlReader.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.NodeTypeGet">
            <summary>设置 XamlXmlReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.Read">
            <summary>设置 XamlXmlReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.SchemaContextGet">
            <summary>设置 XamlXmlReader.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.TypeGet">
            <summary>设置 XamlXmlReader.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReader.ValueGet">
            <summary>设置 XamlXmlReader.get_Value() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlReaderSettings">
            <summary>System.Xaml.XamlXmlReaderSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReaderSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.CloseInputGet">
            <summary>设置 XamlXmlReaderSettings.get_CloseInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.CloseInputSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_CloseInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.SkipXmlCompatibilityProcessingGet">
            <summary>设置 XamlXmlReaderSettings.get_SkipXmlCompatibilityProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.SkipXmlCompatibilityProcessingSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_SkipXmlCompatibilityProcessing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.XmlLangGet">
            <summary>设置 XamlXmlReaderSettings.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.XmlLangSetString">
            <summary>设置 XamlXmlReaderSettings.set_XmlLang(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.XmlSpacePreserveGet">
            <summary>设置 XamlXmlReaderSettings.get_XmlSpacePreserve() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.AllInstances.XmlSpacePreserveSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_XmlSpacePreserve(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReaderSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlReaderSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.CloseInputGet">
            <summary>设置 XamlXmlReaderSettings.get_CloseInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.CloseInputSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_CloseInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.Constructor">
            <summary>设置 XamlXmlReaderSettings.XamlXmlReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.ConstructorXamlXmlReaderSettings">
            <summary>设置 XamlXmlReaderSettings.XamlXmlReaderSettings(XamlXmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.SkipXmlCompatibilityProcessingGet">
            <summary>设置 XamlXmlReaderSettings.get_SkipXmlCompatibilityProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.SkipXmlCompatibilityProcessingSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_SkipXmlCompatibilityProcessing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.XmlLangGet">
            <summary>设置 XamlXmlReaderSettings.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.XmlLangSetString">
            <summary>设置 XamlXmlReaderSettings.set_XmlLang(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.XmlSpacePreserveGet">
            <summary>设置 XamlXmlReaderSettings.get_XmlSpacePreserve() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlReaderSettings.XmlSpacePreserveSetBoolean">
            <summary>设置 XamlXmlReaderSettings.set_XmlSpacePreserve(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriter">
            <summary>System.Xaml.XamlXmlWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriter.#ctor(System.Xaml.XamlXmlWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.DisposeBoolean">
            <summary>设置 XamlXmlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.Flush">
            <summary>设置 XamlXmlWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.SchemaContextGet">
            <summary>设置 XamlXmlWriter.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.SettingsGet">
            <summary>设置 XamlXmlWriter.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteEndMember">
            <summary>设置 XamlXmlWriter.WriteEndMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteEndObject">
            <summary>设置 XamlXmlWriter.WriteEndObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteGetObject">
            <summary>设置 XamlXmlWriter.WriteGetObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlXmlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteStartMemberXamlMember">
            <summary>设置 XamlXmlWriter.WriteStartMember(XamlMember property) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteStartObjectXamlType">
            <summary>设置 XamlXmlWriter.WriteStartObject(XamlType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.AllInstances.WriteValueObject">
            <summary>设置 XamlXmlWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorStreamXamlSchemaContext">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(Stream stream, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorStreamXamlSchemaContextXamlXmlWriterSettings">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(Stream stream, XamlSchemaContext schemaContext, XamlXmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorTextWriterXamlSchemaContext">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(TextWriter textWriter, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorTextWriterXamlSchemaContextXamlXmlWriterSettings">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(TextWriter textWriter, XamlSchemaContext schemaContext, XamlXmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorXmlWriterXamlSchemaContext">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(XmlWriter xmlWriter, XamlSchemaContext schemaContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.ConstructorXmlWriterXamlSchemaContextXamlXmlWriterSettings">
            <summary>设置 XamlXmlWriter.XamlXmlWriter(XmlWriter xmlWriter, XamlSchemaContext schemaContext, XamlXmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.DisposeBoolean">
            <summary>设置 XamlXmlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.Flush">
            <summary>设置 XamlXmlWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.SchemaContextGet">
            <summary>设置 XamlXmlWriter.get_SchemaContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.SettingsGet">
            <summary>设置 XamlXmlWriter.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteEndMember">
            <summary>设置 XamlXmlWriter.WriteEndMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteEndObject">
            <summary>设置 XamlXmlWriter.WriteEndObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteGetObject">
            <summary>设置 XamlXmlWriter.WriteGetObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlXmlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteStartMemberXamlMember">
            <summary>设置 XamlXmlWriter.WriteStartMember(XamlMember property) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteStartObjectXamlType">
            <summary>设置 XamlXmlWriter.WriteStartObject(XamlType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriter.WriteValueObject">
            <summary>设置 XamlXmlWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriterException">
            <summary>System.Xaml.XamlXmlWriterException 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterException.#ctor(System.Xaml.XamlXmlWriterException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriterException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterException.Constructor">
            <summary>设置 XamlXmlWriterException.XamlXmlWriterException() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XamlXmlWriterException.XamlXmlWriterException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterException.ConstructorString">
            <summary>设置 XamlXmlWriterException.XamlXmlWriterException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterException.ConstructorStringException">
            <summary>设置 XamlXmlWriterException.XamlXmlWriterException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriterSettings">
            <summary>System.Xaml.XamlXmlWriterSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterSettings.#ctor(System.Xaml.XamlXmlWriterSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances.AssumeValidInputGet">
            <summary>设置 XamlXmlWriterSettings.get_AssumeValidInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances.AssumeValidInputSetBoolean">
            <summary>设置 XamlXmlWriterSettings.set_AssumeValidInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances.CloseOutputGet">
            <summary>设置 XamlXmlWriterSettings.get_CloseOutput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances.CloseOutputSetBoolean">
            <summary>设置 XamlXmlWriterSettings.set_CloseOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AllInstances.Copy">
            <summary>设置 XamlXmlWriterSettings.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AssumeValidInputGet">
            <summary>设置 XamlXmlWriterSettings.get_AssumeValidInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.AssumeValidInputSetBoolean">
            <summary>设置 XamlXmlWriterSettings.set_AssumeValidInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.ShimXamlXmlWriterSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.CloseOutputGet">
            <summary>设置 XamlXmlWriterSettings.get_CloseOutput() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.CloseOutputSetBoolean">
            <summary>设置 XamlXmlWriterSettings.set_CloseOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.Constructor">
            <summary>设置 XamlXmlWriterSettings.XamlXmlWriterSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Fakes.ShimXamlXmlWriterSettings.Copy">
            <summary>设置 XamlXmlWriterSettings.Copy() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubAmbientPropertyValue">
            <summary>System.Xaml.AmbientPropertyValue 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAmbientPropertyValue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAmbientPropertyValue.InitializeStub">
            <summary>初始化 type StubAmbientPropertyValue 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAmbientPropertyValue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAmbientPropertyValue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubAttachableMemberIdentifier">
            <summary>System.Xaml.AttachableMemberIdentifier 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAttachableMemberIdentifier.#ctor(System.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAttachableMemberIdentifier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAttachableMemberIdentifier.Equals(System.Object)">
            <summary>设置 AttachableMemberIdentifier.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubAttachableMemberIdentifier.EqualsObject">
            <summary>设置 AttachableMemberIdentifier.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAttachableMemberIdentifier.GetHashCode">
            <summary>设置 AttachableMemberIdentifier.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubAttachableMemberIdentifier.GetHashCode01">
            <summary>设置 AttachableMemberIdentifier.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAttachableMemberIdentifier.InitializeStub">
            <summary>初始化 type StubAttachableMemberIdentifier 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAttachableMemberIdentifier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubAttachableMemberIdentifier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubAttachableMemberIdentifier.ToString">
            <summary>设置 AttachableMemberIdentifier.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubAttachableMemberIdentifier.ToString01">
            <summary>设置 AttachableMemberIdentifier.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIAmbientProvider">
            <summary>System.Xaml.IAmbientProvider 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.#ctor">
            <summary>初始化 type StubIAmbientProvider 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAmbientProvider.GetAllAmbientValuesIEnumerableOfXamlTypeBooleanIEnumerableOfXamlTypeXamlMemberArray">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(IEnumerable`1&lt;XamlType&gt; ceilingTypes, Boolean searchLiveStackOnly, IEnumerable`1&lt;XamlType&gt; types, XamlMember[] properties) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAmbientProvider.GetAllAmbientValuesIEnumerableOfXamlTypeXamlMemberArray">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(IEnumerable`1&lt;XamlType&gt; ceilingTypes, XamlMember[] properties) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAmbientProvider.GetAllAmbientValuesXamlTypeArray">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(XamlType[] types) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAmbientProvider.GetFirstAmbientValueIEnumerableOfXamlTypeXamlMemberArray">
            <summary>设置 IAmbientProvider.GetFirstAmbientValue(IEnumerable`1&lt;XamlType&gt; ceilingTypes, XamlMember[] properties) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAmbientProvider.GetFirstAmbientValueXamlTypeArray">
            <summary>设置 IAmbientProvider.GetFirstAmbientValue(XamlType[] types) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.System#Xaml#IAmbientProvider#GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(IEnumerable`1&lt;XamlType&gt; ceilingTypes, XamlMember[] properties) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.System#Xaml#IAmbientProvider#GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(IEnumerable`1&lt;XamlType&gt; ceilingTypes, Boolean searchLiveStackOnly, IEnumerable`1&lt;XamlType&gt; types, XamlMember[] properties) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.System#Xaml#IAmbientProvider#GetAllAmbientValues(System.Xaml.XamlType[])">
            <summary>设置 IAmbientProvider.GetAllAmbientValues(XamlType[] types) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.System#Xaml#IAmbientProvider#GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
            <summary>设置 IAmbientProvider.GetFirstAmbientValue(IEnumerable`1&lt;XamlType&gt; ceilingTypes, XamlMember[] properties) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAmbientProvider.System#Xaml#IAmbientProvider#GetFirstAmbientValue(System.Xaml.XamlType[])">
            <summary>设置 IAmbientProvider.GetFirstAmbientValue(XamlType[] types) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIAttachedPropertyStore">
            <summary>System.Xaml.IAttachedPropertyStore 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAttachedPropertyStore.#ctor">
            <summary>初始化 type StubIAttachedPropertyStore 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAttachedPropertyStore.CopyPropertiesToKeyValuePairOfAttachableMemberIdentifierObjectArrayInt32">
            <summary>设置 IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair`2&lt;AttachableMemberIdentifier,Object&gt;[] array, Int32 index) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIAttachedPropertyStore.System#Xaml#IAttachedPropertyStore#PropertyCount">
            <summary>设置 IAttachedPropertyStore.get_PropertyCount() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAttachedPropertyStore.PropertyCountGet">
            <summary>设置 IAttachedPropertyStore.get_PropertyCount() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAttachedPropertyStore.RemovePropertyAttachableMemberIdentifier">
            <summary>设置 IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier attachableMemberIdentifier) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAttachedPropertyStore.SetPropertyAttachableMemberIdentifierObject">
            <summary>设置 IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier attachableMemberIdentifier, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAttachedPropertyStore.System#Xaml#IAttachedPropertyStore#CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
            <summary>设置 IAttachedPropertyStore.CopyPropertiesTo(KeyValuePair`2&lt;AttachableMemberIdentifier,Object&gt;[] array, Int32 index) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAttachedPropertyStore.System#Xaml#IAttachedPropertyStore#RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
            <summary>设置 IAttachedPropertyStore.RemoveProperty(AttachableMemberIdentifier attachableMemberIdentifier) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAttachedPropertyStore.System#Xaml#IAttachedPropertyStore#SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
            <summary>设置 IAttachedPropertyStore.SetProperty(AttachableMemberIdentifier attachableMemberIdentifier, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIAttachedPropertyStore.System#Xaml#IAttachedPropertyStore#TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
            <summary>设置 IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier attachableMemberIdentifier, Object&amp; value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIAttachedPropertyStore.TryGetPropertyAttachableMemberIdentifierObjectOut">
            <summary>设置 IAttachedPropertyStore.TryGetProperty(AttachableMemberIdentifier attachableMemberIdentifier, Object&amp; value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIDestinationTypeProvider">
            <summary>System.Xaml.IDestinationTypeProvider 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIDestinationTypeProvider.#ctor">
            <summary>初始化 type StubIDestinationTypeProvider 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIDestinationTypeProvider.GetDestinationType">
            <summary>设置 IDestinationTypeProvider.GetDestinationType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIDestinationTypeProvider.System#Xaml#IDestinationTypeProvider#GetDestinationType">
            <summary>设置 IDestinationTypeProvider.GetDestinationType() 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubINamespacePrefixLookup">
            <summary>System.Xaml.INamespacePrefixLookup 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubINamespacePrefixLookup.#ctor">
            <summary>初始化 type StubINamespacePrefixLookup 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubINamespacePrefixLookup.LookupPrefixString">
            <summary>设置 INamespacePrefixLookup.LookupPrefix(String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubINamespacePrefixLookup.System#Xaml#INamespacePrefixLookup#LookupPrefix(System.String)">
            <summary>设置 INamespacePrefixLookup.LookupPrefix(String ns) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIRootObjectProvider">
            <summary>System.Xaml.IRootObjectProvider 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIRootObjectProvider.#ctor">
            <summary>初始化 type StubIRootObjectProvider 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIRootObjectProvider.System#Xaml#IRootObjectProvider#RootObject">
            <summary>设置 IRootObjectProvider.get_RootObject() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIRootObjectProvider.RootObjectGet">
            <summary>设置 IRootObjectProvider.get_RootObject() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlIndexingReader">
            <summary>System.Xaml.IXamlIndexingReader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlIndexingReader.#ctor">
            <summary>初始化 type StubIXamlIndexingReader 的新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlIndexingReader.AttachBackingFieldToCurrentIndex">
            <summary>附加委托以将 StubIXamlIndexingReader.CurrentIndex 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlIndexingReader.System#Xaml#IXamlIndexingReader#Count">
            <summary>设置 IXamlIndexingReader.get_Count() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlIndexingReader.CountGet">
            <summary>设置 IXamlIndexingReader.get_Count() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlIndexingReader.System#Xaml#IXamlIndexingReader#CurrentIndex">
            <summary>设置 IXamlIndexingReader.get_CurrentIndex() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlIndexingReader.CurrentIndexGet">
            <summary>设置 IXamlIndexingReader.get_CurrentIndex() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlIndexingReader.CurrentIndexSetInt32">
            <summary>设置 IXamlIndexingReader.set_CurrentIndex(Int32 value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlLineInfo">
            <summary>System.Xaml.IXamlLineInfo 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlLineInfo.#ctor">
            <summary>初始化 type StubIXamlLineInfo 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlLineInfo.System#Xaml#IXamlLineInfo#HasLineInfo">
            <summary>设置 IXamlLineInfo.get_HasLineInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlLineInfo.HasLineInfoGet">
            <summary>设置 IXamlLineInfo.get_HasLineInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlLineInfo.System#Xaml#IXamlLineInfo#LineNumber">
            <summary>设置 IXamlLineInfo.get_LineNumber() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlLineInfo.LineNumberGet">
            <summary>设置 IXamlLineInfo.get_LineNumber() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlLineInfo.System#Xaml#IXamlLineInfo#LinePosition">
            <summary>设置 IXamlLineInfo.get_LinePosition() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlLineInfo.LinePositionGet">
            <summary>设置 IXamlLineInfo.get_LinePosition() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlLineInfoConsumer">
            <summary>System.Xaml.IXamlLineInfoConsumer 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlLineInfoConsumer.#ctor">
            <summary>初始化 type StubIXamlLineInfoConsumer 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlLineInfoConsumer.SetLineInfoInt32Int32">
            <summary>设置 IXamlLineInfoConsumer.SetLineInfo(Int32 lineNumber, Int32 linePosition) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlLineInfoConsumer.System#Xaml#IXamlLineInfoConsumer#ShouldProvideLineInfo">
            <summary>设置 IXamlLineInfoConsumer.get_ShouldProvideLineInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlLineInfoConsumer.ShouldProvideLineInfoGet">
            <summary>设置 IXamlLineInfoConsumer.get_ShouldProvideLineInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlLineInfoConsumer.System#Xaml#IXamlLineInfoConsumer#SetLineInfo(System.Int32,System.Int32)">
            <summary>设置 IXamlLineInfoConsumer.SetLineInfo(Int32 lineNumber, Int32 linePosition) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlNameProvider">
            <summary>System.Xaml.IXamlNameProvider 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameProvider.#ctor">
            <summary>初始化 type StubIXamlNameProvider 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameProvider.GetNameObject">
            <summary>设置 IXamlNameProvider.GetName(Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameProvider.System#Xaml#IXamlNameProvider#GetName(System.Object)">
            <summary>设置 IXamlNameProvider.GetName(Object value) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlNameResolver">
            <summary>System.Xaml.IXamlNameResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.#ctor">
            <summary>初始化 type StubIXamlNameResolver 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.GetAllNamesAndValuesInScope">
            <summary>设置 IXamlNameResolver.GetAllNamesAndValuesInScope() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.GetFixupTokenIEnumerableOfString">
            <summary>设置 IXamlNameResolver.GetFixupToken(IEnumerable`1&lt;String&gt; names) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.GetFixupTokenIEnumerableOfStringBoolean">
            <summary>设置 IXamlNameResolver.GetFixupToken(IEnumerable`1&lt;String&gt; names, Boolean canAssignDirectly) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#IsFixupTokenAvailable">
            <summary>设置 IXamlNameResolver.get_IsFixupTokenAvailable() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.IsFixupTokenAvailableGet">
            <summary>设置 IXamlNameResolver.get_IsFixupTokenAvailable() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.ResolveString">
            <summary>设置 IXamlNameResolver.Resolve(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNameResolver.ResolveStringBooleanOut">
            <summary>设置 IXamlNameResolver.Resolve(String name, Boolean&amp; isFullyInitialized) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#GetAllNamesAndValuesInScope">
            <summary>设置 IXamlNameResolver.GetAllNamesAndValuesInScope() 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
            <summary>设置 IXamlNameResolver.GetFixupToken(IEnumerable`1&lt;String&gt; names) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>设置 IXamlNameResolver.GetFixupToken(IEnumerable`1&lt;String&gt; names, Boolean canAssignDirectly) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#Resolve(System.String)">
            <summary>设置 IXamlNameResolver.Resolve(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNameResolver.System#Xaml#IXamlNameResolver#Resolve(System.String,System.Boolean@)">
            <summary>设置 IXamlNameResolver.Resolve(String name, Boolean&amp; isFullyInitialized) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlNamespaceResolver">
            <summary>System.Xaml.IXamlNamespaceResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNamespaceResolver.#ctor">
            <summary>初始化 type StubIXamlNamespaceResolver 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNamespaceResolver.GetNamespacePrefixes">
            <summary>设置 IXamlNamespaceResolver.GetNamespacePrefixes() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlNamespaceResolver.GetNamespaceString">
            <summary>设置 IXamlNamespaceResolver.GetNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNamespaceResolver.System#Xaml#IXamlNamespaceResolver#GetNamespace(System.String)">
            <summary>设置 IXamlNamespaceResolver.GetNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlNamespaceResolver.System#Xaml#IXamlNamespaceResolver#GetNamespacePrefixes">
            <summary>设置 IXamlNamespaceResolver.GetNamespacePrefixes() 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlObjectWriterFactory">
            <summary>System.Xaml.IXamlObjectWriterFactory 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlObjectWriterFactory.#ctor">
            <summary>初始化 type StubIXamlObjectWriterFactory 的新实例</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlObjectWriterFactory.GetParentSettings">
            <summary>设置 IXamlObjectWriterFactory.GetParentSettings() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlObjectWriterFactory.GetXamlObjectWriterXamlObjectWriterSettings">
            <summary>设置 IXamlObjectWriterFactory.GetXamlObjectWriter(XamlObjectWriterSettings settings) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlObjectWriterFactory.System#Xaml#IXamlObjectWriterFactory#GetParentSettings">
            <summary>设置 IXamlObjectWriterFactory.GetParentSettings() 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlObjectWriterFactory.System#Xaml#IXamlObjectWriterFactory#GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
            <summary>设置 IXamlObjectWriterFactory.GetXamlObjectWriter(XamlObjectWriterSettings settings) 的 存根</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubIXamlSchemaContextProvider">
            <summary>System.Xaml.IXamlSchemaContextProvider 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubIXamlSchemaContextProvider.#ctor">
            <summary>初始化 type StubIXamlSchemaContextProvider 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubIXamlSchemaContextProvider.System#Xaml#IXamlSchemaContextProvider#SchemaContext">
            <summary>设置 IXamlSchemaContextProvider.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubIXamlSchemaContextProvider.SchemaContextGet">
            <summary>设置 IXamlSchemaContextProvider.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubNamespaceDeclaration">
            <summary>System.Xaml.NamespaceDeclaration 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubNamespaceDeclaration.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubNamespaceDeclaration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubNamespaceDeclaration.InitializeStub">
            <summary>初始化 type StubNamespaceDeclaration 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubNamespaceDeclaration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubNamespaceDeclaration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlBackgroundReader">
            <summary>System.Xaml.XamlBackgroundReader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.Dispose(System.Boolean)">
            <summary>设置 XamlBackgroundReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.DisposeBoolean">
            <summary>设置 XamlBackgroundReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.InitializeStub">
            <summary>初始化 type StubXamlBackgroundReader 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.IsEof">
            <summary>设置 XamlBackgroundReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.IsEofGet">
            <summary>设置 XamlBackgroundReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.Member">
            <summary>设置 XamlBackgroundReader.get_Member() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.MemberGet">
            <summary>设置 XamlBackgroundReader.get_Member() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.Namespace">
            <summary>设置 XamlBackgroundReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.NamespaceGet">
            <summary>设置 XamlBackgroundReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.NodeType">
            <summary>设置 XamlBackgroundReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.NodeTypeGet">
            <summary>设置 XamlBackgroundReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.Read">
            <summary>设置 XamlBackgroundReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.Read01">
            <summary>设置 XamlBackgroundReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.ReadSubtree01">
            <summary>设置 XamlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.SchemaContext">
            <summary>设置 XamlBackgroundReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.SchemaContextGet">
            <summary>设置 XamlBackgroundReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlBackgroundReader.Skip">
            <summary>设置 XamlReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.Skip01">
            <summary>设置 XamlReader.Skip() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.Type">
            <summary>设置 XamlBackgroundReader.get_Type() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.TypeGet">
            <summary>设置 XamlBackgroundReader.get_Type() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlBackgroundReader.Value">
            <summary>设置 XamlBackgroundReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlBackgroundReader.ValueGet">
            <summary>设置 XamlBackgroundReader.get_Value() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlDeferringLoader">
            <summary>System.Xaml.XamlDeferringLoader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDeferringLoader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDeferringLoader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDeferringLoader.InitializeStub">
            <summary>初始化 type StubXamlDeferringLoader 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDeferringLoader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDeferringLoader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
            <summary>设置 XamlDeferringLoader.Load(XamlReader xamlReader, IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDeferringLoader.LoadXamlReaderIServiceProvider">
            <summary>设置 XamlDeferringLoader.Load(XamlReader xamlReader, IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
            <summary>设置 XamlDeferringLoader.Save(Object value, IServiceProvider serviceProvider) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDeferringLoader.SaveObjectIServiceProvider">
            <summary>设置 XamlDeferringLoader.Save(Object value, IServiceProvider serviceProvider) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlDirective">
            <summary>System.Xaml.XamlDirective 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDirective.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.Equals(System.Object)">
            <summary>设置 XamlMember.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDirective.EqualsObject">
            <summary>设置 XamlMember.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.GetHashCode">
            <summary>设置 XamlDirective.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDirective.GetHashCode01">
            <summary>设置 XamlDirective.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.GetXamlNamespaces">
            <summary>设置 XamlDirective.GetXamlNamespaces() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDirective.GetXamlNamespaces01">
            <summary>设置 XamlDirective.GetXamlNamespaces() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.InitializeStub">
            <summary>初始化 type StubXamlDirective 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDirective.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDirective.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.LookupValueSerializer">
            <summary>设置 XamlMember.LookupValueSerializer() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDirective.LookupValueSerializer01">
            <summary>设置 XamlMember.LookupValueSerializer() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDirective.ToString">
            <summary>设置 XamlDirective.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDirective.ToString01">
            <summary>设置 XamlDirective.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlDuplicateMemberException">
            <summary>System.Xaml.XamlDuplicateMemberException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlDuplicateMemberException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlDuplicateMemberException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlDuplicateMemberException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlDuplicateMemberException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.InitializeStub">
            <summary>初始化 type StubXamlDuplicateMemberException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlDuplicateMemberException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlDuplicateMemberException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlDuplicateMemberException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlException">
            <summary>System.Xaml.XamlException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.InitializeStub">
            <summary>初始化 type StubXamlException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlInternalException">
            <summary>System.Xaml.XamlInternalException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlInternalException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlInternalException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.InitializeStub">
            <summary>初始化 type StubXamlInternalException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlInternalException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlInternalException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlInternalException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlMember">
            <summary>System.Xaml.XamlMember 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlMember.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.Equals(System.Object)">
            <summary>设置 XamlMember.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.EqualsObject">
            <summary>设置 XamlMember.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.GetHashCode">
            <summary>设置 XamlMember.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.GetHashCode01">
            <summary>设置 XamlMember.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.GetXamlNamespaces">
            <summary>设置 XamlMember.GetXamlNamespaces() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.GetXamlNamespaces01">
            <summary>设置 XamlMember.GetXamlNamespaces() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.InitializeStub">
            <summary>初始化 type StubXamlMember 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlMember.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlMember.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupCustomAttributeProvider">
            <summary>设置 XamlMember.LookupCustomAttributeProvider() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupCustomAttributeProvider01">
            <summary>设置 XamlMember.LookupCustomAttributeProvider() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupDeferringLoader">
            <summary>设置 XamlMember.LookupDeferringLoader() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupDeferringLoader01">
            <summary>设置 XamlMember.LookupDeferringLoader() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupDependsOn">
            <summary>设置 XamlMember.LookupDependsOn() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupDependsOn01">
            <summary>设置 XamlMember.LookupDependsOn() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupInvoker">
            <summary>设置 XamlMember.LookupInvoker() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupInvoker01">
            <summary>设置 XamlMember.LookupInvoker() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsAmbient">
            <summary>设置 XamlMember.LookupIsAmbient() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsAmbient01">
            <summary>设置 XamlMember.LookupIsAmbient() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsEvent">
            <summary>设置 XamlMember.LookupIsEvent() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsEvent01">
            <summary>设置 XamlMember.LookupIsEvent() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsReadOnly">
            <summary>设置 XamlMember.LookupIsReadOnly() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsReadOnly01">
            <summary>设置 XamlMember.LookupIsReadOnly() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsReadPublic">
            <summary>设置 XamlMember.LookupIsReadPublic() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsReadPublic01">
            <summary>设置 XamlMember.LookupIsReadPublic() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsUnknown">
            <summary>设置 XamlMember.LookupIsUnknown() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsUnknown01">
            <summary>设置 XamlMember.LookupIsUnknown() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsWriteOnly">
            <summary>设置 XamlMember.LookupIsWriteOnly() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsWriteOnly01">
            <summary>设置 XamlMember.LookupIsWriteOnly() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupIsWritePublic">
            <summary>设置 XamlMember.LookupIsWritePublic() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupIsWritePublic01">
            <summary>设置 XamlMember.LookupIsWritePublic() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupTargetType">
            <summary>设置 XamlMember.LookupTargetType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupTargetType01">
            <summary>设置 XamlMember.LookupTargetType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupType">
            <summary>设置 XamlMember.LookupType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupType01">
            <summary>设置 XamlMember.LookupType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupTypeConverter">
            <summary>设置 XamlMember.LookupTypeConverter() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupTypeConverter01">
            <summary>设置 XamlMember.LookupTypeConverter() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingGetter">
            <summary>设置 XamlMember.LookupUnderlyingGetter() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingGetter01">
            <summary>设置 XamlMember.LookupUnderlyingGetter() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingMember">
            <summary>设置 XamlMember.LookupUnderlyingMember() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingMember01">
            <summary>设置 XamlMember.LookupUnderlyingMember() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingSetter">
            <summary>设置 XamlMember.LookupUnderlyingSetter() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupUnderlyingSetter01">
            <summary>设置 XamlMember.LookupUnderlyingSetter() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.LookupValueSerializer">
            <summary>设置 XamlMember.LookupValueSerializer() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.LookupValueSerializer01">
            <summary>设置 XamlMember.LookupValueSerializer() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlMember.ToString">
            <summary>设置 XamlMember.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlMember.ToString01">
            <summary>设置 XamlMember.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlNodeList">
            <summary>System.Xaml.XamlNodeList 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlNodeList.InitializeStub">
            <summary>初始化 type StubXamlNodeList 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlNodeQueue">
            <summary>System.Xaml.XamlNodeQueue 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeQueue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlNodeQueue.InitializeStub">
            <summary>初始化 type StubXamlNodeQueue 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeQueue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlNodeQueue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectEventArgs">
            <summary>System.Xaml.XamlObjectEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectEventArgs.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectEventArgs.InitializeStub">
            <summary>初始化 type StubXamlObjectEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectReader">
            <summary>System.Xaml.XamlObjectReader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.Dispose(System.Boolean)">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.DisposeBoolean">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.InitializeStub">
            <summary>初始化 type StubXamlObjectReader 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.Instance">
            <summary>设置 XamlObjectReader.get_Instance() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.InstanceGet">
            <summary>设置 XamlObjectReader.get_Instance() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.IsEof">
            <summary>设置 XamlObjectReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.IsEofGet">
            <summary>设置 XamlObjectReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.Member">
            <summary>设置 XamlObjectReader.get_Member() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.MemberGet">
            <summary>设置 XamlObjectReader.get_Member() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.Namespace">
            <summary>设置 XamlObjectReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.NamespaceGet">
            <summary>设置 XamlObjectReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.NodeType">
            <summary>设置 XamlObjectReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.NodeTypeGet">
            <summary>设置 XamlObjectReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.Read">
            <summary>设置 XamlObjectReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.Read01">
            <summary>设置 XamlObjectReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.ReadSubtree01">
            <summary>设置 XamlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.SchemaContext">
            <summary>设置 XamlObjectReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.SchemaContextGet">
            <summary>设置 XamlObjectReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReader.Skip">
            <summary>设置 XamlReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.Skip01">
            <summary>设置 XamlReader.Skip() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.Type">
            <summary>设置 XamlObjectReader.get_Type() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.TypeGet">
            <summary>设置 XamlObjectReader.get_Type() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReader.Value">
            <summary>设置 XamlObjectReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReader.ValueGet">
            <summary>设置 XamlObjectReader.get_Value() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectReaderException">
            <summary>System.Xaml.XamlObjectReaderException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlObjectReaderException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlObjectReaderException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.InitializeStub">
            <summary>初始化 type StubXamlObjectReaderException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectReaderException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectReaderSettings">
            <summary>System.Xaml.XamlObjectReaderSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectReaderSettings.InitializeStub">
            <summary>初始化 type StubXamlObjectReaderSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectReaderSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectWriter">
            <summary>System.Xaml.XamlObjectWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.Dispose(System.Boolean)">
            <summary>设置 XamlObjectWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.DisposeBoolean">
            <summary>设置 XamlObjectWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.InitializeStub">
            <summary>初始化 type StubXamlObjectWriter 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterBeginInit(System.Object)">
            <summary>设置 XamlObjectWriter.OnAfterBeginInit(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterBeginInitObject">
            <summary>设置 XamlObjectWriter.OnAfterBeginInit(Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterEndInit(System.Object)">
            <summary>设置 XamlObjectWriter.OnAfterEndInit(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterEndInitObject">
            <summary>设置 XamlObjectWriter.OnAfterEndInit(Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterProperties(System.Object)">
            <summary>设置 XamlObjectWriter.OnAfterProperties(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.OnAfterPropertiesObject">
            <summary>设置 XamlObjectWriter.OnAfterProperties(Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.OnBeforeProperties(System.Object)">
            <summary>设置 XamlObjectWriter.OnBeforeProperties(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.OnBeforePropertiesObject">
            <summary>设置 XamlObjectWriter.OnBeforeProperties(Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
            <summary>设置 XamlObjectWriter.OnSetValue(Object eventSender, XamlMember member, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.OnSetValueObjectXamlMemberObject">
            <summary>设置 XamlObjectWriter.OnSetValue(Object eventSender, XamlMember member, Object value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriter.Result">
            <summary>设置 XamlObjectWriter.get_Result() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.ResultGet">
            <summary>设置 XamlObjectWriter.get_Result() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriter.SchemaContext">
            <summary>设置 XamlObjectWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.SchemaContextGet">
            <summary>设置 XamlObjectWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteEndMember">
            <summary>设置 XamlObjectWriter.WriteEndMember() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteEndMember01">
            <summary>设置 XamlObjectWriter.WriteEndMember() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteEndObject">
            <summary>设置 XamlObjectWriter.WriteEndObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteEndObject01">
            <summary>设置 XamlObjectWriter.WriteEndObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteGetObject">
            <summary>设置 XamlObjectWriter.WriteGetObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteGetObject01">
            <summary>设置 XamlObjectWriter.WriteGetObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
            <summary>设置 XamlObjectWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlObjectWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
            <summary>设置 XamlObjectWriter.WriteStartMember(XamlMember property) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteStartMemberXamlMember">
            <summary>设置 XamlObjectWriter.WriteStartMember(XamlMember property) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
            <summary>设置 XamlObjectWriter.WriteStartObject(XamlType xamlType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteStartObjectXamlType">
            <summary>设置 XamlObjectWriter.WriteStartObject(XamlType xamlType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriter.WriteValue(System.Object)">
            <summary>设置 XamlObjectWriter.WriteValue(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriter.WriteValueObject">
            <summary>设置 XamlObjectWriter.WriteValue(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectWriterException">
            <summary>System.Xaml.XamlObjectWriterException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlObjectWriterException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlObjectWriterException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.InitializeStub">
            <summary>初始化 type StubXamlObjectWriterException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlObjectWriterException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlObjectWriterSettings">
            <summary>System.Xaml.XamlObjectWriterSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlObjectWriterSettings.InitializeStub">
            <summary>初始化 type StubXamlObjectWriterSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlObjectWriterSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlParseException">
            <summary>System.Xaml.XamlParseException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlParseException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlParseException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.InitializeStub">
            <summary>初始化 type StubXamlParseException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlParseException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlParseException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlParseException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlReader">
            <summary>System.Xaml.XamlReader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.Dispose(System.Boolean)">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.DisposeBoolean">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.InitializeStub">
            <summary>初始化 type StubXamlReader 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.IsEof">
            <summary>设置 XamlReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.IsEofGet">
            <summary>设置 XamlReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.Member">
            <summary>设置 XamlReader.get_Member() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.MemberGet">
            <summary>设置 XamlReader.get_Member() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.Namespace">
            <summary>设置 XamlReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.NamespaceGet">
            <summary>设置 XamlReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.NodeType">
            <summary>设置 XamlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.NodeTypeGet">
            <summary>设置 XamlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.Read">
            <summary>设置 XamlReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.Read01">
            <summary>设置 XamlReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.ReadSubtree01">
            <summary>设置 XamlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.SchemaContext">
            <summary>设置 XamlReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.SchemaContextGet">
            <summary>设置 XamlReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReader.Skip">
            <summary>设置 XamlReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.Skip01">
            <summary>设置 XamlReader.Skip() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.Type">
            <summary>设置 XamlReader.get_Type() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.TypeGet">
            <summary>设置 XamlReader.get_Type() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReader.Value">
            <summary>设置 XamlReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlReader.ValueGet">
            <summary>设置 XamlReader.get_Value() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlReaderSettings">
            <summary>System.Xaml.XamlReaderSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReaderSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReaderSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlReaderSettings.InitializeStub">
            <summary>初始化 type StubXamlReaderSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReaderSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlReaderSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlSchemaContext">
            <summary>System.Xaml.XamlSchemaContext 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetAllXamlNamespaces">
            <summary>设置 XamlSchemaContext.GetAllXamlNamespaces() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetAllXamlNamespaces01">
            <summary>设置 XamlSchemaContext.GetAllXamlNamespaces() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetAllXamlTypes(System.String)">
            <summary>设置 XamlSchemaContext.GetAllXamlTypes(String xamlNamespace) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetAllXamlTypesString">
            <summary>设置 XamlSchemaContext.GetAllXamlTypes(String xamlNamespace) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetPreferredPrefix(System.String)">
            <summary>设置 XamlSchemaContext.GetPreferredPrefix(String xmlns) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetPreferredPrefixString">
            <summary>设置 XamlSchemaContext.GetPreferredPrefix(String xmlns) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlDirective(System.String,System.String)">
            <summary>设置 XamlSchemaContext.GetXamlDirective(String xamlNamespace, String name) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlDirectiveStringString">
            <summary>设置 XamlSchemaContext.GetXamlDirective(String xamlNamespace, String name) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlType(System.Type)">
            <summary>设置 XamlSchemaContext.GetXamlType(Type type) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
            <summary>设置 XamlSchemaContext.GetXamlType(String xamlNamespace, String name, XamlType[] typeArguments) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlTypeStringStringXamlTypeArray">
            <summary>设置 XamlSchemaContext.GetXamlType(String xamlNamespace, String name, XamlType[] typeArguments) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.GetXamlTypeType">
            <summary>设置 XamlSchemaContext.GetXamlType(Type type) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.InitializeStub">
            <summary>初始化 type StubXamlSchemaContext 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.OnAssemblyResolve(System.String)">
            <summary>设置 XamlSchemaContext.OnAssemblyResolve(String assemblyName) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.OnAssemblyResolveString">
            <summary>设置 XamlSchemaContext.OnAssemblyResolve(String assemblyName) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
            <summary>设置 XamlSchemaContext.TryGetCompatibleXamlNamespace(String xamlNamespace, String&amp; compatibleNamespace) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaContext.TryGetCompatibleXamlNamespaceStringStringOut">
            <summary>设置 XamlSchemaContext.TryGetCompatibleXamlNamespace(String xamlNamespace, String&amp; compatibleNamespace) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlSchemaContextSettings">
            <summary>System.Xaml.XamlSchemaContextSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContextSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContextSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaContextSettings.InitializeStub">
            <summary>初始化 type StubXamlSchemaContextSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContextSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaContextSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlSchemaException">
            <summary>System.Xaml.XamlSchemaException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlSchemaException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlSchemaException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.InitializeStub">
            <summary>初始化 type StubXamlSchemaException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlSchemaException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlSchemaException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlSchemaException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlType">
            <summary>System.Xaml.XamlType 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.CanAssignTo(System.Xaml.XamlType)">
            <summary>设置 XamlType.CanAssignTo(XamlType xamlType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.CanAssignToXamlType">
            <summary>设置 XamlType.CanAssignTo(XamlType xamlType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.Equals(System.Object)">
            <summary>设置 XamlType.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.EqualsObject">
            <summary>设置 XamlType.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.GetHashCode">
            <summary>设置 XamlType.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.GetHashCode01">
            <summary>设置 XamlType.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.GetXamlNamespaces">
            <summary>设置 XamlType.GetXamlNamespaces() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.GetXamlNamespaces01">
            <summary>设置 XamlType.GetXamlNamespaces() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.InitializeStub">
            <summary>初始化 type StubXamlType 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
            <summary>设置 XamlType.LookupAliasedProperty(XamlDirective directive) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupAliasedPropertyXamlDirective">
            <summary>设置 XamlType.LookupAliasedProperty(XamlDirective directive) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupAllAttachableMembers">
            <summary>设置 XamlType.LookupAllAttachableMembers() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupAllAttachableMembers01">
            <summary>设置 XamlType.LookupAllAttachableMembers() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupAllMembers">
            <summary>设置 XamlType.LookupAllMembers() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupAllMembers01">
            <summary>设置 XamlType.LookupAllMembers() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupAllowedContentTypes">
            <summary>设置 XamlType.LookupAllowedContentTypes() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupAllowedContentTypes01">
            <summary>设置 XamlType.LookupAllowedContentTypes() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupAttachableMember(System.String)">
            <summary>设置 XamlType.LookupAttachableMember(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupAttachableMemberString">
            <summary>设置 XamlType.LookupAttachableMember(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupBaseType">
            <summary>设置 XamlType.LookupBaseType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupBaseType01">
            <summary>设置 XamlType.LookupBaseType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupCollectionKind">
            <summary>设置 XamlType.LookupCollectionKind() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupCollectionKind01">
            <summary>设置 XamlType.LookupCollectionKind() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupConstructionRequiresArguments">
            <summary>设置 XamlType.LookupConstructionRequiresArguments() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupConstructionRequiresArguments01">
            <summary>设置 XamlType.LookupConstructionRequiresArguments() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupContentProperty">
            <summary>设置 XamlType.LookupContentProperty() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupContentProperty01">
            <summary>设置 XamlType.LookupContentProperty() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupContentWrappers">
            <summary>设置 XamlType.LookupContentWrappers() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupContentWrappers01">
            <summary>设置 XamlType.LookupContentWrappers() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupCustomAttributeProvider">
            <summary>设置 XamlType.LookupCustomAttributeProvider() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupCustomAttributeProvider01">
            <summary>设置 XamlType.LookupCustomAttributeProvider() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupDeferringLoader">
            <summary>设置 XamlType.LookupDeferringLoader() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupDeferringLoader01">
            <summary>设置 XamlType.LookupDeferringLoader() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupInvoker">
            <summary>设置 XamlType.LookupInvoker() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupInvoker01">
            <summary>设置 XamlType.LookupInvoker() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsAmbient">
            <summary>设置 XamlType.LookupIsAmbient() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsAmbient01">
            <summary>设置 XamlType.LookupIsAmbient() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsConstructible">
            <summary>设置 XamlType.LookupIsConstructible() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsConstructible01">
            <summary>设置 XamlType.LookupIsConstructible() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsMarkupExtension">
            <summary>设置 XamlType.LookupIsMarkupExtension() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsMarkupExtension01">
            <summary>设置 XamlType.LookupIsMarkupExtension() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsNameScope">
            <summary>设置 XamlType.LookupIsNameScope() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsNameScope01">
            <summary>设置 XamlType.LookupIsNameScope() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsNullable">
            <summary>设置 XamlType.LookupIsNullable() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsNullable01">
            <summary>设置 XamlType.LookupIsNullable() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsPublic">
            <summary>设置 XamlType.LookupIsPublic() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsPublic01">
            <summary>设置 XamlType.LookupIsPublic() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsUnknown">
            <summary>设置 XamlType.LookupIsUnknown() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsUnknown01">
            <summary>设置 XamlType.LookupIsUnknown() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsWhitespaceSignificantCollection">
            <summary>设置 XamlType.LookupIsWhitespaceSignificantCollection() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsWhitespaceSignificantCollection01">
            <summary>设置 XamlType.LookupIsWhitespaceSignificantCollection() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupIsXData">
            <summary>设置 XamlType.LookupIsXData() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupIsXData01">
            <summary>设置 XamlType.LookupIsXData() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupItemType">
            <summary>设置 XamlType.LookupItemType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupItemType01">
            <summary>设置 XamlType.LookupItemType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupKeyType">
            <summary>设置 XamlType.LookupKeyType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupKeyType01">
            <summary>设置 XamlType.LookupKeyType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupMarkupExtensionReturnType">
            <summary>设置 XamlType.LookupMarkupExtensionReturnType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupMarkupExtensionReturnType01">
            <summary>设置 XamlType.LookupMarkupExtensionReturnType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupMember(System.String,System.Boolean)">
            <summary>设置 XamlType.LookupMember(String name, Boolean skipReadOnlyCheck) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupMemberStringBoolean">
            <summary>设置 XamlType.LookupMember(String name, Boolean skipReadOnlyCheck) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupPositionalParameters(System.Int32)">
            <summary>设置 XamlType.LookupPositionalParameters(Int32 parameterCount) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupPositionalParametersInt32">
            <summary>设置 XamlType.LookupPositionalParameters(Int32 parameterCount) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupSetMarkupExtensionHandler">
            <summary>设置 XamlType.LookupSetMarkupExtensionHandler() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupSetMarkupExtensionHandler01">
            <summary>设置 XamlType.LookupSetMarkupExtensionHandler() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupSetTypeConverterHandler">
            <summary>设置 XamlType.LookupSetTypeConverterHandler() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupSetTypeConverterHandler01">
            <summary>设置 XamlType.LookupSetTypeConverterHandler() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupTrimSurroundingWhitespace">
            <summary>设置 XamlType.LookupTrimSurroundingWhitespace() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupTrimSurroundingWhitespace01">
            <summary>设置 XamlType.LookupTrimSurroundingWhitespace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupTypeConverter">
            <summary>设置 XamlType.LookupTypeConverter() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupTypeConverter01">
            <summary>设置 XamlType.LookupTypeConverter() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupUnderlyingType">
            <summary>设置 XamlType.LookupUnderlyingType() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupUnderlyingType01">
            <summary>设置 XamlType.LookupUnderlyingType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupUsableDuringInitialization">
            <summary>设置 XamlType.LookupUsableDuringInitialization() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupUsableDuringInitialization01">
            <summary>设置 XamlType.LookupUsableDuringInitialization() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.LookupValueSerializer">
            <summary>设置 XamlType.LookupValueSerializer() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.LookupValueSerializer01">
            <summary>设置 XamlType.LookupValueSerializer() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlType.ToString">
            <summary>设置 XamlType.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlType.ToString01">
            <summary>设置 XamlType.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlWriter">
            <summary>System.Xaml.XamlWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.Dispose(System.Boolean)">
            <summary>设置 XamlWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.DisposeBoolean">
            <summary>设置 XamlWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.InitializeStub">
            <summary>初始化 type StubXamlWriter 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriter.SchemaContext">
            <summary>设置 XamlWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.SchemaContextGet">
            <summary>设置 XamlWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteEndMember">
            <summary>设置 XamlWriter.WriteEndMember() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteEndMember01">
            <summary>设置 XamlWriter.WriteEndMember() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteEndObject">
            <summary>设置 XamlWriter.WriteEndObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteEndObject01">
            <summary>设置 XamlWriter.WriteEndObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteGetObject">
            <summary>设置 XamlWriter.WriteGetObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteGetObject01">
            <summary>设置 XamlWriter.WriteGetObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
            <summary>设置 XamlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteStartMember(System.Xaml.XamlMember)">
            <summary>设置 XamlWriter.WriteStartMember(XamlMember xamlMember) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteStartMemberXamlMember">
            <summary>设置 XamlWriter.WriteStartMember(XamlMember xamlMember) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteStartObject(System.Xaml.XamlType)">
            <summary>设置 XamlWriter.WriteStartObject(XamlType type) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteStartObjectXamlType">
            <summary>设置 XamlWriter.WriteStartObject(XamlType type) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriter.WriteValue(System.Object)">
            <summary>设置 XamlWriter.WriteValue(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlWriter.WriteValueObject">
            <summary>设置 XamlWriter.WriteValue(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlWriterSettings">
            <summary>System.Xaml.XamlWriterSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriterSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriterSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlWriterSettings.InitializeStub">
            <summary>初始化 type StubXamlWriterSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriterSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlWriterSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlXmlReader">
            <summary>System.Xaml.XamlXmlReader 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.Xml.XmlReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.Dispose(System.Boolean)">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.DisposeBoolean">
            <summary>设置 XamlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.InitializeStub">
            <summary>初始化 type StubXamlXmlReader 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.IsEof">
            <summary>设置 XamlXmlReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.IsEofGet">
            <summary>设置 XamlXmlReader.get_IsEof() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.Member">
            <summary>设置 XamlXmlReader.get_Member() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.MemberGet">
            <summary>设置 XamlXmlReader.get_Member() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.Namespace">
            <summary>设置 XamlXmlReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.NamespaceGet">
            <summary>设置 XamlXmlReader.get_Namespace() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.NodeType">
            <summary>设置 XamlXmlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.NodeTypeGet">
            <summary>设置 XamlXmlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.Read">
            <summary>设置 XamlXmlReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.Read01">
            <summary>设置 XamlXmlReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.ReadSubtree">
            <summary>设置 XamlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.ReadSubtree01">
            <summary>设置 XamlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.SchemaContext">
            <summary>设置 XamlXmlReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.SchemaContextGet">
            <summary>设置 XamlXmlReader.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReader.Skip">
            <summary>设置 XamlReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.Skip01">
            <summary>设置 XamlReader.Skip() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.Type">
            <summary>设置 XamlXmlReader.get_Type() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.TypeGet">
            <summary>设置 XamlXmlReader.get_Type() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReader.Value">
            <summary>设置 XamlXmlReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlReader.ValueGet">
            <summary>设置 XamlXmlReader.get_Value() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlXmlReaderSettings">
            <summary>System.Xaml.XamlXmlReaderSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReaderSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReaderSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlReaderSettings.InitializeStub">
            <summary>初始化 type StubXamlXmlReaderSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReaderSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlReaderSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlXmlWriter">
            <summary>System.Xaml.XamlXmlWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.Dispose(System.Boolean)">
            <summary>设置 XamlXmlWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.DisposeBoolean">
            <summary>设置 XamlXmlWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.InitializeStub">
            <summary>初始化 type StubXamlXmlWriter 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriter.SchemaContext">
            <summary>设置 XamlXmlWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.SchemaContextGet">
            <summary>设置 XamlXmlWriter.get_SchemaContext() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteEndMember">
            <summary>设置 XamlXmlWriter.WriteEndMember() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteEndMember01">
            <summary>设置 XamlXmlWriter.WriteEndMember() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteEndObject">
            <summary>设置 XamlXmlWriter.WriteEndObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteEndObject01">
            <summary>设置 XamlXmlWriter.WriteEndObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteGetObject">
            <summary>设置 XamlXmlWriter.WriteGetObject() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteGetObject01">
            <summary>设置 XamlXmlWriter.WriteGetObject() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
            <summary>设置 XamlXmlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteNamespaceNamespaceDeclaration">
            <summary>设置 XamlXmlWriter.WriteNamespace(NamespaceDeclaration namespaceDeclaration) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
            <summary>设置 XamlXmlWriter.WriteStartMember(XamlMember property) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteStartMemberXamlMember">
            <summary>设置 XamlXmlWriter.WriteStartMember(XamlMember property) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
            <summary>设置 XamlXmlWriter.WriteStartObject(XamlType type) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteStartObjectXamlType">
            <summary>设置 XamlXmlWriter.WriteStartObject(XamlType type) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriter.WriteValue(System.Object)">
            <summary>设置 XamlXmlWriter.WriteValue(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriter.WriteValueObject">
            <summary>设置 XamlXmlWriter.WriteValue(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlXmlWriterException">
            <summary>System.Xaml.XamlXmlWriterException 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXamlXmlWriterException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXamlXmlWriterException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XamlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.InitializeStub">
            <summary>初始化 type StubXamlXmlWriterException 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.Message">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.MessageGet">
            <summary>设置 XamlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Fakes.StubXamlXmlWriterException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Fakes.StubXamlXmlWriterSettings">
            <summary>System.Xaml.XamlXmlWriterSettings 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Fakes.StubXamlXmlWriterSettings.InitializeStub">
            <summary>初始化 type StubXamlXmlWriterSettings 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Fakes.StubXamlXmlWriterSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel">
            <summary>System.Xaml.Permissions.XamlAccessLevel 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AllInstances.AssemblyAccessToAssemblyNameGet">
            <summary>设置 XamlAccessLevel.get_AssemblyAccessToAssemblyName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AllInstances.Constructor">
            <summary>设置 XamlAccessLevel.XamlAccessLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AllInstances.PrivateAccessToTypeNameGet">
            <summary>设置 XamlAccessLevel.get_PrivateAccessToTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AllInstances.PrivateAccessToTypeNameSetString">
            <summary>设置 XamlAccessLevel.set_PrivateAccessToTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AssemblyAccessToAssembly">
            <summary>设置 XamlAccessLevel.AssemblyAccessTo(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AssemblyAccessToAssemblyName">
            <summary>设置 XamlAccessLevel.AssemblyAccessTo(AssemblyName assemblyName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.AssemblyAccessToAssemblyNameGet">
            <summary>设置 XamlAccessLevel.get_AssemblyAccessToAssemblyName() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.Constructor">
            <summary>设置 XamlAccessLevel.XamlAccessLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.PrivateAccessToString">
            <summary>设置 XamlAccessLevel.PrivateAccessTo(String assemblyQualifiedTypeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.PrivateAccessToType">
            <summary>设置 XamlAccessLevel.PrivateAccessTo(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.PrivateAccessToTypeNameGet">
            <summary>设置 XamlAccessLevel.get_PrivateAccessToTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlAccessLevel.PrivateAccessToTypeNameSetString">
            <summary>设置 XamlAccessLevel.set_PrivateAccessToTypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission">
            <summary>System.Xaml.Permissions.XamlLoadPermission 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.#ctor(System.Xaml.Permissions.XamlLoadPermission)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.AllowedAccessGet">
            <summary>设置 XamlLoadPermission.get_AllowedAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.AllowedAccessSetIListOfXamlAccessLevel">
            <summary>设置 XamlLoadPermission.set_AllowedAccess(IList`1&lt;XamlAccessLevel&gt; value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.Copy">
            <summary>设置 XamlLoadPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.FromXmlSecurityElement">
            <summary>设置 XamlLoadPermission.FromXml(SecurityElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.IncludesXamlAccessLevel">
            <summary>设置 XamlLoadPermission.Includes(XamlAccessLevel requestedAccess) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.IntersectIPermission">
            <summary>设置 XamlLoadPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.IsSubsetOfIPermission">
            <summary>设置 XamlLoadPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.IsUnrestricted">
            <summary>设置 XamlLoadPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.ToXml">
            <summary>设置 XamlLoadPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllInstances.UnionIPermission">
            <summary>设置 XamlLoadPermission.Union(IPermission other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllowedAccessGet">
            <summary>设置 XamlLoadPermission.get_AllowedAccess() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.AllowedAccessSetIListOfXamlAccessLevel">
            <summary>设置 XamlLoadPermission.set_AllowedAccess(IList`1&lt;XamlAccessLevel&gt; value) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Bind(System.Security.IPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Bind(System.Security.ISecurityEncodable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Bind(System.Security.IStackWalk)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Bind(System.Security.Permissions.IUnrestrictedPermission)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.ConstructorIEnumerableOfXamlAccessLevel">
            <summary>设置 XamlLoadPermission.XamlLoadPermission(IEnumerable`1&lt;XamlAccessLevel&gt; allowedAccess) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.ConstructorPermissionState">
            <summary>设置 XamlLoadPermission.XamlLoadPermission(PermissionState state) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.ConstructorXamlAccessLevel">
            <summary>设置 XamlLoadPermission.XamlLoadPermission(XamlAccessLevel allowedAccess) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.Copy">
            <summary>设置 XamlLoadPermission.Copy() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.FromXmlSecurityElement">
            <summary>设置 XamlLoadPermission.FromXml(SecurityElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.IncludesXamlAccessLevel">
            <summary>设置 XamlLoadPermission.Includes(XamlAccessLevel requestedAccess) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.IntersectIPermission">
            <summary>设置 XamlLoadPermission.Intersect(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.IsSubsetOfIPermission">
            <summary>设置 XamlLoadPermission.IsSubsetOf(IPermission target) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.IsUnrestricted">
            <summary>设置 XamlLoadPermission.IsUnrestricted() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.ToXml">
            <summary>设置 XamlLoadPermission.ToXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Permissions.Fakes.ShimXamlLoadPermission.UnionIPermission">
            <summary>设置 XamlLoadPermission.Union(IPermission other) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker">
            <summary>System.Xaml.Schema.XamlMemberInvoker 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.#ctor(System.Xaml.Schema.XamlMemberInvoker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances.GetValueObject">
            <summary>设置 XamlMemberInvoker.GetValue(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances.SetValueObjectObject">
            <summary>设置 XamlMemberInvoker.SetValue(Object instance, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances.ShouldSerializeValueObject">
            <summary>设置 XamlMemberInvoker.ShouldSerializeValue(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances.UnderlyingGetterGet">
            <summary>设置 XamlMemberInvoker.get_UnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.AllInstances.UnderlyingSetterGet">
            <summary>设置 XamlMemberInvoker.get_UnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.Constructor">
            <summary>设置 XamlMemberInvoker.XamlMemberInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.ConstructorXamlMember">
            <summary>设置 XamlMemberInvoker.XamlMemberInvoker(XamlMember member) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.GetValueObject">
            <summary>设置 XamlMemberInvoker.GetValue(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.SetValueObjectObject">
            <summary>设置 XamlMemberInvoker.SetValue(Object instance, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.ShouldSerializeValueObject">
            <summary>设置 XamlMemberInvoker.ShouldSerializeValue(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.StaticConstructor">
            <summary>设置 XamlMemberInvoker.XamlMemberInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.UnderlyingGetterGet">
            <summary>设置 XamlMemberInvoker.get_UnderlyingGetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.UnderlyingSetterGet">
            <summary>设置 XamlMemberInvoker.get_UnderlyingSetter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlMemberInvoker.UnknownInvokerGet">
            <summary>设置 XamlMemberInvoker.get_UnknownInvoker() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker">
            <summary>System.Xaml.Schema.XamlTypeInvoker 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.#ctor(System.Xaml.Schema.XamlTypeInvoker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AddToCollectionObjectObject">
            <summary>设置 XamlTypeInvoker.AddToCollection(Object instance, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AddToDictionaryObjectObjectObject">
            <summary>设置 XamlTypeInvoker.AddToDictionary(Object instance, Object key, Object item) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.AddToCollectionObjectObject">
            <summary>设置 XamlTypeInvoker.AddToCollection(Object instance, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.AddToDictionaryObjectObjectObject">
            <summary>设置 XamlTypeInvoker.AddToDictionary(Object instance, Object key, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.CreateInstanceObjectArray">
            <summary>设置 XamlTypeInvoker.CreateInstance(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.GetAddMethodXamlType">
            <summary>设置 XamlTypeInvoker.GetAddMethod(XamlType contentType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.GetEnumeratorMethod">
            <summary>设置 XamlTypeInvoker.GetEnumeratorMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.GetItemsObject">
            <summary>设置 XamlTypeInvoker.GetItems(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.SetMarkupExtensionHandlerGet">
            <summary>设置 XamlTypeInvoker.get_SetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.AllInstances.SetTypeConverterHandlerGet">
            <summary>设置 XamlTypeInvoker.get_SetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.Constructor">
            <summary>设置 XamlTypeInvoker.XamlTypeInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.ConstructorXamlType">
            <summary>设置 XamlTypeInvoker.XamlTypeInvoker(XamlType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.CreateInstanceObjectArray">
            <summary>设置 XamlTypeInvoker.CreateInstance(Object[] arguments) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.GetAddMethodXamlType">
            <summary>设置 XamlTypeInvoker.GetAddMethod(XamlType contentType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.GetEnumeratorMethod">
            <summary>设置 XamlTypeInvoker.GetEnumeratorMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.GetItemsObject">
            <summary>设置 XamlTypeInvoker.GetItems(Object instance) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.SetMarkupExtensionHandlerGet">
            <summary>设置 XamlTypeInvoker.get_SetMarkupExtensionHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.SetTypeConverterHandlerGet">
            <summary>设置 XamlTypeInvoker.get_SetTypeConverterHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.StaticConstructor">
            <summary>设置 XamlTypeInvoker.XamlTypeInvoker() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeInvoker.UnknownInvokerGet">
            <summary>设置 XamlTypeInvoker.get_UnknownInvoker() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeName">
            <summary>System.Xaml.Schema.XamlTypeName 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeName.#ctor(System.Xaml.Schema.XamlTypeName)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.NameGet">
            <summary>设置 XamlTypeName.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.NameSetString">
            <summary>设置 XamlTypeName.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.NamespaceGet">
            <summary>设置 XamlTypeName.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.NamespaceSetString">
            <summary>设置 XamlTypeName.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.ToString01">
            <summary>设置 XamlTypeName.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.ToStringINamespacePrefixLookup">
            <summary>设置 XamlTypeName.ToString(INamespacePrefixLookup prefixLookup) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.AllInstances.TypeArgumentsGet">
            <summary>设置 XamlTypeName.get_TypeArguments() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.Constructor">
            <summary>设置 XamlTypeName.XamlTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ConstructorStringString">
            <summary>设置 XamlTypeName.XamlTypeName(String xamlNamespace, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ConstructorStringStringIEnumerableOfXamlTypeName">
            <summary>设置 XamlTypeName.XamlTypeName(String xamlNamespace, String name, IEnumerable`1&lt;XamlTypeName&gt; typeArguments) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ConstructorXamlType">
            <summary>设置 XamlTypeName.XamlTypeName(XamlType xamlType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.NameGet">
            <summary>设置 XamlTypeName.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.NameSetString">
            <summary>设置 XamlTypeName.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.NamespaceGet">
            <summary>设置 XamlTypeName.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.NamespaceSetString">
            <summary>设置 XamlTypeName.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ParseListStringIXamlNamespaceResolver">
            <summary>设置 XamlTypeName.ParseList(String typeNameList, IXamlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ParseStringIXamlNamespaceResolver">
            <summary>设置 XamlTypeName.Parse(String typeName, IXamlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ToString">
            <summary>设置 XamlTypeName.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ToStringIListOfXamlTypeNameINamespacePrefixLookup">
            <summary>设置 XamlTypeName.ToString(IList`1&lt;XamlTypeName&gt; typeNameList, INamespacePrefixLookup prefixLookup) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.ToStringINamespacePrefixLookup">
            <summary>设置 XamlTypeName.ToString(INamespacePrefixLookup prefixLookup) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.TryParseListStringIXamlNamespaceResolverIListOfXamlTypeNameOut">
            <summary>设置 XamlTypeName.TryParseList(String typeNameList, IXamlNamespaceResolver namespaceResolver, IList`1&lt;XamlTypeName&gt;&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.TryParseStringIXamlNamespaceResolverXamlTypeNameOut">
            <summary>设置 XamlTypeName.TryParse(String typeName, IXamlNamespaceResolver namespaceResolver, XamlTypeName&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeName.TypeArgumentsGet">
            <summary>设置 XamlTypeName.get_TypeArguments() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter">
            <summary>System.Xaml.Schema.XamlTypeTypeConverter 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.#ctor(System.Xaml.Schema.XamlTypeTypeConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.AllInstances.CanConvertFromITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.AllInstances.CanConvertToITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.AllInstances.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.AllInstances.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.Constructor">
            <summary>设置 XamlTypeTypeConverter.XamlTypeTypeConverter() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlTypeTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1">
            <summary>System.Xaml.Schema.XamlValueConverter`1 的填充码类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.#ctor(System.Xaml.Schema.XamlValueConverter{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.ConverterInstanceGet">
            <summary>设置 XamlValueConverter`1.get_ConverterInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.ConverterTypeGet">
            <summary>设置 XamlValueConverter`1.get_ConverterType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.ConverterTypeSetType">
            <summary>设置 XamlValueConverter`1.set_ConverterType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.CreateInstance">
            <summary>设置 XamlValueConverter`1.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.EqualsObject">
            <summary>设置 XamlValueConverter`1.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.EqualsXamlValueConverterOfT0">
            <summary>设置 XamlValueConverter`1.Equals(XamlValueConverter`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.GetHashCode01">
            <summary>设置 XamlValueConverter`1.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.NameGet">
            <summary>设置 XamlValueConverter`1.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.NameSetString">
            <summary>设置 XamlValueConverter`1.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.TargetTypeGet">
            <summary>设置 XamlValueConverter`1.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.TargetTypeSetXamlType">
            <summary>设置 XamlValueConverter`1.set_TargetType(XamlType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.AllInstances.ToString01">
            <summary>设置 XamlValueConverter`1.ToString() 的 填充码</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.Bind(System.IEquatable{System.Xaml.Schema.XamlValueConverter{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ConstructorTypeXamlType">
            <summary>设置 XamlValueConverter`1.XamlValueConverter`1(Type converterType, XamlType targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ConstructorTypeXamlTypeString">
            <summary>设置 XamlValueConverter`1.XamlValueConverter`1(Type converterType, XamlType targetType, String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ConverterInstanceGet">
            <summary>设置 XamlValueConverter`1.get_ConverterInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ConverterTypeGet">
            <summary>设置 XamlValueConverter`1.get_ConverterType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ConverterTypeSetType">
            <summary>设置 XamlValueConverter`1.set_ConverterType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.CreateInstance">
            <summary>设置 XamlValueConverter`1.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.EqualityOpXamlValueConverterOfT0XamlValueConverterOfT0">
            <summary>设置 XamlValueConverter`1.op_Equality(XamlValueConverter`1&lt;!0&gt; converter1, XamlValueConverter`1&lt;!0&gt; converter2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.EqualsObject">
            <summary>设置 XamlValueConverter`1.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.EqualsXamlValueConverterOfT0">
            <summary>设置 XamlValueConverter`1.Equals(XamlValueConverter`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.GetHashCode">
            <summary>设置 XamlValueConverter`1.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.InequalityOpXamlValueConverterOfT0XamlValueConverterOfT0">
            <summary>设置 XamlValueConverter`1.op_Inequality(XamlValueConverter`1&lt;!0&gt; converter1, XamlValueConverter`1&lt;!0&gt; converter2) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.NameGet">
            <summary>设置 XamlValueConverter`1.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.NameSetString">
            <summary>设置 XamlValueConverter`1.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.TargetTypeGet">
            <summary>设置 XamlValueConverter`1.get_TargetType() 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.TargetTypeSetXamlType">
            <summary>设置 XamlValueConverter`1.set_TargetType(XamlType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.ShimXamlValueConverter`1.ToString">
            <summary>设置 XamlValueConverter`1.ToString() 的 填充码</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.StubXamlMemberInvoker">
            <summary>System.Xaml.Schema.XamlMemberInvoker 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.GetValue(System.Object)">
            <summary>设置 XamlMemberInvoker.GetValue(Object instance) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.GetValueObject">
            <summary>设置 XamlMemberInvoker.GetValue(Object instance) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.InitializeStub">
            <summary>初始化 type StubXamlMemberInvoker 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.SetValue(System.Object,System.Object)">
            <summary>设置 XamlMemberInvoker.SetValue(Object instance, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.SetValueObjectObject">
            <summary>设置 XamlMemberInvoker.SetValue(Object instance, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.ShouldSerializeValue(System.Object)">
            <summary>设置 XamlMemberInvoker.ShouldSerializeValue(Object instance) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlMemberInvoker.ShouldSerializeValueObject">
            <summary>设置 XamlMemberInvoker.ShouldSerializeValue(Object instance) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.StubXamlTypeInvoker">
            <summary>System.Xaml.Schema.XamlTypeInvoker 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.#ctor(System.Xaml.XamlType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.AddToCollection(System.Object,System.Object)">
            <summary>设置 XamlTypeInvoker.AddToCollection(Object instance, Object item) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.AddToCollectionObjectObject">
            <summary>设置 XamlTypeInvoker.AddToCollection(Object instance, Object item) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
            <summary>设置 XamlTypeInvoker.AddToDictionary(Object instance, Object key, Object item) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.AddToDictionaryObjectObjectObject">
            <summary>设置 XamlTypeInvoker.AddToDictionary(Object instance, Object key, Object item) 的 stub</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.CreateInstance(System.Object[])">
            <summary>设置 XamlTypeInvoker.CreateInstance(Object[] arguments) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.CreateInstanceObjectArray">
            <summary>设置 XamlTypeInvoker.CreateInstance(Object[] arguments) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
            <summary>设置 XamlTypeInvoker.GetAddMethod(XamlType contentType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetAddMethodXamlType">
            <summary>设置 XamlTypeInvoker.GetAddMethod(XamlType contentType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetEnumeratorMethod">
            <summary>设置 XamlTypeInvoker.GetEnumeratorMethod() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetEnumeratorMethod01">
            <summary>设置 XamlTypeInvoker.GetEnumeratorMethod() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetItems(System.Object)">
            <summary>设置 XamlTypeInvoker.GetItems(Object instance) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.GetItemsObject">
            <summary>设置 XamlTypeInvoker.GetItems(Object instance) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.InitializeStub">
            <summary>初始化 type StubXamlTypeInvoker 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeInvoker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.StubXamlTypeName">
            <summary>System.Xaml.Schema.XamlTypeName 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeName.#ctor(System.Xaml.XamlType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeName.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeName.InitializeStub">
            <summary>初始化 type StubXamlTypeName 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter">
            <summary>System.Xaml.Schema.XamlTypeTypeConverter 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CanConvertFromITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext context, Type sourceType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>设置 XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CanConvertToITypeDescriptorContextType">
            <summary>设置 XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext context, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>设置 XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.ConvertFromITypeDescriptorContextCultureInfoObject">
            <summary>设置 XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>设置 XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.ConvertToITypeDescriptorContextCultureInfoObjectType">
            <summary>设置 XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.CreateInstanceITypeDescriptorContextIDictionary">
            <summary>设置 TypeConverter.CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetCreateInstanceSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetPropertiesITypeDescriptorContextObjectAttributeArray">
            <summary>设置 TypeConverter.GetProperties(ITypeDescriptorContext context, Object value, Attribute[] attributes) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetPropertiesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetPropertiesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValuesExclusiveITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValuesITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValues(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.GetStandardValuesSupportedITypeDescriptorContext">
            <summary>设置 TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.InitializeStub">
            <summary>初始化 type StubXamlTypeTypeConverter 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlTypeTypeConverter.IsValidITypeDescriptorContextObject">
            <summary>设置 TypeConverter.IsValid(ITypeDescriptorContext context, Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xaml.Schema.Fakes.StubXamlValueConverter`1">
            <summary>System.Xaml.Schema.XamlValueConverter`1 的存根类型</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.CreateInstance">
            <summary>设置 XamlValueConverter`1.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.CreateInstance01">
            <summary>设置 XamlValueConverter`1.CreateInstance() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.Equals(System.Object)">
            <summary>设置 XamlValueConverter`1.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.EqualsObject">
            <summary>设置 XamlValueConverter`1.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.GetHashCode">
            <summary>设置 XamlValueConverter`1.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.GetHashCode01">
            <summary>设置 XamlValueConverter`1.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.InitializeStub">
            <summary>初始化 type StubXamlValueConverter 的新实例</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.ToString">
            <summary>设置 XamlValueConverter`1.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xaml.Schema.Fakes.StubXamlValueConverter`1.ToString01">
            <summary>设置 XamlValueConverter`1.ToString() 的 stub</summary>
        </member>
    </members>
</doc>
