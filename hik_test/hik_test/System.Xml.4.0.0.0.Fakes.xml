<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Xml.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemXmlDelegates">
            <summary>包含用于 System.Xml 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimNameTable">
            <summary>System.Xml.NameTable 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimNameTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimNameTable.#ctor(System.Xml.NameTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AddCharArrayInt32Int32">
            <summary>设置 NameTable.Add(Char[] key, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AddString">
            <summary>设置 NameTable.Add(String key) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimNameTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AllInstances.AddCharArrayInt32Int32">
            <summary>设置 NameTable.Add(Char[] key, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AllInstances.AddString">
            <summary>设置 NameTable.Add(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AllInstances.GetCharArrayInt32Int32">
            <summary>设置 NameTable.Get(Char[] key, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.AllInstances.GetString">
            <summary>设置 NameTable.Get(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimNameTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimNameTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.Constructor">
            <summary>设置 NameTable.NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.GetCharArrayInt32Int32">
            <summary>设置 NameTable.Get(Char[] key, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimNameTable.GetString">
            <summary>设置 NameTable.Get(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlAttribute">
            <summary>System.Xml.XmlAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.#ctor(System.Xml.XmlAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlAttribute.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.AppendChildXmlNode">
            <summary>设置 XmlAttribute.AppendChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.BaseURIGet">
            <summary>设置 XmlAttribute.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlAttribute.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.InnerTextSetString">
            <summary>设置 XmlAttribute.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.InnerXmlSetString">
            <summary>设置 XmlAttribute.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.IsContainerGet">
            <summary>设置 XmlAttribute.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.IsNamespaceGet">
            <summary>设置 XmlAttribute.get_IsNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlAttribute.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.LastNodeGet">
            <summary>设置 XmlAttribute.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlAttribute.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.LocalNameGet">
            <summary>设置 XmlAttribute.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.LocalNameHashGet">
            <summary>设置 XmlAttribute.get_LocalNameHash() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.NameGet">
            <summary>设置 XmlAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.NamespaceURIGet">
            <summary>设置 XmlAttribute.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.NodeTypeGet">
            <summary>设置 XmlAttribute.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.OwnerDocumentGet">
            <summary>设置 XmlAttribute.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.OwnerElementGet">
            <summary>设置 XmlAttribute.get_OwnerElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.ParentNodeGet">
            <summary>设置 XmlAttribute.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.PrefixGet">
            <summary>设置 XmlAttribute.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.PrefixSetString">
            <summary>设置 XmlAttribute.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.PrepareOwnerElementInElementIdAttrMap">
            <summary>设置 XmlAttribute.PrepareOwnerElementInElementIdAttrMap() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.PrependChildXmlNode">
            <summary>设置 XmlAttribute.PrependChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.RemoveChildXmlNode">
            <summary>设置 XmlAttribute.RemoveChild(XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlAttribute.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.ResetOwnerElementInElementIdAttrMapString">
            <summary>设置 XmlAttribute.ResetOwnerElementInElementIdAttrMap(String oldInnerText) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.SchemaInfoGet">
            <summary>设置 XmlAttribute.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.SetParentXmlNode">
            <summary>设置 XmlAttribute.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.SpecifiedGet">
            <summary>设置 XmlAttribute.get_Specified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.ValueGet">
            <summary>设置 XmlAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.ValueSetString">
            <summary>设置 XmlAttribute.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlAttribute.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlAttribute.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.XPLocalNameGet">
            <summary>设置 XmlAttribute.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlAttribute.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.XmlLangGet">
            <summary>设置 XmlAttribute.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AllInstances.XmlSpaceGet">
            <summary>设置 XmlAttribute.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlAttribute.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.AppendChildXmlNode">
            <summary>设置 XmlAttribute.AppendChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.BaseURIGet">
            <summary>设置 XmlAttribute.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttribute.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.CloneNodeBoolean">
            <summary>设置 XmlAttribute.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ConstructorStringStringStringXmlDocument">
            <summary>设置 XmlAttribute.XmlAttribute(String prefix, String localName, String namespaceURI, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.InnerTextSetString">
            <summary>设置 XmlAttribute.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.InnerXmlSetString">
            <summary>设置 XmlAttribute.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.IsContainerGet">
            <summary>设置 XmlAttribute.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.IsNamespaceGet">
            <summary>设置 XmlAttribute.get_IsNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlAttribute.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.LastNodeGet">
            <summary>设置 XmlAttribute.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlAttribute.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.LocalNameGet">
            <summary>设置 XmlAttribute.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.LocalNameHashGet">
            <summary>设置 XmlAttribute.get_LocalNameHash() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.NameGet">
            <summary>设置 XmlAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.NamespaceURIGet">
            <summary>设置 XmlAttribute.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.NodeTypeGet">
            <summary>设置 XmlAttribute.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.OwnerDocumentGet">
            <summary>设置 XmlAttribute.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.OwnerElementGet">
            <summary>设置 XmlAttribute.get_OwnerElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ParentNodeGet">
            <summary>设置 XmlAttribute.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.PrefixGet">
            <summary>设置 XmlAttribute.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.PrefixSetString">
            <summary>设置 XmlAttribute.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.PrepareOwnerElementInElementIdAttrMap">
            <summary>设置 XmlAttribute.PrepareOwnerElementInElementIdAttrMap() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.PrependChildXmlNode">
            <summary>设置 XmlAttribute.PrependChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.RemoveChildXmlNode">
            <summary>设置 XmlAttribute.RemoveChild(XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlAttribute.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ResetOwnerElementInElementIdAttrMapString">
            <summary>设置 XmlAttribute.ResetOwnerElementInElementIdAttrMap(String oldInnerText) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.SchemaInfoGet">
            <summary>设置 XmlAttribute.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.SetParentXmlNode">
            <summary>设置 XmlAttribute.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.SpecifiedGet">
            <summary>设置 XmlAttribute.get_Specified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ValueGet">
            <summary>设置 XmlAttribute.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.ValueSetString">
            <summary>设置 XmlAttribute.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.WriteContentToXmlWriter">
            <summary>设置 XmlAttribute.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.WriteToXmlWriter">
            <summary>设置 XmlAttribute.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.XPLocalNameGet">
            <summary>设置 XmlAttribute.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.XPNodeTypeGet">
            <summary>设置 XmlAttribute.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.XmlLangGet">
            <summary>设置 XmlAttribute.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttribute.XmlSpaceGet">
            <summary>设置 XmlAttribute.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlAttributeCollection">
            <summary>System.Xml.XmlAttributeCollection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.#ctor(System.Xml.XmlAttributeCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AddNodeXmlNode">
            <summary>设置 XmlAttributeCollection.AddNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.AddNodeXmlNode">
            <summary>设置 XmlAttributeCollection.AddNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.AppendXmlAttribute">
            <summary>设置 XmlAttributeCollection.Append(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.CopyToXmlAttributeArrayInt32">
            <summary>设置 XmlAttributeCollection.CopyTo(XmlAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.CountSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.DetachXmlAttribute">
            <summary>设置 XmlAttributeCollection.Detach(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.FindNodeOffsetNSXmlAttribute">
            <summary>设置 XmlAttributeCollection.FindNodeOffsetNS(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.FindNodeOffsetXmlAttribute">
            <summary>设置 XmlAttributeCollection.FindNodeOffset(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.InsertAfterXmlAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertAfter(XmlAttribute newNode, XmlAttribute refNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.InsertBeforeXmlAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertBefore(XmlAttribute newNode, XmlAttribute refNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.InsertNodeAtInt32XmlNode">
            <summary>设置 XmlAttributeCollection.InsertNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.InsertParentIntoElementIdAttrMapXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertParentIntoElementIdAttrMap(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.InternalAppendAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InternalAppendAttribute(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.ItemOfGetInt32">
            <summary>设置 XmlAttributeCollection.get_ItemOf(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.ItemOfGetString">
            <summary>设置 XmlAttributeCollection.get_ItemOf(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.ItemOfGetStringString">
            <summary>设置 XmlAttributeCollection.get_ItemOf(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.PrepareParentInElementIdAttrMapStringString">
            <summary>设置 XmlAttributeCollection.PrepareParentInElementIdAttrMap(String attrPrefix, String attrLocalName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.PrependXmlAttribute">
            <summary>设置 XmlAttributeCollection.Prepend(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveAll">
            <summary>设置 XmlAttributeCollection.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveAtInt32">
            <summary>设置 XmlAttributeCollection.RemoveAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveDuplicateAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.RemoveDuplicateAttribute(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveNodeAtInt32">
            <summary>设置 XmlAttributeCollection.RemoveNodeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveParentFromElementIdAttrMapXmlAttribute">
            <summary>设置 XmlAttributeCollection.RemoveParentFromElementIdAttrMap(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.RemoveXmlAttribute">
            <summary>设置 XmlAttributeCollection.Remove(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.ResetParentInElementIdAttrMapStringString">
            <summary>设置 XmlAttributeCollection.ResetParentInElementIdAttrMap(String oldVal, String newVal) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.SetNamedItemXmlNode">
            <summary>设置 XmlAttributeCollection.SetNamedItem(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.AppendXmlAttribute">
            <summary>设置 XmlAttributeCollection.Append(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlAttributeCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.ConstructorXmlNode">
            <summary>设置 XmlAttributeCollection.XmlAttributeCollection(XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.CopyToXmlAttributeArrayInt32">
            <summary>设置 XmlAttributeCollection.CopyTo(XmlAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.CountSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.DetachXmlAttribute">
            <summary>设置 XmlAttributeCollection.Detach(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.FindNodeOffsetNSXmlAttribute">
            <summary>设置 XmlAttributeCollection.FindNodeOffsetNS(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.FindNodeOffsetXmlAttribute">
            <summary>设置 XmlAttributeCollection.FindNodeOffset(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.InsertAfterXmlAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertAfter(XmlAttribute newNode, XmlAttribute refNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.InsertBeforeXmlAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertBefore(XmlAttribute newNode, XmlAttribute refNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.InsertNodeAtInt32XmlNode">
            <summary>设置 XmlAttributeCollection.InsertNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.InsertParentIntoElementIdAttrMapXmlAttribute">
            <summary>设置 XmlAttributeCollection.InsertParentIntoElementIdAttrMap(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.InternalAppendAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.InternalAppendAttribute(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_IsSynchronized() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.ItemOfGetInt32">
            <summary>设置 XmlAttributeCollection.get_ItemOf(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.ItemOfGetString">
            <summary>设置 XmlAttributeCollection.get_ItemOf(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.ItemOfGetStringString">
            <summary>设置 XmlAttributeCollection.get_ItemOf(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.PrepareParentInElementIdAttrMapStringString">
            <summary>设置 XmlAttributeCollection.PrepareParentInElementIdAttrMap(String attrPrefix, String attrLocalName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.PrependXmlAttribute">
            <summary>设置 XmlAttributeCollection.Prepend(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveAll">
            <summary>设置 XmlAttributeCollection.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveAtInt32">
            <summary>设置 XmlAttributeCollection.RemoveAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveDuplicateAttributeXmlAttribute">
            <summary>设置 XmlAttributeCollection.RemoveDuplicateAttribute(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveNodeAtInt32">
            <summary>设置 XmlAttributeCollection.RemoveNodeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveParentFromElementIdAttrMapXmlAttribute">
            <summary>设置 XmlAttributeCollection.RemoveParentFromElementIdAttrMap(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.RemoveXmlAttribute">
            <summary>设置 XmlAttributeCollection.Remove(XmlAttribute node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.ResetParentInElementIdAttrMapStringString">
            <summary>设置 XmlAttributeCollection.ResetParentInElementIdAttrMap(String oldVal, String newVal) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.SetNamedItemXmlNode">
            <summary>设置 XmlAttributeCollection.SetNamedItem(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.SyncRootSystemCollectionsICollectionget">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.get_SyncRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlAttributeCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>设置 XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlCDataSection">
            <summary>System.Xml.XmlCDataSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.#ctor(System.Xml.XmlCDataSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlCDataSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlCDataSection.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.IsTextGet">
            <summary>设置 XmlCDataSection.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.LocalNameGet">
            <summary>设置 XmlCDataSection.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.NameGet">
            <summary>设置 XmlCDataSection.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.NodeTypeGet">
            <summary>设置 XmlCDataSection.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.ParentNodeGet">
            <summary>设置 XmlCDataSection.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.PreviousTextGet">
            <summary>设置 XmlCDataSection.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlCDataSection.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlCDataSection.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlCDataSection.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCDataSection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.CloneNodeBoolean">
            <summary>设置 XmlCDataSection.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.ConstructorStringXmlDocument">
            <summary>设置 XmlCDataSection.XmlCDataSection(String data, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.IsTextGet">
            <summary>设置 XmlCDataSection.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.LocalNameGet">
            <summary>设置 XmlCDataSection.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.NameGet">
            <summary>设置 XmlCDataSection.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.NodeTypeGet">
            <summary>设置 XmlCDataSection.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.ParentNodeGet">
            <summary>设置 XmlCDataSection.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.PreviousTextGet">
            <summary>设置 XmlCDataSection.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.WriteContentToXmlWriter">
            <summary>设置 XmlCDataSection.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.WriteToXmlWriter">
            <summary>设置 XmlCDataSection.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCDataSection.XPNodeTypeGet">
            <summary>设置 XmlCDataSection.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlCharacterData">
            <summary>System.Xml.XmlCharacterData 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.#ctor(System.Xml.XmlCharacterData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlCharacterData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.CheckOnDataString">
            <summary>设置 XmlCharacterData.CheckOnData(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.DecideXPNodeTypeForTextNodesXmlNodeXPathNodeTypeRef">
            <summary>设置 XmlCharacterData.DecideXPNodeTypeForTextNodes(XmlNode node, XPathNodeType&amp; xnt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.ValueGet">
            <summary>设置 XmlCharacterData.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AllInstances.ValueSetString">
            <summary>设置 XmlCharacterData.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlCharacterData.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.CheckOnDataString">
            <summary>设置 XmlCharacterData.CheckOnData(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.ConstructorStringXmlDocument">
            <summary>设置 XmlCharacterData.XmlCharacterData(String data, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.DecideXPNodeTypeForTextNodesXmlNodeXPathNodeTypeRef">
            <summary>设置 XmlCharacterData.DecideXPNodeTypeForTextNodes(XmlNode node, XPathNodeType&amp; xnt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.ValueGet">
            <summary>设置 XmlCharacterData.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlCharacterData.ValueSetString">
            <summary>设置 XmlCharacterData.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlComment">
            <summary>System.Xml.XmlComment 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.#ctor(System.Xml.XmlComment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlComment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlComment.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.LocalNameGet">
            <summary>设置 XmlComment.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.NameGet">
            <summary>设置 XmlComment.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.NodeTypeGet">
            <summary>设置 XmlComment.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlComment.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlComment.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlComment.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlComment.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.CloneNodeBoolean">
            <summary>设置 XmlComment.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.ConstructorStringXmlDocument">
            <summary>设置 XmlComment.XmlComment(String comment, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.LocalNameGet">
            <summary>设置 XmlComment.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.NameGet">
            <summary>设置 XmlComment.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.NodeTypeGet">
            <summary>设置 XmlComment.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.WriteContentToXmlWriter">
            <summary>设置 XmlComment.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.WriteToXmlWriter">
            <summary>设置 XmlComment.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlComment.XPNodeTypeGet">
            <summary>设置 XmlComment.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlConvert">
            <summary>System.Xml.XmlConvert 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlConvert.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlConvert.#ctor(System.Xml.XmlConvert)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlConvert.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlConvert.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlConvert.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.Constructor">
            <summary>设置 XmlConvert.XmlConvert() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidCharExceptionCharArrayInt32Int32">
            <summary>设置 XmlConvert.CreateInvalidCharException(Char[] data, Int32 length, Int32 invCharPos) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidCharExceptionCharChar">
            <summary>设置 XmlConvert.CreateInvalidCharException(Char invChar, Char nextChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidCharExceptionStringInt32">
            <summary>设置 XmlConvert.CreateInvalidCharException(String data, Int32 invCharPos) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidHighSurrogateCharExceptionChar">
            <summary>设置 XmlConvert.CreateInvalidHighSurrogateCharException(Char hi) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidNameArgumentExceptionStringString">
            <summary>设置 XmlConvert.CreateInvalidNameArgumentException(String name, String argumentName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.CreateInvalidSurrogatePairExceptionCharChar">
            <summary>设置 XmlConvert.CreateInvalidSurrogatePairException(Char low, Char hi) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.DecodeNameString">
            <summary>设置 XmlConvert.DecodeName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.EncodeLocalNameString">
            <summary>设置 XmlConvert.EncodeLocalName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.EncodeNameString">
            <summary>设置 XmlConvert.EncodeName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.EncodeNmTokenString">
            <summary>设置 XmlConvert.EncodeNmToken(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.EscapeValueForDebuggerDisplayString">
            <summary>设置 XmlConvert.EscapeValueForDebuggerDisplay(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.FromBinHexStringString">
            <summary>设置 XmlConvert.FromBinHexString(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.FromBinHexStringStringBoolean">
            <summary>设置 XmlConvert.FromBinHexString(String s, Boolean allowOddCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsNCNameCharChar">
            <summary>设置 XmlConvert.IsNCNameChar(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsNegativeZeroDouble">
            <summary>设置 XmlConvert.IsNegativeZero(Double value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsPublicIdCharChar">
            <summary>设置 XmlConvert.IsPublicIdChar(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsStartNCNameCharChar">
            <summary>设置 XmlConvert.IsStartNCNameChar(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsWhitespaceCharChar">
            <summary>设置 XmlConvert.IsWhitespaceChar(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsXmlCharChar">
            <summary>设置 XmlConvert.IsXmlChar(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.IsXmlSurrogatePairCharChar">
            <summary>设置 XmlConvert.IsXmlSurrogatePair(Char lowChar, Char highChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.SplitStringString">
            <summary>设置 XmlConvert.SplitString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.SplitStringStringStringSplitOptions">
            <summary>设置 XmlConvert.SplitString(String value, StringSplitOptions splitStringOptions) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.StaticConstructor">
            <summary>设置 XmlConvert.XmlConvert() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.StrEqualCharArrayInt32Int32String">
            <summary>设置 XmlConvert.StrEqual(Char[] chars, Int32 strPos1, Int32 strLen1, String str2) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToBinHexStringByteArray">
            <summary>设置 XmlConvert.ToBinHexString(Byte[] inArray) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToBooleanString">
            <summary>设置 XmlConvert.ToBoolean(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToByteString">
            <summary>设置 XmlConvert.ToByte(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToCharString">
            <summary>设置 XmlConvert.ToChar(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeOffsetString">
            <summary>设置 XmlConvert.ToDateTimeOffset(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeOffsetStringString">
            <summary>设置 XmlConvert.ToDateTimeOffset(String s, String format) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeOffsetStringStringArray">
            <summary>设置 XmlConvert.ToDateTimeOffset(String s, String[] formats) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeString">
            <summary>设置 XmlConvert.ToDateTime(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeStringString">
            <summary>设置 XmlConvert.ToDateTime(String s, String format) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeStringStringArray">
            <summary>设置 XmlConvert.ToDateTime(String s, String[] formats) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDateTimeStringXmlDateTimeSerializationMode">
            <summary>设置 XmlConvert.ToDateTime(String s, XmlDateTimeSerializationMode dateTimeOption) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDecimalString">
            <summary>设置 XmlConvert.ToDecimal(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToDoubleString">
            <summary>设置 XmlConvert.ToDouble(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToGuidString">
            <summary>设置 XmlConvert.ToGuid(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToInt16String">
            <summary>设置 XmlConvert.ToInt16(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToInt32String">
            <summary>设置 XmlConvert.ToInt32(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToInt64String">
            <summary>设置 XmlConvert.ToInt64(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToIntegerString">
            <summary>设置 XmlConvert.ToInteger(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToSByteString">
            <summary>设置 XmlConvert.ToSByte(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToSingleString">
            <summary>设置 XmlConvert.ToSingle(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringBoolean">
            <summary>设置 XmlConvert.ToString(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringByte">
            <summary>设置 XmlConvert.ToString(Byte value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringChar">
            <summary>设置 XmlConvert.ToString(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDateTime">
            <summary>设置 XmlConvert.ToString(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDateTimeOffset">
            <summary>设置 XmlConvert.ToString(DateTimeOffset value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDateTimeOffsetString">
            <summary>设置 XmlConvert.ToString(DateTimeOffset value, String format) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDateTimeString">
            <summary>设置 XmlConvert.ToString(DateTime value, String format) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDateTimeXmlDateTimeSerializationMode">
            <summary>设置 XmlConvert.ToString(DateTime value, XmlDateTimeSerializationMode dateTimeOption) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDecimal">
            <summary>设置 XmlConvert.ToString(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringDouble">
            <summary>设置 XmlConvert.ToString(Double value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringGuid">
            <summary>设置 XmlConvert.ToString(Guid value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringInt16">
            <summary>设置 XmlConvert.ToString(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringInt32">
            <summary>设置 XmlConvert.ToString(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringInt64">
            <summary>设置 XmlConvert.ToString(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringSByte">
            <summary>设置 XmlConvert.ToString(SByte value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringSingle">
            <summary>设置 XmlConvert.ToString(Single value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringTimeSpan">
            <summary>设置 XmlConvert.ToString(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringUInt16">
            <summary>设置 XmlConvert.ToString(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringUInt32">
            <summary>设置 XmlConvert.ToString(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToStringUInt64">
            <summary>设置 XmlConvert.ToString(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToTimeSpanString">
            <summary>设置 XmlConvert.ToTimeSpan(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToUInt16String">
            <summary>设置 XmlConvert.ToUInt16(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToUInt32String">
            <summary>设置 XmlConvert.ToUInt32(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToUInt64String">
            <summary>设置 XmlConvert.ToUInt64(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToUriString">
            <summary>设置 XmlConvert.ToUri(String s) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToXPathDoubleObject">
            <summary>设置 XmlConvert.ToXPathDouble(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.ToXPathStringObject">
            <summary>设置 XmlConvert.ToXPathString(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TrimStringEndString">
            <summary>设置 XmlConvert.TrimStringEnd(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TrimStringStartString">
            <summary>设置 XmlConvert.TrimStringStart(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TrimStringString">
            <summary>设置 XmlConvert.TrimString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToBooleanStringBooleanOut">
            <summary>设置 XmlConvert.TryToBoolean(String s, Boolean&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToByteStringByteOut">
            <summary>设置 XmlConvert.TryToByte(String s, Byte&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToCharStringCharOut">
            <summary>设置 XmlConvert.TryToChar(String s, Char&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToDecimalStringDecimalOut">
            <summary>设置 XmlConvert.TryToDecimal(String s, Decimal&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToDoubleStringDoubleOut">
            <summary>设置 XmlConvert.TryToDouble(String s, Double&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToGuidStringGuidOut">
            <summary>设置 XmlConvert.TryToGuid(String s, Guid&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToInt16StringInt16Out">
            <summary>设置 XmlConvert.TryToInt16(String s, Int16&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToInt32StringInt32Out">
            <summary>设置 XmlConvert.TryToInt32(String s, Int32&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToInt64StringInt64Out">
            <summary>设置 XmlConvert.TryToInt64(String s, Int64&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToIntegerStringDecimalOut">
            <summary>设置 XmlConvert.TryToInteger(String s, Decimal&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToSByteStringSByteOut">
            <summary>设置 XmlConvert.TryToSByte(String s, SByte&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToSingleStringSingleOut">
            <summary>设置 XmlConvert.TryToSingle(String s, Single&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToTimeSpanStringTimeSpanOut">
            <summary>设置 XmlConvert.TryToTimeSpan(String s, TimeSpan&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToUInt16StringUInt16Out">
            <summary>设置 XmlConvert.TryToUInt16(String s, UInt16&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToUInt32StringUInt32Out">
            <summary>设置 XmlConvert.TryToUInt32(String s, UInt32&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToUInt64StringUInt64Out">
            <summary>设置 XmlConvert.TryToUInt64(String s, UInt64&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryToUriStringUriOut">
            <summary>设置 XmlConvert.TryToUri(String s, Uri&amp; result) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryVerifyNCNameString">
            <summary>设置 XmlConvert.TryVerifyNCName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryVerifyNMTOKENString">
            <summary>设置 XmlConvert.TryVerifyNMTOKEN(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryVerifyNameString">
            <summary>设置 XmlConvert.TryVerifyName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryVerifyNormalizedStringString">
            <summary>设置 XmlConvert.TryVerifyNormalizedString(String str) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.TryVerifyTOKENString">
            <summary>设置 XmlConvert.TryVerifyTOKEN(String token) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyNCNameString">
            <summary>设置 XmlConvert.VerifyNCName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyNMTOKENString">
            <summary>设置 XmlConvert.VerifyNMTOKEN(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyNameString">
            <summary>设置 XmlConvert.VerifyName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyNormalizedStringString">
            <summary>设置 XmlConvert.VerifyNormalizedString(String str) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyPublicIdString">
            <summary>设置 XmlConvert.VerifyPublicId(String publicId) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyQNameString">
            <summary>设置 XmlConvert.VerifyQName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyTOKENString">
            <summary>设置 XmlConvert.VerifyTOKEN(String token) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyWhitespaceString">
            <summary>设置 XmlConvert.VerifyWhitespace(String content) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.VerifyXmlCharsString">
            <summary>设置 XmlConvert.VerifyXmlChars(String content) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlConvert.XPathRoundDouble">
            <summary>设置 XmlConvert.XPathRound(Double value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDeclaration">
            <summary>System.Xml.XmlDeclaration 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.#ctor(System.Xml.XmlDeclaration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDeclaration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlDeclaration.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.EncodingGet">
            <summary>设置 XmlDeclaration.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.EncodingSetString">
            <summary>设置 XmlDeclaration.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.InnerTextGet">
            <summary>设置 XmlDeclaration.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.InnerTextSetString">
            <summary>设置 XmlDeclaration.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.LocalNameGet">
            <summary>设置 XmlDeclaration.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.NameGet">
            <summary>设置 XmlDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.NodeTypeGet">
            <summary>设置 XmlDeclaration.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.StandaloneGet">
            <summary>设置 XmlDeclaration.get_Standalone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.StandaloneSetString">
            <summary>设置 XmlDeclaration.set_Standalone(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.ValueGet">
            <summary>设置 XmlDeclaration.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.ValueSetString">
            <summary>设置 XmlDeclaration.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.VersionGet">
            <summary>设置 XmlDeclaration.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.VersionSetString">
            <summary>设置 XmlDeclaration.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlDeclaration.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlDeclaration.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDeclaration.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.CloneNodeBoolean">
            <summary>设置 XmlDeclaration.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.ConstructorStringStringStringXmlDocument">
            <summary>设置 XmlDeclaration.XmlDeclaration(String version, String encoding, String standalone, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.EncodingGet">
            <summary>设置 XmlDeclaration.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.EncodingSetString">
            <summary>设置 XmlDeclaration.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.InnerTextGet">
            <summary>设置 XmlDeclaration.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.InnerTextSetString">
            <summary>设置 XmlDeclaration.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.LocalNameGet">
            <summary>设置 XmlDeclaration.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.NameGet">
            <summary>设置 XmlDeclaration.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.NodeTypeGet">
            <summary>设置 XmlDeclaration.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.StandaloneGet">
            <summary>设置 XmlDeclaration.get_Standalone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.StandaloneSetString">
            <summary>设置 XmlDeclaration.set_Standalone(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.ValueGet">
            <summary>设置 XmlDeclaration.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.ValueSetString">
            <summary>设置 XmlDeclaration.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.VersionGet">
            <summary>设置 XmlDeclaration.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.VersionSetString">
            <summary>设置 XmlDeclaration.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.WriteContentToXmlWriter">
            <summary>设置 XmlDeclaration.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDeclaration.WriteToXmlWriter">
            <summary>设置 XmlDeclaration.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocument">
            <summary>System.Xml.XmlDocument 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.#ctor(System.Xml.XmlDocument)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ActualLoadingStatusGet">
            <summary>设置 XmlDocument.get_ActualLoadingStatus() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ActualLoadingStatusSetBoolean">
            <summary>设置 XmlDocument.set_ActualLoadingStatus(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AddDefaultAttributesXmlElement">
            <summary>设置 XmlDocument.AddDefaultAttributes(XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AddElementWithIdStringXmlElement">
            <summary>设置 XmlDocument.AddElementWithId(String id, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AfterEventXmlNodeChangedEventArgs">
            <summary>设置 XmlDocument.AfterEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ActualLoadingStatusGet">
            <summary>设置 XmlDocument.get_ActualLoadingStatus() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ActualLoadingStatusSetBoolean">
            <summary>设置 XmlDocument.set_ActualLoadingStatus(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.AddDefaultAttributesXmlElement">
            <summary>设置 XmlDocument.AddDefaultAttributes(XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.AddElementWithIdStringXmlElement">
            <summary>设置 XmlDocument.AddElementWithId(String id, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.AfterEventXmlNodeChangedEventArgs">
            <summary>设置 XmlDocument.AfterEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlDocument.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.BaseURIGet">
            <summary>设置 XmlDocument.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.BeforeEventXmlNodeChangedEventArgs">
            <summary>设置 XmlDocument.BeforeEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlDocument.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlDocument.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CanReportValidityGet">
            <summary>设置 XmlDocument.get_CanReportValidity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlDocument.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ConvertToNodeTypeString">
            <summary>设置 XmlDocument.ConvertToNodeType(String nodeTypeString) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateAttributeString">
            <summary>设置 XmlDocument.CreateAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateAttributeStringString">
            <summary>设置 XmlDocument.CreateAttribute(String qualifiedName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateAttributeStringStringString">
            <summary>设置 XmlDocument.CreateAttribute(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateCDataSectionString">
            <summary>设置 XmlDocument.CreateCDataSection(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateCommentString">
            <summary>设置 XmlDocument.CreateComment(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateDefaultAttributeStringStringString">
            <summary>设置 XmlDocument.CreateDefaultAttribute(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateDocumentFragment">
            <summary>设置 XmlDocument.CreateDocumentFragment() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateDocumentTypeStringStringStringString">
            <summary>设置 XmlDocument.CreateDocumentType(String name, String publicId, String systemId, String internalSubset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateElementString">
            <summary>设置 XmlDocument.CreateElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateElementStringString">
            <summary>设置 XmlDocument.CreateElement(String qualifiedName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateElementStringStringString">
            <summary>设置 XmlDocument.CreateElement(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateEntityReferenceString">
            <summary>设置 XmlDocument.CreateEntityReference(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateNavigator">
            <summary>设置 XmlDocument.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateNavigatorXmlNode">
            <summary>设置 XmlDocument.CreateNavigator(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateNodeStringStringString">
            <summary>设置 XmlDocument.CreateNode(String nodeTypeString, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateNodeXmlNodeTypeStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateNodeXmlNodeTypeStringStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String prefix, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateProcessingInstructionStringString">
            <summary>设置 XmlDocument.CreateProcessingInstruction(String target, String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateSignificantWhitespaceString">
            <summary>设置 XmlDocument.CreateSignificantWhitespace(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateTextNodeString">
            <summary>设置 XmlDocument.CreateTextNode(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateWhitespaceString">
            <summary>设置 XmlDocument.CreateWhitespace(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.CreateXmlDeclarationStringStringString">
            <summary>设置 XmlDocument.CreateXmlDeclaration(String version, String encoding, String standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.DeclarationGet">
            <summary>设置 XmlDocument.get_Declaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.DocumentElementGet">
            <summary>设置 XmlDocument.get_DocumentElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.DocumentTypeGet">
            <summary>设置 XmlDocument.get_DocumentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.EncodingGet">
            <summary>设置 XmlDocument.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.EntitiesGet">
            <summary>设置 XmlDocument.get_Entities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.EntitiesSetXmlNamedNodeMap">
            <summary>设置 XmlDocument.set_Entities(XmlNamedNodeMap value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetDefaultAttributeXmlElementStringStringString">
            <summary>设置 XmlDocument.GetDefaultAttribute(XmlElement elem, String attrPrefix, String attrLocalname, String attrNamespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetElementByIdString">
            <summary>设置 XmlDocument.GetElementById(String elementId) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetElementsByTagNameString">
            <summary>设置 XmlDocument.GetElementsByTagName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetElementsByTagNameStringString">
            <summary>设置 XmlDocument.GetElementsByTagName(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetEntityNodeString">
            <summary>设置 XmlDocument.GetEntityNode(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetEventArgsXmlNodeXmlNodeXmlNodeStringStringXmlNodeChangedAction">
            <summary>设置 XmlDocument.GetEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, String oldValue, String newValue, XmlNodeChangedAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetInsertEventArgsForLoadXmlNodeXmlNode">
            <summary>设置 XmlDocument.GetInsertEventArgsForLoad(XmlNode node, XmlNode newParent) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.GetResolver">
            <summary>设置 XmlDocument.GetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.HasEntityReferencesGet">
            <summary>设置 XmlDocument.get_HasEntityReferences() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.HasSetResolverGet">
            <summary>设置 XmlDocument.get_HasSetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ImplementationGet">
            <summary>设置 XmlDocument.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ImportNodeXmlNodeBoolean">
            <summary>设置 XmlDocument.ImportNode(XmlNode node, Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.InnerTextSetString">
            <summary>设置 XmlDocument.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.InnerXmlGet">
            <summary>设置 XmlDocument.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.InnerXmlSetString">
            <summary>设置 XmlDocument.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.IsContainerGet">
            <summary>设置 XmlDocument.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.IsLoadingGet">
            <summary>设置 XmlDocument.get_IsLoading() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.IsLoadingSetBoolean">
            <summary>设置 XmlDocument.set_IsLoading(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlDocument.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlDocument.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LastNodeGet">
            <summary>设置 XmlDocument.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlDocument.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LoadStream">
            <summary>设置 XmlDocument.Load(Stream inStream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LoadString">
            <summary>设置 XmlDocument.Load(String filename) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LoadTextReader">
            <summary>设置 XmlDocument.Load(TextReader txtReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LoadXmlReader">
            <summary>设置 XmlDocument.Load(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LoadXmlString">
            <summary>设置 XmlDocument.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.LocalNameGet">
            <summary>设置 XmlDocument.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NameGet">
            <summary>设置 XmlDocument.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NameTableGet">
            <summary>设置 XmlDocument.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NamespaceXmlGet">
            <summary>设置 XmlDocument.get_NamespaceXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeChangedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeChanged(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeChangedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeChanged(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeChangingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeChanging(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeChangingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeChanging(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeInsertedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeInserted(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeInsertedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeInserted(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeInsertingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeInserting(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeInsertingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeInserting(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeRemovedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeRemoved(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeRemovedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeRemoved(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeRemovingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeRemoving(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeRemovingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeRemoving(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.NodeTypeGet">
            <summary>设置 XmlDocument.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.OwnerDocumentGet">
            <summary>设置 XmlDocument.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ParentNodeGet">
            <summary>设置 XmlDocument.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.PreserveWhitespaceGet">
            <summary>设置 XmlDocument.get_PreserveWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.PreserveWhitespaceSetBoolean">
            <summary>设置 XmlDocument.set_PreserveWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ReadNodeXmlReader">
            <summary>设置 XmlDocument.ReadNode(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.RemoveElementWithIdStringXmlElement">
            <summary>设置 XmlDocument.RemoveElementWithId(String id, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SaveStream">
            <summary>设置 XmlDocument.Save(Stream outStream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SaveString">
            <summary>设置 XmlDocument.Save(String filename) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SaveTextWriter">
            <summary>设置 XmlDocument.Save(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SaveXmlWriter">
            <summary>设置 XmlDocument.Save(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SchemaInfoGet">
            <summary>设置 XmlDocument.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SchemasGet">
            <summary>设置 XmlDocument.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SchemasSetXmlSchemaSet">
            <summary>设置 XmlDocument.set_Schemas(XmlSchemaSet value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SetBaseURIString">
            <summary>设置 XmlDocument.SetBaseURI(String inBaseURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.SetDefaultNamespaceStringStringStringRef">
            <summary>设置 XmlDocument.SetDefaultNamespace(String prefix, String localName, String&amp; namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.StandaloneGet">
            <summary>设置 XmlDocument.get_Standalone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ValidateValidationEventHandler">
            <summary>设置 XmlDocument.Validate(ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.ValidateValidationEventHandlerXmlNode">
            <summary>设置 XmlDocument.Validate(ValidationEventHandler validationEventHandler, XmlNode nodeToValidate) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.VersionGet">
            <summary>设置 XmlDocument.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlDocument.WriteContentTo(XmlWriter xw) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlDocument.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlDocument.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AllInstances.XmlResolverSetXmlResolver">
            <summary>设置 XmlDocument.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlDocument.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.BaseURIGet">
            <summary>设置 XmlDocument.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.BeforeEventXmlNodeChangedEventArgs">
            <summary>设置 XmlDocument.BeforeEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocument.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlDocument.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlDocument.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CanReportValidityGet">
            <summary>设置 XmlDocument.get_CanReportValidity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CheckNameString">
            <summary>设置 XmlDocument.CheckName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CloneNodeBoolean">
            <summary>设置 XmlDocument.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.Constructor">
            <summary>设置 XmlDocument.XmlDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ConstructorXmlImplementation">
            <summary>设置 XmlDocument.XmlDocument(XmlImplementation imp) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ConstructorXmlNameTable">
            <summary>设置 XmlDocument.XmlDocument(XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ConvertToNodeTypeString">
            <summary>设置 XmlDocument.ConvertToNodeType(String nodeTypeString) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateAttributeString">
            <summary>设置 XmlDocument.CreateAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateAttributeStringString">
            <summary>设置 XmlDocument.CreateAttribute(String qualifiedName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateAttributeStringStringString">
            <summary>设置 XmlDocument.CreateAttribute(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateCDataSectionString">
            <summary>设置 XmlDocument.CreateCDataSection(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateCommentString">
            <summary>设置 XmlDocument.CreateComment(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateDefaultAttributeStringStringString">
            <summary>设置 XmlDocument.CreateDefaultAttribute(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateDocumentFragment">
            <summary>设置 XmlDocument.CreateDocumentFragment() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateDocumentTypeStringStringStringString">
            <summary>设置 XmlDocument.CreateDocumentType(String name, String publicId, String systemId, String internalSubset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateElementString">
            <summary>设置 XmlDocument.CreateElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateElementStringString">
            <summary>设置 XmlDocument.CreateElement(String qualifiedName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateElementStringStringString">
            <summary>设置 XmlDocument.CreateElement(String prefix, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateEntityReferenceString">
            <summary>设置 XmlDocument.CreateEntityReference(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateNavigator">
            <summary>设置 XmlDocument.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateNavigatorXmlNode">
            <summary>设置 XmlDocument.CreateNavigator(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateNodeStringStringString">
            <summary>设置 XmlDocument.CreateNode(String nodeTypeString, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateNodeXmlNodeTypeStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateNodeXmlNodeTypeStringStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String prefix, String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateProcessingInstructionStringString">
            <summary>设置 XmlDocument.CreateProcessingInstruction(String target, String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateSignificantWhitespaceString">
            <summary>设置 XmlDocument.CreateSignificantWhitespace(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateTextNodeString">
            <summary>设置 XmlDocument.CreateTextNode(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateWhitespaceString">
            <summary>设置 XmlDocument.CreateWhitespace(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.CreateXmlDeclarationStringStringString">
            <summary>设置 XmlDocument.CreateXmlDeclaration(String version, String encoding, String standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.DeclarationGet">
            <summary>设置 XmlDocument.get_Declaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.DocumentElementGet">
            <summary>设置 XmlDocument.get_DocumentElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.DocumentTypeGet">
            <summary>设置 XmlDocument.get_DocumentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.EncodingGet">
            <summary>设置 XmlDocument.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.EntitiesGet">
            <summary>设置 XmlDocument.get_Entities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.EntitiesSetXmlNamedNodeMap">
            <summary>设置 XmlDocument.set_Entities(XmlNamedNodeMap value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetDefaultAttributeXmlElementStringStringString">
            <summary>设置 XmlDocument.GetDefaultAttribute(XmlElement elem, String attrPrefix, String attrLocalname, String attrNamespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetElementByIdString">
            <summary>设置 XmlDocument.GetElementById(String elementId) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetElementsByTagNameString">
            <summary>设置 XmlDocument.GetElementsByTagName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetElementsByTagNameStringString">
            <summary>设置 XmlDocument.GetElementsByTagName(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetEntityNodeString">
            <summary>设置 XmlDocument.GetEntityNode(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetEventArgsXmlNodeXmlNodeXmlNodeStringStringXmlNodeChangedAction">
            <summary>设置 XmlDocument.GetEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, String oldValue, String newValue, XmlNodeChangedAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetInsertEventArgsForLoadXmlNodeXmlNode">
            <summary>设置 XmlDocument.GetInsertEventArgsForLoad(XmlNode node, XmlNode newParent) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.GetResolver">
            <summary>设置 XmlDocument.GetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.HasEntityReferencesGet">
            <summary>设置 XmlDocument.get_HasEntityReferences() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.HasSetResolverGet">
            <summary>设置 XmlDocument.get_HasSetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ImplementationGet">
            <summary>设置 XmlDocument.get_Implementation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ImportNodeXmlNodeBoolean">
            <summary>设置 XmlDocument.ImportNode(XmlNode node, Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.InnerTextSetString">
            <summary>设置 XmlDocument.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.InnerXmlGet">
            <summary>设置 XmlDocument.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.InnerXmlSetString">
            <summary>设置 XmlDocument.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsContainerGet">
            <summary>设置 XmlDocument.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsLoadingGet">
            <summary>设置 XmlDocument.get_IsLoading() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsLoadingSetBoolean">
            <summary>设置 XmlDocument.set_IsLoading(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsReadOnlyGet">
            <summary>设置 XmlDocument.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsTextNodeXmlNodeType">
            <summary>设置 XmlDocument.IsTextNode(XmlNodeType nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlDocument.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LastNodeGet">
            <summary>设置 XmlDocument.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlDocument.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LoadStream">
            <summary>设置 XmlDocument.Load(Stream inStream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LoadString">
            <summary>设置 XmlDocument.Load(String filename) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LoadTextReader">
            <summary>设置 XmlDocument.Load(TextReader txtReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LoadXmlReader">
            <summary>设置 XmlDocument.Load(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LoadXmlString">
            <summary>设置 XmlDocument.LoadXml(String xml) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.LocalNameGet">
            <summary>设置 XmlDocument.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NameGet">
            <summary>设置 XmlDocument.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NameTableGet">
            <summary>设置 XmlDocument.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NamespaceXmlGet">
            <summary>设置 XmlDocument.get_NamespaceXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeChangedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeChanged(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeChangedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeChanged(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeChangingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeChanging(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeChangingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeChanging(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeInsertedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeInserted(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeInsertedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeInserted(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeInsertingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeInserting(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeInsertingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeInserting(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeRemovedAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeRemoved(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeRemovedRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeRemoved(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeRemovingAddXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.add_NodeRemoving(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeRemovingRemoveXmlNodeChangedEventHandler">
            <summary>设置 XmlDocument.remove_NodeRemoving(XmlNodeChangedEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.NodeTypeGet">
            <summary>设置 XmlDocument.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.OwnerDocumentGet">
            <summary>设置 XmlDocument.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ParentNodeGet">
            <summary>设置 XmlDocument.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.PreserveWhitespaceGet">
            <summary>设置 XmlDocument.get_PreserveWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.PreserveWhitespaceSetBoolean">
            <summary>设置 XmlDocument.set_PreserveWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ReadNodeXmlReader">
            <summary>设置 XmlDocument.ReadNode(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.RemoveElementWithIdStringXmlElement">
            <summary>设置 XmlDocument.RemoveElementWithId(String id, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SaveStream">
            <summary>设置 XmlDocument.Save(Stream outStream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SaveString">
            <summary>设置 XmlDocument.Save(String filename) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SaveTextWriter">
            <summary>设置 XmlDocument.Save(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SaveXmlWriter">
            <summary>设置 XmlDocument.Save(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SchemaInfoGet">
            <summary>设置 XmlDocument.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SchemasGet">
            <summary>设置 XmlDocument.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SchemasSetXmlSchemaSet">
            <summary>设置 XmlDocument.set_Schemas(XmlSchemaSet value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SetBaseURIString">
            <summary>设置 XmlDocument.SetBaseURI(String inBaseURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.SetDefaultNamespaceStringStringStringRef">
            <summary>设置 XmlDocument.SetDefaultNamespace(String prefix, String localName, String&amp; namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.StandaloneGet">
            <summary>设置 XmlDocument.get_Standalone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.StaticConstructor">
            <summary>设置 XmlDocument.XmlDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ValidateValidationEventHandler">
            <summary>设置 XmlDocument.Validate(ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.ValidateValidationEventHandlerXmlNode">
            <summary>设置 XmlDocument.Validate(ValidationEventHandler validationEventHandler, XmlNode nodeToValidate) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.VersionGet">
            <summary>设置 XmlDocument.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.WriteContentToXmlWriter">
            <summary>设置 XmlDocument.WriteContentTo(XmlWriter xw) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.WriteToXmlWriter">
            <summary>设置 XmlDocument.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.XPNodeTypeGet">
            <summary>设置 XmlDocument.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocument.XmlResolverSetXmlResolver">
            <summary>设置 XmlDocument.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocumentFragment">
            <summary>System.Xml.XmlDocumentFragment 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.#ctor(System.Xml.XmlDocumentFragment)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlDocumentFragment.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlDocumentFragment.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlDocumentFragment.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.InnerXmlGet">
            <summary>设置 XmlDocumentFragment.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.InnerXmlSetString">
            <summary>设置 XmlDocumentFragment.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.IsContainerGet">
            <summary>设置 XmlDocumentFragment.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlDocumentFragment.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.LastNodeGet">
            <summary>设置 XmlDocumentFragment.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlDocumentFragment.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.LocalNameGet">
            <summary>设置 XmlDocumentFragment.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.NameGet">
            <summary>设置 XmlDocumentFragment.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.NodeTypeGet">
            <summary>设置 XmlDocumentFragment.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.OwnerDocumentGet">
            <summary>设置 XmlDocumentFragment.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.ParentNodeGet">
            <summary>设置 XmlDocumentFragment.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlDocumentFragment.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentFragment.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlDocumentFragment.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlDocumentFragment.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.CloneNodeBoolean">
            <summary>设置 XmlDocumentFragment.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.ConstructorXmlDocument">
            <summary>设置 XmlDocumentFragment.XmlDocumentFragment(XmlDocument ownerDocument) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.InnerXmlGet">
            <summary>设置 XmlDocumentFragment.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.InnerXmlSetString">
            <summary>设置 XmlDocumentFragment.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.IsContainerGet">
            <summary>设置 XmlDocumentFragment.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlDocumentFragment.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.LastNodeGet">
            <summary>设置 XmlDocumentFragment.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlDocumentFragment.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.LocalNameGet">
            <summary>设置 XmlDocumentFragment.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.NameGet">
            <summary>设置 XmlDocumentFragment.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.NodeTypeGet">
            <summary>设置 XmlDocumentFragment.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.OwnerDocumentGet">
            <summary>设置 XmlDocumentFragment.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.ParentNodeGet">
            <summary>设置 XmlDocumentFragment.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.WriteToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentFragment.XPNodeTypeGet">
            <summary>设置 XmlDocumentFragment.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocumentType">
            <summary>System.Xml.XmlDocumentType 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.#ctor(System.Xml.XmlDocumentType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlDocumentType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlDocumentType.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.EntitiesGet">
            <summary>设置 XmlDocumentType.get_Entities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.InternalSubsetGet">
            <summary>设置 XmlDocumentType.get_InternalSubset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlDocumentType.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.LocalNameGet">
            <summary>设置 XmlDocumentType.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.NameGet">
            <summary>设置 XmlDocumentType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.NodeTypeGet">
            <summary>设置 XmlDocumentType.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.NotationsGet">
            <summary>设置 XmlDocumentType.get_Notations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.ParseWithNamespacesGet">
            <summary>设置 XmlDocumentType.get_ParseWithNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.ParseWithNamespacesSetBoolean">
            <summary>设置 XmlDocumentType.set_ParseWithNamespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.PublicIdGet">
            <summary>设置 XmlDocumentType.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.SystemIdGet">
            <summary>设置 XmlDocumentType.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentType.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlDocumentType.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlDocumentType.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.CloneNodeBoolean">
            <summary>设置 XmlDocumentType.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.ConstructorStringStringStringStringXmlDocument">
            <summary>设置 XmlDocumentType.XmlDocumentType(String name, String publicId, String systemId, String internalSubset, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.EntitiesGet">
            <summary>设置 XmlDocumentType.get_Entities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.InternalSubsetGet">
            <summary>设置 XmlDocumentType.get_InternalSubset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.IsReadOnlyGet">
            <summary>设置 XmlDocumentType.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.LocalNameGet">
            <summary>设置 XmlDocumentType.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.NameGet">
            <summary>设置 XmlDocumentType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.NodeTypeGet">
            <summary>设置 XmlDocumentType.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.NotationsGet">
            <summary>设置 XmlDocumentType.get_Notations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.ParseWithNamespacesGet">
            <summary>设置 XmlDocumentType.get_ParseWithNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.ParseWithNamespacesSetBoolean">
            <summary>设置 XmlDocumentType.set_ParseWithNamespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.PublicIdGet">
            <summary>设置 XmlDocumentType.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.SystemIdGet">
            <summary>设置 XmlDocumentType.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentType.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlDocumentType.WriteToXmlWriter">
            <summary>设置 XmlDocumentType.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlElement">
            <summary>System.Xml.XmlElement 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.#ctor(System.Xml.XmlElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlElement.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.AttributesGet">
            <summary>设置 XmlElement.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlElement.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetAttributeNodeString">
            <summary>设置 XmlElement.GetAttributeNode(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetAttributeNodeStringString">
            <summary>设置 XmlElement.GetAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetAttributeString">
            <summary>设置 XmlElement.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetAttributeStringString">
            <summary>设置 XmlElement.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetElementsByTagNameString">
            <summary>设置 XmlElement.GetElementsByTagName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetElementsByTagNameStringString">
            <summary>设置 XmlElement.GetElementsByTagName(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.GetXPAttributeStringString">
            <summary>设置 XmlElement.GetXPAttribute(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.HasAttributeString">
            <summary>设置 XmlElement.HasAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.HasAttributeStringString">
            <summary>设置 XmlElement.HasAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.HasAttributesGet">
            <summary>设置 XmlElement.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.InnerTextGet">
            <summary>设置 XmlElement.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.InnerTextSetString">
            <summary>设置 XmlElement.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.InnerXmlGet">
            <summary>设置 XmlElement.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.InnerXmlSetString">
            <summary>设置 XmlElement.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.IsContainerGet">
            <summary>设置 XmlElement.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.IsEmptyGet">
            <summary>设置 XmlElement.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.IsEmptySetBoolean">
            <summary>设置 XmlElement.set_IsEmpty(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlElement.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.LastNodeGet">
            <summary>设置 XmlElement.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlElement.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.LocalNameGet">
            <summary>设置 XmlElement.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.NameGet">
            <summary>设置 XmlElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.NamespaceURIGet">
            <summary>设置 XmlElement.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.NextSiblingGet">
            <summary>设置 XmlElement.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.NodeTypeGet">
            <summary>设置 XmlElement.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.OwnerDocumentGet">
            <summary>设置 XmlElement.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.ParentNodeGet">
            <summary>设置 XmlElement.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.PrefixGet">
            <summary>设置 XmlElement.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.PrefixSetString">
            <summary>设置 XmlElement.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAll">
            <summary>设置 XmlElement.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAllAttributes">
            <summary>设置 XmlElement.RemoveAllAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAllChildren">
            <summary>设置 XmlElement.RemoveAllChildren() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAttributeAtInt32">
            <summary>设置 XmlElement.RemoveAttributeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAttributeNodeStringString">
            <summary>设置 XmlElement.RemoveAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.RemoveAttributeNode(XmlAttribute oldAttr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAttributeString">
            <summary>设置 XmlElement.RemoveAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.RemoveAttributeStringString">
            <summary>设置 XmlElement.RemoveAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SchemaInfoGet">
            <summary>设置 XmlElement.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SetAttributeNodeStringString">
            <summary>设置 XmlElement.SetAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SetAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.SetAttributeNode(XmlAttribute newAttr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SetAttributeStringString">
            <summary>设置 XmlElement.SetAttribute(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SetAttributeStringStringString">
            <summary>设置 XmlElement.SetAttribute(String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.SetParentXmlNode">
            <summary>设置 XmlElement.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlElement.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlElement.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.XPLocalNameGet">
            <summary>设置 XmlElement.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlElement.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlElement.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.AttributesGet">
            <summary>设置 XmlElement.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlElement.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.CloneNodeBoolean">
            <summary>设置 XmlElement.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.ConstructorStringStringStringXmlDocument">
            <summary>设置 XmlElement.XmlElement(String prefix, String localName, String namespaceURI, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetAttributeNodeString">
            <summary>设置 XmlElement.GetAttributeNode(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetAttributeNodeStringString">
            <summary>设置 XmlElement.GetAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetAttributeString">
            <summary>设置 XmlElement.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetAttributeStringString">
            <summary>设置 XmlElement.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetElementsByTagNameString">
            <summary>设置 XmlElement.GetElementsByTagName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetElementsByTagNameStringString">
            <summary>设置 XmlElement.GetElementsByTagName(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.GetXPAttributeStringString">
            <summary>设置 XmlElement.GetXPAttribute(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.HasAttributeString">
            <summary>设置 XmlElement.HasAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.HasAttributeStringString">
            <summary>设置 XmlElement.HasAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.HasAttributesGet">
            <summary>设置 XmlElement.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.InnerTextGet">
            <summary>设置 XmlElement.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.InnerTextSetString">
            <summary>设置 XmlElement.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.InnerXmlGet">
            <summary>设置 XmlElement.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.InnerXmlSetString">
            <summary>设置 XmlElement.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.IsContainerGet">
            <summary>设置 XmlElement.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.IsEmptyGet">
            <summary>设置 XmlElement.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.IsEmptySetBoolean">
            <summary>设置 XmlElement.set_IsEmpty(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlElement.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.LastNodeGet">
            <summary>设置 XmlElement.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlElement.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.LocalNameGet">
            <summary>设置 XmlElement.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.NameGet">
            <summary>设置 XmlElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.NamespaceURIGet">
            <summary>设置 XmlElement.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.NextSiblingGet">
            <summary>设置 XmlElement.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.NodeTypeGet">
            <summary>设置 XmlElement.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.OwnerDocumentGet">
            <summary>设置 XmlElement.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.ParentNodeGet">
            <summary>设置 XmlElement.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.PrefixGet">
            <summary>设置 XmlElement.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.PrefixSetString">
            <summary>设置 XmlElement.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAll">
            <summary>设置 XmlElement.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAllAttributes">
            <summary>设置 XmlElement.RemoveAllAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAllChildren">
            <summary>设置 XmlElement.RemoveAllChildren() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAttributeAtInt32">
            <summary>设置 XmlElement.RemoveAttributeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAttributeNodeStringString">
            <summary>设置 XmlElement.RemoveAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.RemoveAttributeNode(XmlAttribute oldAttr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAttributeString">
            <summary>设置 XmlElement.RemoveAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.RemoveAttributeStringString">
            <summary>设置 XmlElement.RemoveAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SchemaInfoGet">
            <summary>设置 XmlElement.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SetAttributeNodeStringString">
            <summary>设置 XmlElement.SetAttributeNode(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SetAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.SetAttributeNode(XmlAttribute newAttr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SetAttributeStringString">
            <summary>设置 XmlElement.SetAttribute(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SetAttributeStringStringString">
            <summary>设置 XmlElement.SetAttribute(String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.SetParentXmlNode">
            <summary>设置 XmlElement.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.WriteContentToXmlWriter">
            <summary>设置 XmlElement.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.WriteToXmlWriter">
            <summary>设置 XmlElement.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.XPLocalNameGet">
            <summary>设置 XmlElement.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlElement.XPNodeTypeGet">
            <summary>设置 XmlElement.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlEntity">
            <summary>System.Xml.XmlEntity 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.#ctor(System.Xml.XmlEntity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlEntity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.BaseURIGet">
            <summary>设置 XmlEntity.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlEntity.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.InnerTextGet">
            <summary>设置 XmlEntity.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.InnerTextSetString">
            <summary>设置 XmlEntity.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.InnerXmlGet">
            <summary>设置 XmlEntity.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.InnerXmlSetString">
            <summary>设置 XmlEntity.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.IsContainerGet">
            <summary>设置 XmlEntity.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlEntity.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlEntity.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.LastNodeGet">
            <summary>设置 XmlEntity.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlEntity.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.LocalNameGet">
            <summary>设置 XmlEntity.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.NameGet">
            <summary>设置 XmlEntity.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.NodeTypeGet">
            <summary>设置 XmlEntity.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.NotationNameGet">
            <summary>设置 XmlEntity.get_NotationName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.OuterXmlGet">
            <summary>设置 XmlEntity.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.PublicIdGet">
            <summary>设置 XmlEntity.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.SetBaseURIString">
            <summary>设置 XmlEntity.SetBaseURI(String inBaseURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.SystemIdGet">
            <summary>设置 XmlEntity.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlEntity.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlEntity.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.BaseURIGet">
            <summary>设置 XmlEntity.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntity.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.CloneNodeBoolean">
            <summary>设置 XmlEntity.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.ConstructorStringStringStringStringStringXmlDocument">
            <summary>设置 XmlEntity.XmlEntity(String name, String strdata, String publicId, String systemId, String notationName, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.InnerTextGet">
            <summary>设置 XmlEntity.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.InnerTextSetString">
            <summary>设置 XmlEntity.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.InnerXmlGet">
            <summary>设置 XmlEntity.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.InnerXmlSetString">
            <summary>设置 XmlEntity.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.IsContainerGet">
            <summary>设置 XmlEntity.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.IsReadOnlyGet">
            <summary>设置 XmlEntity.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlEntity.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.LastNodeGet">
            <summary>设置 XmlEntity.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlEntity.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.LocalNameGet">
            <summary>设置 XmlEntity.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.NameGet">
            <summary>设置 XmlEntity.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.NodeTypeGet">
            <summary>设置 XmlEntity.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.NotationNameGet">
            <summary>设置 XmlEntity.get_NotationName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.OuterXmlGet">
            <summary>设置 XmlEntity.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.PublicIdGet">
            <summary>设置 XmlEntity.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.SetBaseURIString">
            <summary>设置 XmlEntity.SetBaseURI(String inBaseURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.SystemIdGet">
            <summary>设置 XmlEntity.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.WriteContentToXmlWriter">
            <summary>设置 XmlEntity.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntity.WriteToXmlWriter">
            <summary>设置 XmlEntity.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlEntityReference">
            <summary>System.Xml.XmlEntityReference 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.#ctor(System.Xml.XmlEntityReference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlEntityReference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.BaseURIGet">
            <summary>设置 XmlEntityReference.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.ChildBaseURIGet">
            <summary>设置 XmlEntityReference.get_ChildBaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlEntityReference.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.IsContainerGet">
            <summary>设置 XmlEntityReference.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlEntityReference.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlEntityReference.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.LastNodeGet">
            <summary>设置 XmlEntityReference.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlEntityReference.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.LocalNameGet">
            <summary>设置 XmlEntityReference.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.NameGet">
            <summary>设置 XmlEntityReference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.NodeTypeGet">
            <summary>设置 XmlEntityReference.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.SetParentForLoadXmlNode">
            <summary>设置 XmlEntityReference.SetParentForLoad(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.SetParentXmlNode">
            <summary>设置 XmlEntityReference.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.ValueGet">
            <summary>设置 XmlEntityReference.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.ValueSetString">
            <summary>设置 XmlEntityReference.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlEntityReference.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlEntityReference.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.BaseURIGet">
            <summary>设置 XmlEntityReference.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlEntityReference.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.ChildBaseURIGet">
            <summary>设置 XmlEntityReference.get_ChildBaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.CloneNodeBoolean">
            <summary>设置 XmlEntityReference.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.ConstructorStringXmlDocument">
            <summary>设置 XmlEntityReference.XmlEntityReference(String name, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.IsContainerGet">
            <summary>设置 XmlEntityReference.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.IsReadOnlyGet">
            <summary>设置 XmlEntityReference.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlEntityReference.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.LastNodeGet">
            <summary>设置 XmlEntityReference.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlEntityReference.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.LocalNameGet">
            <summary>设置 XmlEntityReference.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.NameGet">
            <summary>设置 XmlEntityReference.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.NodeTypeGet">
            <summary>设置 XmlEntityReference.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.SetParentForLoadXmlNode">
            <summary>设置 XmlEntityReference.SetParentForLoad(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.SetParentXmlNode">
            <summary>设置 XmlEntityReference.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.ValueGet">
            <summary>设置 XmlEntityReference.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.ValueSetString">
            <summary>设置 XmlEntityReference.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.WriteContentToXmlWriter">
            <summary>设置 XmlEntityReference.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlEntityReference.WriteToXmlWriter">
            <summary>设置 XmlEntityReference.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlException">
            <summary>System.Xml.XmlException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlException.#ctor(System.Xml.XmlException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.LineNumberGet">
            <summary>设置 XmlException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.LinePositionGet">
            <summary>设置 XmlException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.MessageGet">
            <summary>设置 XmlException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.ResStringGet">
            <summary>设置 XmlException.get_ResString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.AllInstances.SourceUriGet">
            <summary>设置 XmlException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.BuildCharExceptionArgsCharArrayInt32">
            <summary>设置 XmlException.BuildCharExceptionArgs(Char[] data, Int32 invCharIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.BuildCharExceptionArgsCharArrayInt32Int32">
            <summary>设置 XmlException.BuildCharExceptionArgs(Char[] data, Int32 length, Int32 invCharIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.BuildCharExceptionArgsCharChar">
            <summary>设置 XmlException.BuildCharExceptionArgs(Char invChar, Char nextChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.BuildCharExceptionArgsStringInt32">
            <summary>设置 XmlException.BuildCharExceptionArgs(String data, Int32 invCharIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.Constructor">
            <summary>设置 XmlException.XmlException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XmlException.XmlException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorString">
            <summary>设置 XmlException.XmlException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringException">
            <summary>设置 XmlException.XmlException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringExceptionInt32Int32">
            <summary>设置 XmlException.XmlException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringExceptionInt32Int32String">
            <summary>设置 XmlException.XmlException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringInt32Int32">
            <summary>设置 XmlException.XmlException(String res, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringString">
            <summary>设置 XmlException.XmlException(String res, String arg) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArray">
            <summary>设置 XmlException.XmlException(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayExceptionInt32Int32">
            <summary>设置 XmlException.XmlException(String res, String[] args, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayExceptionInt32Int32String">
            <summary>设置 XmlException.XmlException(String res, String[] args, Exception innerException, Int32 lineNumber, Int32 linePosition, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayIXmlLineInfo">
            <summary>设置 XmlException.XmlException(String res, String[] args, IXmlLineInfo lineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayIXmlLineInfoString">
            <summary>设置 XmlException.XmlException(String res, String[] args, IXmlLineInfo lineInfo, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayInt32Int32">
            <summary>设置 XmlException.XmlException(String res, String[] args, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayInt32Int32String">
            <summary>设置 XmlException.XmlException(String res, String[] args, Int32 lineNumber, Int32 linePosition, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringArrayString">
            <summary>设置 XmlException.XmlException(String res, String[] args, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringExceptionIXmlLineInfo">
            <summary>设置 XmlException.XmlException(String res, String arg, Exception innerException, IXmlLineInfo lineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringIXmlLineInfo">
            <summary>设置 XmlException.XmlException(String res, String arg, IXmlLineInfo lineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringIXmlLineInfoString">
            <summary>设置 XmlException.XmlException(String res, String arg, IXmlLineInfo lineInfo, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringInt32Int32">
            <summary>设置 XmlException.XmlException(String res, String arg, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringInt32Int32String">
            <summary>设置 XmlException.XmlException(String res, String arg, Int32 lineNumber, Int32 linePosition, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ConstructorStringStringString">
            <summary>设置 XmlException.XmlException(String res, String arg, String sourceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.IsCatchableExceptionException">
            <summary>设置 XmlException.IsCatchableException(Exception e) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.LineNumberGet">
            <summary>设置 XmlException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.LinePositionGet">
            <summary>设置 XmlException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.MessageGet">
            <summary>设置 XmlException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.ResStringGet">
            <summary>设置 XmlException.get_ResString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlException.SourceUriGet">
            <summary>设置 XmlException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlImplementation">
            <summary>System.Xml.XmlImplementation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlImplementation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlImplementation.#ctor(System.Xml.XmlImplementation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlImplementation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.AllInstances.CreateDocument">
            <summary>设置 XmlImplementation.CreateDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.AllInstances.HasFeatureStringString">
            <summary>设置 XmlImplementation.HasFeature(String strFeature, String strVersion) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.AllInstances.NameTableGet">
            <summary>设置 XmlImplementation.get_NameTable() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlImplementation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlImplementation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.Constructor">
            <summary>设置 XmlImplementation.XmlImplementation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.ConstructorXmlNameTable">
            <summary>设置 XmlImplementation.XmlImplementation(XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.CreateDocument">
            <summary>设置 XmlImplementation.CreateDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.HasFeatureStringString">
            <summary>设置 XmlImplementation.HasFeature(String strFeature, String strVersion) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlImplementation.NameTableGet">
            <summary>设置 XmlImplementation.get_NameTable() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlLinkedNode">
            <summary>System.Xml.XmlLinkedNode 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.#ctor(System.Xml.XmlLinkedNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlLinkedNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.AllInstances.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.AllInstances.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlLinkedNode.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.Constructor">
            <summary>设置 XmlLinkedNode.XmlLinkedNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.ConstructorXmlDocument">
            <summary>设置 XmlLinkedNode.XmlLinkedNode(XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlLinkedNode.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNameTable">
            <summary>System.Xml.XmlNameTable 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNameTable.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNameTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNameTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNameTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNameTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNameTable.Constructor">
            <summary>设置 XmlNameTable.XmlNameTable() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNamedNodeMap">
            <summary>System.Xml.XmlNamedNodeMap 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamedNodeMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamedNodeMap.#ctor(System.Xml.XmlNamedNodeMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AddNodeForLoadXmlNodeXmlDocument">
            <summary>设置 XmlNamedNodeMap.AddNodeForLoad(XmlNode node, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AddNodeXmlNode">
            <summary>设置 XmlNamedNodeMap.AddNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.AddNodeForLoadXmlNodeXmlDocument">
            <summary>设置 XmlNamedNodeMap.AddNodeForLoad(XmlNode node, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.AddNodeXmlNode">
            <summary>设置 XmlNamedNodeMap.AddNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.CountGet">
            <summary>设置 XmlNamedNodeMap.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.FindNodeOffsetString">
            <summary>设置 XmlNamedNodeMap.FindNodeOffset(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.FindNodeOffsetStringString">
            <summary>设置 XmlNamedNodeMap.FindNodeOffset(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.GetEnumerator">
            <summary>设置 XmlNamedNodeMap.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.GetNamedItemString">
            <summary>设置 XmlNamedNodeMap.GetNamedItem(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.GetNamedItemStringString">
            <summary>设置 XmlNamedNodeMap.GetNamedItem(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.InsertNodeAtInt32XmlNode">
            <summary>设置 XmlNamedNodeMap.InsertNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.ItemInt32">
            <summary>设置 XmlNamedNodeMap.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.RemoveNamedItemString">
            <summary>设置 XmlNamedNodeMap.RemoveNamedItem(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.RemoveNamedItemStringString">
            <summary>设置 XmlNamedNodeMap.RemoveNamedItem(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.RemoveNodeAtInt32">
            <summary>设置 XmlNamedNodeMap.RemoveNodeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.ReplaceNodeAtInt32XmlNode">
            <summary>设置 XmlNamedNodeMap.ReplaceNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.AllInstances.SetNamedItemXmlNode">
            <summary>设置 XmlNamedNodeMap.SetNamedItem(XmlNode node) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamedNodeMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamedNodeMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamedNodeMap.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.ConstructorXmlNode">
            <summary>设置 XmlNamedNodeMap.XmlNamedNodeMap(XmlNode parent) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.CountGet">
            <summary>设置 XmlNamedNodeMap.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.FindNodeOffsetString">
            <summary>设置 XmlNamedNodeMap.FindNodeOffset(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.FindNodeOffsetStringString">
            <summary>设置 XmlNamedNodeMap.FindNodeOffset(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.GetEnumerator">
            <summary>设置 XmlNamedNodeMap.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.GetNamedItemString">
            <summary>设置 XmlNamedNodeMap.GetNamedItem(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.GetNamedItemStringString">
            <summary>设置 XmlNamedNodeMap.GetNamedItem(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.InsertNodeAtInt32XmlNode">
            <summary>设置 XmlNamedNodeMap.InsertNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.ItemInt32">
            <summary>设置 XmlNamedNodeMap.Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.RemoveNamedItemString">
            <summary>设置 XmlNamedNodeMap.RemoveNamedItem(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.RemoveNamedItemStringString">
            <summary>设置 XmlNamedNodeMap.RemoveNamedItem(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.RemoveNodeAtInt32">
            <summary>设置 XmlNamedNodeMap.RemoveNodeAt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.ReplaceNodeAtInt32XmlNode">
            <summary>设置 XmlNamedNodeMap.ReplaceNodeAt(Int32 i, XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamedNodeMap.SetNamedItemXmlNode">
            <summary>设置 XmlNamedNodeMap.SetNamedItem(XmlNode node) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNamespaceManager">
            <summary>System.Xml.XmlNamespaceManager 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.#ctor(System.Xml.XmlNamespaceManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AddNamespaceStringString">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.AddNamespaceStringString">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.DefaultNamespaceGet">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.GetEnumerator">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.GetNamespaceDeclarationInt32StringOutStringOut">
            <summary>设置 XmlNamespaceManager.GetNamespaceDeclaration(Int32 idx, String&amp; prefix, String&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.HasNamespaceString">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.LookupNamespaceString">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.LookupPrefixString">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.NameTableGet">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.PopScope">
            <summary>设置 XmlNamespaceManager.PopScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.PushScope">
            <summary>设置 XmlNamespaceManager.PushScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.AllInstances.RemoveNamespaceStringString">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNamespaceManager.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.Constructor">
            <summary>设置 XmlNamespaceManager.XmlNamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.ConstructorXmlNameTable">
            <summary>设置 XmlNamespaceManager.XmlNamespaceManager(XmlNameTable nameTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.DefaultNamespaceGet">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.EmptyResolverGet">
            <summary>设置 XmlNamespaceManager.get_EmptyResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.GetEnumerator">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.GetNamespaceDeclarationInt32StringOutStringOut">
            <summary>设置 XmlNamespaceManager.GetNamespaceDeclaration(Int32 idx, String&amp; prefix, String&amp; uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.HasNamespaceString">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.LookupNamespaceString">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.LookupPrefixString">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.NameTableGet">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.PopScope">
            <summary>设置 XmlNamespaceManager.PopScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.PushScope">
            <summary>设置 XmlNamespaceManager.PushScope() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNamespaceManager.RemoveNamespaceStringString">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNode">
            <summary>System.Xml.XmlNode 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.#ctor(System.Xml.XmlNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AfterEventXmlNodeChangedEventArgs">
            <summary>设置 XmlNode.AfterEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.AfterEventXmlNodeChangedEventArgs">
            <summary>设置 XmlNode.AfterEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.AncestorNodeXmlNode">
            <summary>设置 XmlNode.AncestorNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlNode.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.BeforeEventXmlNodeChangedEventArgs">
            <summary>设置 XmlNode.BeforeEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.Clone">
            <summary>设置 XmlNode.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.CopyChildrenXmlDocumentXmlNodeBoolean">
            <summary>设置 XmlNode.CopyChildren(XmlDocument doc, XmlNode container, Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.DocumentGet">
            <summary>设置 XmlNode.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.FindChildXmlNodeType">
            <summary>设置 XmlNode.FindChild(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetEnumerator">
            <summary>设置 XmlNode.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetEventArgsXmlNodeXmlNodeXmlNodeStringStringXmlNodeChangedAction">
            <summary>设置 XmlNode.GetEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, String oldValue, String newValue, XmlNodeChangedAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetNamespaceOfPrefixStrictString">
            <summary>设置 XmlNode.GetNamespaceOfPrefixStrict(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetPrefixOfNamespaceStrictString">
            <summary>设置 XmlNode.GetPrefixOfNamespaceStrict(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.GetXPAttributeStringString">
            <summary>设置 XmlNode.GetXPAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InnerTextGet">
            <summary>设置 XmlNode.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InnerTextSetString">
            <summary>设置 XmlNode.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.IsConnected">
            <summary>设置 XmlNode.IsConnected() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.IsContainerGet">
            <summary>设置 XmlNode.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.IsTextGet">
            <summary>设置 XmlNode.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlNode.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.LastNodeGet">
            <summary>设置 XmlNode.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlNode.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.NextSiblingGet">
            <summary>设置 XmlNode.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.Normalize">
            <summary>设置 XmlNode.Normalize() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.PreviousSiblingGet">
            <summary>设置 XmlNode.get_PreviousSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SelectNodesString">
            <summary>设置 XmlNode.SelectNodes(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SelectNodesStringXmlNamespaceManager">
            <summary>设置 XmlNode.SelectNodes(String xpath, XmlNamespaceManager nsmgr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SelectSingleNodeString">
            <summary>设置 XmlNode.SelectSingleNode(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SelectSingleNodeStringXmlNamespaceManager">
            <summary>设置 XmlNode.SelectSingleNode(String xpath, XmlNamespaceManager nsmgr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SetParentForLoadXmlNode">
            <summary>设置 XmlNode.SetParentForLoad(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SetParentXmlNode">
            <summary>设置 XmlNode.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 XmlNode.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.SystemICloneableClone">
            <summary>设置 XmlNode.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.XPLocalNameGet">
            <summary>设置 XmlNode.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlNode.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.XmlLangGet">
            <summary>设置 XmlNode.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AllInstances.XmlSpaceGet">
            <summary>设置 XmlNode.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AncestorNodeXmlNode">
            <summary>设置 XmlNode.AncestorNode(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AppendChildForLoadXmlNodeXmlDocument">
            <summary>设置 XmlNode.AppendChildForLoad(XmlNode newChild, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.BeforeEventXmlNodeChangedEventArgs">
            <summary>设置 XmlNode.BeforeEvent(XmlNodeChangedEventArgs args) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNode.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.CanInsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.CanInsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.CanInsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.CanInsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.Clone">
            <summary>设置 XmlNode.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.Constructor">
            <summary>设置 XmlNode.XmlNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ConstructorXmlDocument">
            <summary>设置 XmlNode.XmlNode(XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.CopyChildrenXmlDocumentXmlNodeBoolean">
            <summary>设置 XmlNode.CopyChildren(XmlDocument doc, XmlNode container, Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.DocumentGet">
            <summary>设置 XmlNode.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.FindChildXmlNodeType">
            <summary>设置 XmlNode.FindChild(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetEnumerator">
            <summary>设置 XmlNode.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetEventArgsXmlNodeXmlNodeXmlNodeStringStringXmlNodeChangedAction">
            <summary>设置 XmlNode.GetEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, String oldValue, String newValue, XmlNodeChangedAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetNamespaceOfPrefixStrictString">
            <summary>设置 XmlNode.GetNamespaceOfPrefixStrict(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetPrefixOfNamespaceStrictString">
            <summary>设置 XmlNode.GetPrefixOfNamespaceStrict(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.GetXPAttributeStringString">
            <summary>设置 XmlNode.GetXPAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.HasReadOnlyParentXmlNode">
            <summary>设置 XmlNode.HasReadOnlyParent(XmlNode n) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InnerTextGet">
            <summary>设置 XmlNode.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InnerTextSetString">
            <summary>设置 XmlNode.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.IsConnected">
            <summary>设置 XmlNode.IsConnected() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.IsContainerGet">
            <summary>设置 XmlNode.get_IsContainer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.IsTextGet">
            <summary>设置 XmlNode.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.IsValidChildTypeXmlNodeType">
            <summary>设置 XmlNode.IsValidChildType(XmlNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.LastNodeGet">
            <summary>设置 XmlNode.get_LastNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.LastNodeSetXmlLinkedNode">
            <summary>设置 XmlNode.set_LastNode(XmlLinkedNode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.NestTextNodesXmlNodeXmlNode">
            <summary>设置 XmlNode.NestTextNodes(XmlNode prevNode, XmlNode nextNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.NextSiblingGet">
            <summary>设置 XmlNode.get_NextSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.Normalize">
            <summary>设置 XmlNode.Normalize() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.PreviousSiblingGet">
            <summary>设置 XmlNode.get_PreviousSibling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SelectNodesString">
            <summary>设置 XmlNode.SelectNodes(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SelectNodesStringXmlNamespaceManager">
            <summary>设置 XmlNode.SelectNodes(String xpath, XmlNamespaceManager nsmgr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SelectSingleNodeString">
            <summary>设置 XmlNode.SelectSingleNode(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SelectSingleNodeStringXmlNamespaceManager">
            <summary>设置 XmlNode.SelectSingleNode(String xpath, XmlNamespaceManager nsmgr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SetParentForLoadXmlNode">
            <summary>设置 XmlNode.SetParentForLoad(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SetParentXmlNode">
            <summary>设置 XmlNode.SetParent(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SplitNameStringStringOutStringOut">
            <summary>设置 XmlNode.SplitName(String name, String&amp; prefix, String&amp; localName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 XmlNode.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.SystemICloneableClone">
            <summary>设置 XmlNode.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.UnnestTextNodesXmlNodeXmlNode">
            <summary>设置 XmlNode.UnnestTextNodes(XmlNode prevNode, XmlNode nextNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.XPLocalNameGet">
            <summary>设置 XmlNode.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.XPNodeTypeGet">
            <summary>设置 XmlNode.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.XmlLangGet">
            <summary>设置 XmlNode.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNode.XmlSpaceGet">
            <summary>设置 XmlNode.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeChangedEventArgs">
            <summary>System.Xml.XmlNodeChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.#ctor(System.Xml.XmlNodeChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.ActionGet">
            <summary>设置 XmlNodeChangedEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.ActionGet">
            <summary>设置 XmlNodeChangedEventArgs.get_Action() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.NewParentGet">
            <summary>设置 XmlNodeChangedEventArgs.get_NewParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.NewValueGet">
            <summary>设置 XmlNodeChangedEventArgs.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.NodeGet">
            <summary>设置 XmlNodeChangedEventArgs.get_Node() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.OldParentGet">
            <summary>设置 XmlNodeChangedEventArgs.get_OldParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.AllInstances.OldValueGet">
            <summary>设置 XmlNodeChangedEventArgs.get_OldValue() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.ConstructorXmlNodeXmlNodeXmlNodeStringStringXmlNodeChangedAction">
            <summary>设置 XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, String oldValue, String newValue, XmlNodeChangedAction action) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.NewParentGet">
            <summary>设置 XmlNodeChangedEventArgs.get_NewParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.NewValueGet">
            <summary>设置 XmlNodeChangedEventArgs.get_NewValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.NodeGet">
            <summary>设置 XmlNodeChangedEventArgs.get_Node() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.OldParentGet">
            <summary>设置 XmlNodeChangedEventArgs.get_OldParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeChangedEventArgs.OldValueGet">
            <summary>设置 XmlNodeChangedEventArgs.get_OldValue() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeList">
            <summary>System.Xml.XmlNodeList 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeList.#ctor(System.Xml.XmlNodeList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.AllInstances.ItemOfGetInt32">
            <summary>设置 XmlNodeList.get_ItemOf(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.AllInstances.PrivateDisposeNodeList">
            <summary>设置 XmlNodeList.PrivateDisposeNodeList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.AllInstances.SystemIDisposableDispose">
            <summary>设置 XmlNodeList.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeList.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.Constructor">
            <summary>设置 XmlNodeList.XmlNodeList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.ItemOfGetInt32">
            <summary>设置 XmlNodeList.get_ItemOf(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.PrivateDisposeNodeList">
            <summary>设置 XmlNodeList.PrivateDisposeNodeList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeList.SystemIDisposableDispose">
            <summary>设置 XmlNodeList.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeReader">
            <summary>System.Xml.XmlNodeReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.#ctor(System.Xml.XmlNodeReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNodeReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.AttributeCountGet">
            <summary>设置 XmlNodeReader.get_AttributeCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.BaseURIGet">
            <summary>设置 XmlNodeReader.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.CanReadBinaryContentGet">
            <summary>设置 XmlNodeReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.CanResolveEntityGet">
            <summary>设置 XmlNodeReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.Close">
            <summary>设置 XmlNodeReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.DepthGet">
            <summary>设置 XmlNodeReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.EOFGet">
            <summary>设置 XmlNodeReader.get_EOF() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.GetAttributeInt32">
            <summary>设置 XmlNodeReader.GetAttribute(Int32 attributeIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.GetAttributeString">
            <summary>设置 XmlNodeReader.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.GetAttributeStringString">
            <summary>设置 XmlNodeReader.GetAttribute(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.HasAttributesGet">
            <summary>设置 XmlNodeReader.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.HasValueGet">
            <summary>设置 XmlNodeReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.IsDefaultGet">
            <summary>设置 XmlNodeReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.IsEmptyElementGet">
            <summary>设置 XmlNodeReader.get_IsEmptyElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.IsInReadingStates">
            <summary>设置 XmlNodeReader.IsInReadingStates() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.LocalNameGet">
            <summary>设置 XmlNodeReader.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.LookupNamespaceString">
            <summary>设置 XmlNodeReader.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToAttributeInt32">
            <summary>设置 XmlNodeReader.MoveToAttribute(Int32 attributeIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToAttributeString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToAttributeStringString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToElement">
            <summary>设置 XmlNodeReader.MoveToElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToFirstAttribute">
            <summary>设置 XmlNodeReader.MoveToFirstAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.MoveToNextAttribute">
            <summary>设置 XmlNodeReader.MoveToNextAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.NameGet">
            <summary>设置 XmlNodeReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.NameTableGet">
            <summary>设置 XmlNodeReader.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.NamespaceURIGet">
            <summary>设置 XmlNodeReader.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.NodeTypeGet">
            <summary>设置 XmlNodeReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.PrefixGet">
            <summary>设置 XmlNodeReader.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.Read">
            <summary>设置 XmlNodeReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadAttributeValue">
            <summary>设置 XmlNodeReader.ReadAttributeValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadStateGet">
            <summary>设置 XmlNodeReader.get_ReadState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ReadString">
            <summary>设置 XmlNodeReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ResolveEntity">
            <summary>设置 XmlNodeReader.ResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.SchemaInfoGet">
            <summary>设置 XmlNodeReader.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.Skip">
            <summary>设置 XmlNodeReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.SystemXmlIXmlNamespaceResolverGetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.SystemXmlIXmlNamespaceResolverLookupNamespaceString">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.SystemXmlIXmlNamespaceResolverLookupPrefixString">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.ValueGet">
            <summary>设置 XmlNodeReader.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.XmlLangGet">
            <summary>设置 XmlNodeReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AllInstances.XmlSpaceGet">
            <summary>设置 XmlNodeReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.AttributeCountGet">
            <summary>设置 XmlNodeReader.get_AttributeCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.BaseURIGet">
            <summary>设置 XmlNodeReader.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNodeReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.CanReadBinaryContentGet">
            <summary>设置 XmlNodeReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.CanResolveEntityGet">
            <summary>设置 XmlNodeReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.Close">
            <summary>设置 XmlNodeReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ConstructorXmlNode">
            <summary>设置 XmlNodeReader.XmlNodeReader(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.DepthGet">
            <summary>设置 XmlNodeReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.EOFGet">
            <summary>设置 XmlNodeReader.get_EOF() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.GetAttributeInt32">
            <summary>设置 XmlNodeReader.GetAttribute(Int32 attributeIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.GetAttributeString">
            <summary>设置 XmlNodeReader.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.GetAttributeStringString">
            <summary>设置 XmlNodeReader.GetAttribute(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.HasAttributesGet">
            <summary>设置 XmlNodeReader.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.HasValueGet">
            <summary>设置 XmlNodeReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.IsDefaultGet">
            <summary>设置 XmlNodeReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.IsEmptyElementGet">
            <summary>设置 XmlNodeReader.get_IsEmptyElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.IsInReadingStates">
            <summary>设置 XmlNodeReader.IsInReadingStates() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.LocalNameGet">
            <summary>设置 XmlNodeReader.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.LookupNamespaceString">
            <summary>设置 XmlNodeReader.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToAttributeInt32">
            <summary>设置 XmlNodeReader.MoveToAttribute(Int32 attributeIndex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToAttributeString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToAttributeStringString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToElement">
            <summary>设置 XmlNodeReader.MoveToElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToFirstAttribute">
            <summary>设置 XmlNodeReader.MoveToFirstAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.MoveToNextAttribute">
            <summary>设置 XmlNodeReader.MoveToNextAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.NameGet">
            <summary>设置 XmlNodeReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.NameTableGet">
            <summary>设置 XmlNodeReader.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.NamespaceURIGet">
            <summary>设置 XmlNodeReader.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.NodeTypeGet">
            <summary>设置 XmlNodeReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.PrefixGet">
            <summary>设置 XmlNodeReader.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.Read">
            <summary>设置 XmlNodeReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadAttributeValue">
            <summary>设置 XmlNodeReader.ReadAttributeValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadStateGet">
            <summary>设置 XmlNodeReader.get_ReadState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ReadString">
            <summary>设置 XmlNodeReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ResolveEntity">
            <summary>设置 XmlNodeReader.ResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.SchemaInfoGet">
            <summary>设置 XmlNodeReader.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.Skip">
            <summary>设置 XmlNodeReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.SystemXmlIXmlNamespaceResolverGetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.SystemXmlIXmlNamespaceResolverLookupNamespaceString">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.SystemXmlIXmlNamespaceResolverLookupPrefixString">
            <summary>设置 XmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.ValueGet">
            <summary>设置 XmlNodeReader.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.XmlLangGet">
            <summary>设置 XmlNodeReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNodeReader.XmlSpaceGet">
            <summary>设置 XmlNodeReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNotation">
            <summary>System.Xml.XmlNotation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.#ctor(System.Xml.XmlNotation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlNotation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlNotation.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.InnerXmlGet">
            <summary>设置 XmlNotation.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.InnerXmlSetString">
            <summary>设置 XmlNotation.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.IsReadOnlyGet">
            <summary>设置 XmlNotation.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.LocalNameGet">
            <summary>设置 XmlNotation.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.NameGet">
            <summary>设置 XmlNotation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.NodeTypeGet">
            <summary>设置 XmlNotation.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.OuterXmlGet">
            <summary>设置 XmlNotation.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.PublicIdGet">
            <summary>设置 XmlNotation.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.SystemIdGet">
            <summary>设置 XmlNotation.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlNotation.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlNotation.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlNotation.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.CloneNodeBoolean">
            <summary>设置 XmlNotation.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.ConstructorStringStringStringXmlDocument">
            <summary>设置 XmlNotation.XmlNotation(String name, String publicId, String systemId, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.InnerXmlGet">
            <summary>设置 XmlNotation.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.InnerXmlSetString">
            <summary>设置 XmlNotation.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.IsReadOnlyGet">
            <summary>设置 XmlNotation.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.LocalNameGet">
            <summary>设置 XmlNotation.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.NameGet">
            <summary>设置 XmlNotation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.NodeTypeGet">
            <summary>设置 XmlNotation.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.OuterXmlGet">
            <summary>设置 XmlNotation.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.PublicIdGet">
            <summary>设置 XmlNotation.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.SystemIdGet">
            <summary>设置 XmlNotation.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.WriteContentToXmlWriter">
            <summary>设置 XmlNotation.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlNotation.WriteToXmlWriter">
            <summary>设置 XmlNotation.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlParserContext">
            <summary>System.Xml.XmlParserContext 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlParserContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlParserContext.#ctor(System.Xml.XmlParserContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlParserContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.BaseURIGet">
            <summary>设置 XmlParserContext.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.BaseURISetString">
            <summary>设置 XmlParserContext.set_BaseURI(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.DocTypeNameGet">
            <summary>设置 XmlParserContext.get_DocTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.DocTypeNameSetString">
            <summary>设置 XmlParserContext.set_DocTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.HasDtdInfoGet">
            <summary>设置 XmlParserContext.get_HasDtdInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.InternalSubsetGet">
            <summary>设置 XmlParserContext.get_InternalSubset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.InternalSubsetSetString">
            <summary>设置 XmlParserContext.set_InternalSubset(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.NameTableGet">
            <summary>设置 XmlParserContext.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.NameTableSetXmlNameTable">
            <summary>设置 XmlParserContext.set_NameTable(XmlNameTable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.NamespaceManagerGet">
            <summary>设置 XmlParserContext.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.NamespaceManagerSetXmlNamespaceManager">
            <summary>设置 XmlParserContext.set_NamespaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.PublicIdGet">
            <summary>设置 XmlParserContext.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.PublicIdSetString">
            <summary>设置 XmlParserContext.set_PublicId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.SystemIdGet">
            <summary>设置 XmlParserContext.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.SystemIdSetString">
            <summary>设置 XmlParserContext.set_SystemId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.XmlLangGet">
            <summary>设置 XmlParserContext.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.XmlLangSetString">
            <summary>设置 XmlParserContext.set_XmlLang(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.XmlSpaceGet">
            <summary>设置 XmlParserContext.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.AllInstances.XmlSpaceSetXmlSpace">
            <summary>设置 XmlParserContext.set_XmlSpace(XmlSpace value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.BaseURIGet">
            <summary>设置 XmlParserContext.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.BaseURISetString">
            <summary>设置 XmlParserContext.set_BaseURI(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlParserContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlParserContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.ConstructorXmlNameTableXmlNamespaceManagerStringStringStringStringStringStringXmlSpace">
            <summary>设置 XmlParserContext.XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, String docTypeName, String pubId, String sysId, String internalSubset, String baseURI, String xmlLang, XmlSpace xmlSpace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.ConstructorXmlNameTableXmlNamespaceManagerStringXmlSpace">
            <summary>设置 XmlParserContext.XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, String xmlLang, XmlSpace xmlSpace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.DocTypeNameGet">
            <summary>设置 XmlParserContext.get_DocTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.DocTypeNameSetString">
            <summary>设置 XmlParserContext.set_DocTypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.HasDtdInfoGet">
            <summary>设置 XmlParserContext.get_HasDtdInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.InternalSubsetGet">
            <summary>设置 XmlParserContext.get_InternalSubset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.InternalSubsetSetString">
            <summary>设置 XmlParserContext.set_InternalSubset(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.NameTableGet">
            <summary>设置 XmlParserContext.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.NameTableSetXmlNameTable">
            <summary>设置 XmlParserContext.set_NameTable(XmlNameTable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.NamespaceManagerGet">
            <summary>设置 XmlParserContext.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.NamespaceManagerSetXmlNamespaceManager">
            <summary>设置 XmlParserContext.set_NamespaceManager(XmlNamespaceManager value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.PublicIdGet">
            <summary>设置 XmlParserContext.get_PublicId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.PublicIdSetString">
            <summary>设置 XmlParserContext.set_PublicId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.SystemIdGet">
            <summary>设置 XmlParserContext.get_SystemId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.SystemIdSetString">
            <summary>设置 XmlParserContext.set_SystemId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.XmlLangGet">
            <summary>设置 XmlParserContext.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.XmlLangSetString">
            <summary>设置 XmlParserContext.set_XmlLang(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.XmlSpaceGet">
            <summary>设置 XmlParserContext.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlParserContext.XmlSpaceSetXmlSpace">
            <summary>设置 XmlParserContext.set_XmlSpace(XmlSpace value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlProcessingInstruction">
            <summary>System.Xml.XmlProcessingInstruction 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.#ctor(System.Xml.XmlProcessingInstruction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlProcessingInstruction.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.DataGet">
            <summary>设置 XmlProcessingInstruction.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.DataSetString">
            <summary>设置 XmlProcessingInstruction.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.InnerTextGet">
            <summary>设置 XmlProcessingInstruction.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.InnerTextSetString">
            <summary>设置 XmlProcessingInstruction.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.LocalNameGet">
            <summary>设置 XmlProcessingInstruction.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.NameGet">
            <summary>设置 XmlProcessingInstruction.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.NodeTypeGet">
            <summary>设置 XmlProcessingInstruction.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.TargetGet">
            <summary>设置 XmlProcessingInstruction.get_Target() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.ValueGet">
            <summary>设置 XmlProcessingInstruction.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.ValueSetString">
            <summary>设置 XmlProcessingInstruction.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.XPLocalNameGet">
            <summary>设置 XmlProcessingInstruction.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlProcessingInstruction.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlProcessingInstruction.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.CloneNodeBoolean">
            <summary>设置 XmlProcessingInstruction.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.ConstructorStringStringXmlDocument">
            <summary>设置 XmlProcessingInstruction.XmlProcessingInstruction(String target, String data, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.DataGet">
            <summary>设置 XmlProcessingInstruction.get_Data() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.DataSetString">
            <summary>设置 XmlProcessingInstruction.set_Data(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.InnerTextGet">
            <summary>设置 XmlProcessingInstruction.get_InnerText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.InnerTextSetString">
            <summary>设置 XmlProcessingInstruction.set_InnerText(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.LocalNameGet">
            <summary>设置 XmlProcessingInstruction.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.NameGet">
            <summary>设置 XmlProcessingInstruction.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.NodeTypeGet">
            <summary>设置 XmlProcessingInstruction.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.TargetGet">
            <summary>设置 XmlProcessingInstruction.get_Target() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.ValueGet">
            <summary>设置 XmlProcessingInstruction.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.ValueSetString">
            <summary>设置 XmlProcessingInstruction.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.WriteContentToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.WriteToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.XPLocalNameGet">
            <summary>设置 XmlProcessingInstruction.get_XPLocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlProcessingInstruction.XPNodeTypeGet">
            <summary>设置 XmlProcessingInstruction.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlQualifiedName">
            <summary>System.Xml.XmlQualifiedName 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlQualifiedName.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlQualifiedName.#ctor(System.Xml.XmlQualifiedName)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.AtomizeXmlNameTable">
            <summary>设置 XmlQualifiedName.Atomize(XmlNameTable nameTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.Clone">
            <summary>设置 XmlQualifiedName.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.EqualsObject">
            <summary>设置 XmlQualifiedName.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.GetHashCode01">
            <summary>设置 XmlQualifiedName.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.InitStringString">
            <summary>设置 XmlQualifiedName.Init(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.IsEmptyGet">
            <summary>设置 XmlQualifiedName.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.NameGet">
            <summary>设置 XmlQualifiedName.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.NamespaceGet">
            <summary>设置 XmlQualifiedName.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.SetNamespaceString">
            <summary>设置 XmlQualifiedName.SetNamespace(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.ToString01">
            <summary>设置 XmlQualifiedName.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AllInstances.Verify">
            <summary>设置 XmlQualifiedName.Verify() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.AtomizeXmlNameTable">
            <summary>设置 XmlQualifiedName.Atomize(XmlNameTable nameTable) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlQualifiedName.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlQualifiedName.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.Clone">
            <summary>设置 XmlQualifiedName.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.CompareXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlQualifiedName.Compare(XmlQualifiedName a, XmlQualifiedName b) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.Constructor">
            <summary>设置 XmlQualifiedName.XmlQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.ConstructorString">
            <summary>设置 XmlQualifiedName.XmlQualifiedName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.ConstructorStringString">
            <summary>设置 XmlQualifiedName.XmlQualifiedName(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.EqualityOpXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlQualifiedName.op_Equality(XmlQualifiedName a, XmlQualifiedName b) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.EqualsObject">
            <summary>设置 XmlQualifiedName.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.GetHashCode">
            <summary>设置 XmlQualifiedName.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.InequalityOpXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlQualifiedName.op_Inequality(XmlQualifiedName a, XmlQualifiedName b) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.InitStringString">
            <summary>设置 XmlQualifiedName.Init(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.IsEmptyGet">
            <summary>设置 XmlQualifiedName.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.NameGet">
            <summary>设置 XmlQualifiedName.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.NamespaceGet">
            <summary>设置 XmlQualifiedName.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.ParseStringIXmlNamespaceResolverStringOut">
            <summary>设置 XmlQualifiedName.Parse(String s, IXmlNamespaceResolver nsmgr, String&amp; prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.SetNamespaceString">
            <summary>设置 XmlQualifiedName.SetNamespace(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.StaticConstructor">
            <summary>设置 XmlQualifiedName.XmlQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.ToString">
            <summary>设置 XmlQualifiedName.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.ToStringStringString">
            <summary>设置 XmlQualifiedName.ToString(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlQualifiedName.Verify">
            <summary>设置 XmlQualifiedName.Verify() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlReader">
            <summary>System.Xml.XmlReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReader.#ctor(System.Xml.XmlReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CanReadBinaryContentGet">
            <summary>设置 XmlReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CanReadContentAs">
            <summary>设置 XmlReader.CanReadContentAs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CanReadValueChunkGet">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CanResolveEntityGet">
            <summary>设置 XmlReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CheckElementStringString">
            <summary>设置 XmlReader.CheckElement(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.Close">
            <summary>设置 XmlReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CreateReadContentAsExceptionString">
            <summary>设置 XmlReader.CreateReadContentAsException(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.CreateReadElementContentAsExceptionString">
            <summary>设置 XmlReader.CreateReadElementContentAsException(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.Dispose">
            <summary>设置 XmlReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.DisposeBoolean">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.GetValueAsync">
            <summary>设置 XmlReader.GetValueAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.HasAttributesGet">
            <summary>设置 XmlReader.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.HasValueGet">
            <summary>设置 XmlReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.InternalReadContentAsString">
            <summary>设置 XmlReader.InternalReadContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.InternalReadContentAsStringAsync">
            <summary>设置 XmlReader.InternalReadContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.IsDefaultGet">
            <summary>设置 XmlReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.IsDefaultInternalGet">
            <summary>设置 XmlReader.get_IsDefaultInternal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.IsStartElement">
            <summary>设置 XmlReader.IsStartElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.IsStartElementString">
            <summary>设置 XmlReader.IsStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.IsStartElementStringString">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ItemGetInt32">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ItemGetString">
            <summary>设置 XmlReader.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ItemGetStringString">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.MoveToAttributeInt32">
            <summary>设置 XmlReader.MoveToAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.MoveToContent">
            <summary>设置 XmlReader.MoveToContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.MoveToContentAsync">
            <summary>设置 XmlReader.MoveToContentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.NameGet">
            <summary>设置 XmlReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.NamespaceManagerGet">
            <summary>设置 XmlReader.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.QuoteCharGet">
            <summary>设置 XmlReader.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadAsync">
            <summary>设置 XmlReader.ReadAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsBoolean">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsDateTime">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsDateTimeOffset">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsDecimal">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsDouble">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsFloat">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsInt">
            <summary>设置 XmlReader.ReadContentAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsLong">
            <summary>设置 XmlReader.ReadContentAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsObject">
            <summary>设置 XmlReader.ReadContentAsObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsObjectAsync">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsString">
            <summary>设置 XmlReader.ReadContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsStringAsync">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBoolean">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsBooleanStringString">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDateTime">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDateTimeStringString">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDecimal">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDecimalStringString">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDouble">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsDoubleStringString">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsFloat">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsFloatStringString">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsInt">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsIntStringString">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsLong">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsLongStringString">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsObject">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsObjectAsync">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsObjectStringString">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsString">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsStringAsync">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsStringStringString">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementString">
            <summary>设置 XmlReader.ReadElementString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementStringString">
            <summary>设置 XmlReader.ReadElementString(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadElementStringStringString">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadEndElement">
            <summary>设置 XmlReader.ReadEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadInnerXml">
            <summary>设置 XmlReader.ReadInnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadInnerXmlAsync">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadOuterXml">
            <summary>设置 XmlReader.ReadOuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadOuterXmlAsync">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadStartElement">
            <summary>设置 XmlReader.ReadStartElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadStartElementString">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadStartElementStringString">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadString">
            <summary>设置 XmlReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadSubtree">
            <summary>设置 XmlReader.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToDescendantString">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToDescendantStringString">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToFollowingString">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToFollowingStringString">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToNextSiblingString">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadToNextSiblingStringString">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ReadValueChunkCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.SchemaInfoGet">
            <summary>设置 XmlReader.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.SettingsGet">
            <summary>设置 XmlReader.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.Skip">
            <summary>设置 XmlReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.SkipAsync">
            <summary>设置 XmlReader.SkipAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.ValueTypeGet">
            <summary>设置 XmlReader.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.XmlLangGet">
            <summary>设置 XmlReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.AllInstances.XmlSpaceGet">
            <summary>设置 XmlReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CalcBufferSizeStream">
            <summary>设置 XmlReader.CalcBufferSize(Stream input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CanReadBinaryContentGet">
            <summary>设置 XmlReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CanReadContentAs">
            <summary>设置 XmlReader.CanReadContentAs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CanReadContentAsXmlNodeType">
            <summary>设置 XmlReader.CanReadContentAs(XmlNodeType nodeType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CanReadValueChunkGet">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CanResolveEntityGet">
            <summary>设置 XmlReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CheckElementStringString">
            <summary>设置 XmlReader.CheckElement(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.Close">
            <summary>设置 XmlReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.Constructor">
            <summary>设置 XmlReader.XmlReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateReadContentAsExceptionString">
            <summary>设置 XmlReader.CreateReadContentAsException(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateReadContentAsExceptionStringXmlNodeTypeIXmlLineInfo">
            <summary>设置 XmlReader.CreateReadContentAsException(String methodName, XmlNodeType nodeType, IXmlLineInfo lineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateReadElementContentAsExceptionString">
            <summary>设置 XmlReader.CreateReadElementContentAsException(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateReadElementContentAsExceptionStringXmlNodeTypeIXmlLineInfo">
            <summary>设置 XmlReader.CreateReadElementContentAsException(String methodName, XmlNodeType nodeType, IXmlLineInfo lineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateSqlReaderStreamXmlReaderSettingsXmlParserContext">
            <summary>设置 XmlReader.CreateSqlReader(Stream input, XmlReaderSettings settings, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStream">
            <summary>设置 XmlReader.Create(Stream input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStreamXmlReaderSettings">
            <summary>设置 XmlReader.Create(Stream input, XmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStreamXmlReaderSettingsString">
            <summary>设置 XmlReader.Create(Stream input, XmlReaderSettings settings, String baseUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStreamXmlReaderSettingsXmlParserContext">
            <summary>设置 XmlReader.Create(Stream input, XmlReaderSettings settings, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateString">
            <summary>设置 XmlReader.Create(String inputUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStringXmlReaderSettings">
            <summary>设置 XmlReader.Create(String inputUri, XmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateStringXmlReaderSettingsXmlParserContext">
            <summary>设置 XmlReader.Create(String inputUri, XmlReaderSettings settings, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateTextReader">
            <summary>设置 XmlReader.Create(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateTextReaderXmlReaderSettings">
            <summary>设置 XmlReader.Create(TextReader input, XmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateTextReaderXmlReaderSettingsString">
            <summary>设置 XmlReader.Create(TextReader input, XmlReaderSettings settings, String baseUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateTextReaderXmlReaderSettingsXmlParserContext">
            <summary>设置 XmlReader.Create(TextReader input, XmlReaderSettings settings, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.CreateXmlReaderXmlReaderSettings">
            <summary>设置 XmlReader.Create(XmlReader reader, XmlReaderSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.Dispose">
            <summary>设置 XmlReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.DisposeBoolean">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.GetV1ConformanceLevelXmlReader">
            <summary>设置 XmlReader.GetV1ConformanceLevel(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.GetValueAsync">
            <summary>设置 XmlReader.GetValueAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.HasAttributesGet">
            <summary>设置 XmlReader.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.HasValueGet">
            <summary>设置 XmlReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.HasValueInternalXmlNodeType">
            <summary>设置 XmlReader.HasValueInternal(XmlNodeType nodeType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.InternalReadContentAsString">
            <summary>设置 XmlReader.InternalReadContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.InternalReadContentAsStringAsync">
            <summary>设置 XmlReader.InternalReadContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsDefaultGet">
            <summary>设置 XmlReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsDefaultInternalGet">
            <summary>设置 XmlReader.get_IsDefaultInternal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsNameString">
            <summary>设置 XmlReader.IsName(String str) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsNameTokenString">
            <summary>设置 XmlReader.IsNameToken(String str) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsStartElement">
            <summary>设置 XmlReader.IsStartElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsStartElementString">
            <summary>设置 XmlReader.IsStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsStartElementStringString">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.IsTextualNodeXmlNodeType">
            <summary>设置 XmlReader.IsTextualNode(XmlNodeType nodeType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ItemGetInt32">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ItemGetString">
            <summary>设置 XmlReader.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ItemGetStringString">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.MoveToAttributeInt32">
            <summary>设置 XmlReader.MoveToAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.MoveToContent">
            <summary>设置 XmlReader.MoveToContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.MoveToContentAsync">
            <summary>设置 XmlReader.MoveToContentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.NameGet">
            <summary>设置 XmlReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.NamespaceManagerGet">
            <summary>设置 XmlReader.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.QuoteCharGet">
            <summary>设置 XmlReader.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadAsync">
            <summary>设置 XmlReader.ReadAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsBoolean">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsDateTime">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsDateTimeOffset">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsDecimal">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsDouble">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsFloat">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsInt">
            <summary>设置 XmlReader.ReadContentAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsLong">
            <summary>设置 XmlReader.ReadContentAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsObject">
            <summary>设置 XmlReader.ReadContentAsObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsObjectAsync">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsString">
            <summary>设置 XmlReader.ReadContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsStringAsync">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBoolean">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsBooleanStringString">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDateTime">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDateTimeStringString">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDecimal">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDecimalStringString">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDouble">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsDoubleStringString">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsFloat">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsFloatStringString">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsInt">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsIntStringString">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsLong">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsLongStringString">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsObject">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsObjectAsync">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsObjectStringString">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsString">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsStringAsync">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsStringStringString">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementString">
            <summary>设置 XmlReader.ReadElementString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementStringString">
            <summary>设置 XmlReader.ReadElementString(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadElementStringStringString">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadEndElement">
            <summary>设置 XmlReader.ReadEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadInnerXml">
            <summary>设置 XmlReader.ReadInnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadInnerXmlAsync">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadOuterXml">
            <summary>设置 XmlReader.ReadOuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadOuterXmlAsync">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadStartElement">
            <summary>设置 XmlReader.ReadStartElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadStartElementString">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadStartElementStringString">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadString">
            <summary>设置 XmlReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadSubtree">
            <summary>设置 XmlReader.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToDescendantString">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToDescendantStringString">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToFollowingString">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToFollowingStringString">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToNextSiblingString">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadToNextSiblingStringString">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ReadValueChunkCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.SchemaInfoGet">
            <summary>设置 XmlReader.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.SettingsGet">
            <summary>设置 XmlReader.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.Skip">
            <summary>设置 XmlReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.SkipAsync">
            <summary>设置 XmlReader.SkipAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.StaticConstructor">
            <summary>设置 XmlReader.XmlReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.ValueTypeGet">
            <summary>设置 XmlReader.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.XmlLangGet">
            <summary>设置 XmlReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReader.XmlSpaceGet">
            <summary>设置 XmlReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlReaderSettings">
            <summary>System.Xml.XmlReaderSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReaderSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReaderSettings.#ctor(System.Xml.XmlReaderSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AddConformanceWrapperXmlReader">
            <summary>设置 XmlReaderSettings.AddConformanceWrapper(XmlReader baseReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AddValidationXmlReader">
            <summary>设置 XmlReaderSettings.AddValidation(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.AddConformanceWrapperXmlReader">
            <summary>设置 XmlReaderSettings.AddConformanceWrapper(XmlReader baseReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.AddValidationXmlReader">
            <summary>设置 XmlReaderSettings.AddValidation(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.AsyncGet">
            <summary>设置 XmlReaderSettings.get_Async() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.AsyncSetBoolean">
            <summary>设置 XmlReaderSettings.set_Async(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CheckCharactersGet">
            <summary>设置 XmlReaderSettings.get_CheckCharacters() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CheckCharactersSetBoolean">
            <summary>设置 XmlReaderSettings.set_CheckCharacters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.Clone">
            <summary>设置 XmlReaderSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CloseInputGet">
            <summary>设置 XmlReaderSettings.get_CloseInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CloseInputSetBoolean">
            <summary>设置 XmlReaderSettings.set_CloseInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ConformanceLevelGet">
            <summary>设置 XmlReaderSettings.get_ConformanceLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ConformanceLevelSetConformanceLevel">
            <summary>设置 XmlReaderSettings.set_ConformanceLevel(ConformanceLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CreateReaderStreamUriStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CreateReaderStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(String inputUri, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CreateReaderTextReaderStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(TextReader input, String baseUriString, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.CreateReaderXmlReader">
            <summary>设置 XmlReaderSettings.CreateReader(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.DtdProcessingGet">
            <summary>设置 XmlReaderSettings.get_DtdProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.DtdProcessingSetDtdProcessing">
            <summary>设置 XmlReaderSettings.set_DtdProcessing(DtdProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.GetEventHandler">
            <summary>设置 XmlReaderSettings.GetEventHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.GetXmlResolver">
            <summary>设置 XmlReaderSettings.GetXmlResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.GetXmlResolver_CheckConfig">
            <summary>设置 XmlReaderSettings.GetXmlResolver_CheckConfig() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreCommentsGet">
            <summary>设置 XmlReaderSettings.get_IgnoreComments() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreCommentsSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreProcessingInstructionsGet">
            <summary>设置 XmlReaderSettings.get_IgnoreProcessingInstructions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreProcessingInstructionsSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreProcessingInstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreWhitespaceGet">
            <summary>设置 XmlReaderSettings.get_IgnoreWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IgnoreWhitespaceSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IsXmlResolverSetGet">
            <summary>设置 XmlReaderSettings.get_IsXmlResolverSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.IsXmlResolverSetSetBoolean">
            <summary>设置 XmlReaderSettings.set_IsXmlResolverSet(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.LineNumberOffsetGet">
            <summary>设置 XmlReaderSettings.get_LineNumberOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.LineNumberOffsetSetInt32">
            <summary>设置 XmlReaderSettings.set_LineNumberOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.LinePositionOffsetGet">
            <summary>设置 XmlReaderSettings.get_LinePositionOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.LinePositionOffsetSetInt32">
            <summary>设置 XmlReaderSettings.set_LinePositionOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.MaxCharactersFromEntitiesGet">
            <summary>设置 XmlReaderSettings.get_MaxCharactersFromEntities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.MaxCharactersFromEntitiesSetInt64">
            <summary>设置 XmlReaderSettings.set_MaxCharactersFromEntities(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.MaxCharactersInDocumentGet">
            <summary>设置 XmlReaderSettings.get_MaxCharactersInDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.MaxCharactersInDocumentSetInt64">
            <summary>设置 XmlReaderSettings.set_MaxCharactersInDocument(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.NameTableGet">
            <summary>设置 XmlReaderSettings.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.NameTableSetXmlNameTable">
            <summary>设置 XmlReaderSettings.set_NameTable(XmlNameTable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ProhibitDtdGet">
            <summary>设置 XmlReaderSettings.get_ProhibitDtd() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ProhibitDtdSetBoolean">
            <summary>设置 XmlReaderSettings.set_ProhibitDtd(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ReadOnlyGet">
            <summary>设置 XmlReaderSettings.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ReadOnlySetBoolean">
            <summary>设置 XmlReaderSettings.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.Reset">
            <summary>设置 XmlReaderSettings.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.SchemasGet">
            <summary>设置 XmlReaderSettings.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.SchemasSetXmlSchemaSet">
            <summary>设置 XmlReaderSettings.set_Schemas(XmlSchemaSet value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlReaderSettings.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlReaderSettings.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationFlagsGet">
            <summary>设置 XmlReaderSettings.get_ValidationFlags() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationFlagsSetXmlSchemaValidationFlags">
            <summary>设置 XmlReaderSettings.set_ValidationFlags(XmlSchemaValidationFlags value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationTypeGet">
            <summary>设置 XmlReaderSettings.get_ValidationType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.ValidationTypeSetValidationType">
            <summary>设置 XmlReaderSettings.set_ValidationType(ValidationType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AllInstances.XmlResolverSetXmlResolver">
            <summary>设置 XmlReaderSettings.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AsyncGet">
            <summary>设置 XmlReaderSettings.get_Async() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.AsyncSetBoolean">
            <summary>设置 XmlReaderSettings.set_Async(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReaderSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlReaderSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CheckCharactersGet">
            <summary>设置 XmlReaderSettings.get_CheckCharacters() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CheckCharactersSetBoolean">
            <summary>设置 XmlReaderSettings.set_CheckCharacters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.Clone">
            <summary>设置 XmlReaderSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CloseInputGet">
            <summary>设置 XmlReaderSettings.get_CloseInput() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CloseInputSetBoolean">
            <summary>设置 XmlReaderSettings.set_CloseInput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ConformanceLevelGet">
            <summary>设置 XmlReaderSettings.get_ConformanceLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ConformanceLevelSetConformanceLevel">
            <summary>设置 XmlReaderSettings.set_ConformanceLevel(ConformanceLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.Constructor">
            <summary>设置 XmlReaderSettings.XmlReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ConstructorXmlResolver">
            <summary>设置 XmlReaderSettings.XmlReaderSettings(XmlResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CreateReaderStreamUriStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CreateReaderStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(String inputUri, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CreateReaderTextReaderStringXmlParserContext">
            <summary>设置 XmlReaderSettings.CreateReader(TextReader input, String baseUriString, XmlParserContext inputContext) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.CreateReaderXmlReader">
            <summary>设置 XmlReaderSettings.CreateReader(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.DtdProcessingGet">
            <summary>设置 XmlReaderSettings.get_DtdProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.DtdProcessingSetDtdProcessing">
            <summary>设置 XmlReaderSettings.set_DtdProcessing(DtdProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.EnableLegacyXmlSettings">
            <summary>设置 XmlReaderSettings.EnableLegacyXmlSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.GetEventHandler">
            <summary>设置 XmlReaderSettings.GetEventHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.GetXmlResolver">
            <summary>设置 XmlReaderSettings.GetXmlResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.GetXmlResolver_CheckConfig">
            <summary>设置 XmlReaderSettings.GetXmlResolver_CheckConfig() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreCommentsGet">
            <summary>设置 XmlReaderSettings.get_IgnoreComments() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreCommentsSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreComments(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreProcessingInstructionsGet">
            <summary>设置 XmlReaderSettings.get_IgnoreProcessingInstructions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreProcessingInstructionsSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreProcessingInstructions(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreWhitespaceGet">
            <summary>设置 XmlReaderSettings.get_IgnoreWhitespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IgnoreWhitespaceSetBoolean">
            <summary>设置 XmlReaderSettings.set_IgnoreWhitespace(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IsXmlResolverSetGet">
            <summary>设置 XmlReaderSettings.get_IsXmlResolverSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.IsXmlResolverSetSetBoolean">
            <summary>设置 XmlReaderSettings.set_IsXmlResolverSet(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.LineNumberOffsetGet">
            <summary>设置 XmlReaderSettings.get_LineNumberOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.LineNumberOffsetSetInt32">
            <summary>设置 XmlReaderSettings.set_LineNumberOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.LinePositionOffsetGet">
            <summary>设置 XmlReaderSettings.get_LinePositionOffset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.LinePositionOffsetSetInt32">
            <summary>设置 XmlReaderSettings.set_LinePositionOffset(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.MaxCharactersFromEntitiesGet">
            <summary>设置 XmlReaderSettings.get_MaxCharactersFromEntities() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.MaxCharactersFromEntitiesSetInt64">
            <summary>设置 XmlReaderSettings.set_MaxCharactersFromEntities(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.MaxCharactersInDocumentGet">
            <summary>设置 XmlReaderSettings.get_MaxCharactersInDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.MaxCharactersInDocumentSetInt64">
            <summary>设置 XmlReaderSettings.set_MaxCharactersInDocument(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.NameTableGet">
            <summary>设置 XmlReaderSettings.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.NameTableSetXmlNameTable">
            <summary>设置 XmlReaderSettings.set_NameTable(XmlNameTable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ProhibitDtdGet">
            <summary>设置 XmlReaderSettings.get_ProhibitDtd() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ProhibitDtdSetBoolean">
            <summary>设置 XmlReaderSettings.set_ProhibitDtd(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ReadOnlyGet">
            <summary>设置 XmlReaderSettings.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ReadOnlySetBoolean">
            <summary>设置 XmlReaderSettings.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.Reset">
            <summary>设置 XmlReaderSettings.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.SchemasGet">
            <summary>设置 XmlReaderSettings.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.SchemasSetXmlSchemaSet">
            <summary>设置 XmlReaderSettings.set_Schemas(XmlSchemaSet value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.StaticConstructor">
            <summary>设置 XmlReaderSettings.XmlReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlReaderSettings.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlReaderSettings.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationFlagsGet">
            <summary>设置 XmlReaderSettings.get_ValidationFlags() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationFlagsSetXmlSchemaValidationFlags">
            <summary>设置 XmlReaderSettings.set_ValidationFlags(XmlSchemaValidationFlags value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationTypeGet">
            <summary>设置 XmlReaderSettings.get_ValidationType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.ValidationTypeSetValidationType">
            <summary>设置 XmlReaderSettings.set_ValidationType(ValidationType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlReaderSettings.XmlResolverSetXmlResolver">
            <summary>设置 XmlReaderSettings.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlResolver">
            <summary>System.Xml.XmlResolver 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlResolver.#ctor(System.Xml.XmlResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.AllInstances.CredentialsSetICredentials">
            <summary>设置 XmlResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.AllInstances.GetEntityAsyncUriStringType">
            <summary>设置 XmlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.AllInstances.ResolveUriUriString">
            <summary>设置 XmlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.AllInstances.SupportsTypeUriType">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.Constructor">
            <summary>设置 XmlResolver.XmlResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.CredentialsSetICredentials">
            <summary>设置 XmlResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.ResolveUriUriString">
            <summary>设置 XmlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlResolver.SupportsTypeUriType">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlSecureResolver">
            <summary>System.Xml.XmlSecureResolver 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSecureResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSecureResolver.#ctor(System.Xml.XmlSecureResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlSecureResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.AllInstances.CredentialsSetICredentials">
            <summary>设置 XmlSecureResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.AllInstances.GetEntityAsyncUriStringType">
            <summary>设置 XmlSecureResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.AllInstances.GetEntityUriStringType">
            <summary>设置 XmlSecureResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.AllInstances.ResolveUriUriString">
            <summary>设置 XmlSecureResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSecureResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSecureResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.ConstructorXmlResolverEvidence">
            <summary>设置 XmlSecureResolver.XmlSecureResolver(XmlResolver resolver, Evidence evidence) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.ConstructorXmlResolverPermissionSet">
            <summary>设置 XmlSecureResolver.XmlSecureResolver(XmlResolver resolver, PermissionSet permissionSet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.ConstructorXmlResolverString">
            <summary>设置 XmlSecureResolver.XmlSecureResolver(XmlResolver resolver, String securityUrl) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.CreateEvidenceForUrlString">
            <summary>设置 XmlSecureResolver.CreateEvidenceForUrl(String securityUrl) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.CredentialsSetICredentials">
            <summary>设置 XmlSecureResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlSecureResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.GetEntityUriStringType">
            <summary>设置 XmlSecureResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSecureResolver.ResolveUriUriString">
            <summary>设置 XmlSecureResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlSignificantWhitespace">
            <summary>System.Xml.XmlSignificantWhitespace 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.#ctor(System.Xml.XmlSignificantWhitespace)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlSignificantWhitespace.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.IsTextGet">
            <summary>设置 XmlSignificantWhitespace.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.LocalNameGet">
            <summary>设置 XmlSignificantWhitespace.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.NameGet">
            <summary>设置 XmlSignificantWhitespace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.NodeTypeGet">
            <summary>设置 XmlSignificantWhitespace.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.ParentNodeGet">
            <summary>设置 XmlSignificantWhitespace.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.PreviousTextGet">
            <summary>设置 XmlSignificantWhitespace.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.ValueGet">
            <summary>设置 XmlSignificantWhitespace.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.ValueSetString">
            <summary>设置 XmlSignificantWhitespace.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlSignificantWhitespace.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlSignificantWhitespace.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.CloneNodeBoolean">
            <summary>设置 XmlSignificantWhitespace.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.ConstructorStringXmlDocument">
            <summary>设置 XmlSignificantWhitespace.XmlSignificantWhitespace(String strData, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.IsTextGet">
            <summary>设置 XmlSignificantWhitespace.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.LocalNameGet">
            <summary>设置 XmlSignificantWhitespace.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.NameGet">
            <summary>设置 XmlSignificantWhitespace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.NodeTypeGet">
            <summary>设置 XmlSignificantWhitespace.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.ParentNodeGet">
            <summary>设置 XmlSignificantWhitespace.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.PreviousTextGet">
            <summary>设置 XmlSignificantWhitespace.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.ValueGet">
            <summary>设置 XmlSignificantWhitespace.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.ValueSetString">
            <summary>设置 XmlSignificantWhitespace.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.WriteContentToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.WriteToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlSignificantWhitespace.XPNodeTypeGet">
            <summary>设置 XmlSignificantWhitespace.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlText">
            <summary>System.Xml.XmlText 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.#ctor(System.Xml.XmlText)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlText.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlText.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.IsTextGet">
            <summary>设置 XmlText.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.LocalNameGet">
            <summary>设置 XmlText.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.NameGet">
            <summary>设置 XmlText.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.NodeTypeGet">
            <summary>设置 XmlText.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.ParentNodeGet">
            <summary>设置 XmlText.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.PreviousTextGet">
            <summary>设置 XmlText.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.SplitTextInt32">
            <summary>设置 XmlText.SplitText(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.ValueGet">
            <summary>设置 XmlText.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.ValueSetString">
            <summary>设置 XmlText.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlText.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlText.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlText.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlText.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.CloneNodeBoolean">
            <summary>设置 XmlText.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.ConstructorString">
            <summary>设置 XmlText.XmlText(String strData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.ConstructorStringXmlDocument">
            <summary>设置 XmlText.XmlText(String strData, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.IsTextGet">
            <summary>设置 XmlText.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.LocalNameGet">
            <summary>设置 XmlText.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.NameGet">
            <summary>设置 XmlText.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.NodeTypeGet">
            <summary>设置 XmlText.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.ParentNodeGet">
            <summary>设置 XmlText.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.PreviousTextGet">
            <summary>设置 XmlText.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.SplitTextInt32">
            <summary>设置 XmlText.SplitText(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.ValueGet">
            <summary>设置 XmlText.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.ValueSetString">
            <summary>设置 XmlText.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.WriteContentToXmlWriter">
            <summary>设置 XmlText.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.WriteToXmlWriter">
            <summary>设置 XmlText.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlText.XPNodeTypeGet">
            <summary>设置 XmlText.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlTextReader">
            <summary>System.Xml.XmlTextReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.#ctor(System.Xml.XmlTextReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlTextReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.AttributeCountGet">
            <summary>设置 XmlTextReader.get_AttributeCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.BaseURIGet">
            <summary>设置 XmlTextReader.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.CanReadBinaryContentGet">
            <summary>设置 XmlTextReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.CanReadValueChunkGet">
            <summary>设置 XmlTextReader.get_CanReadValueChunk() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.CanResolveEntityGet">
            <summary>设置 XmlTextReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.Close">
            <summary>设置 XmlTextReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.DepthGet">
            <summary>设置 XmlTextReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.DtdProcessingGet">
            <summary>设置 XmlTextReader.get_DtdProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.DtdProcessingSetDtdProcessing">
            <summary>设置 XmlTextReader.set_DtdProcessing(DtdProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.EOFGet">
            <summary>设置 XmlTextReader.get_EOF() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.EntityHandlingGet">
            <summary>设置 XmlTextReader.get_EntityHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.EntityHandlingSetEntityHandling">
            <summary>设置 XmlTextReader.set_EntityHandling(EntityHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.GetAttributeInt32">
            <summary>设置 XmlTextReader.GetAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.GetAttributeString">
            <summary>设置 XmlTextReader.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.GetAttributeStringString">
            <summary>设置 XmlTextReader.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlTextReader.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.GetRemainder">
            <summary>设置 XmlTextReader.GetRemainder() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.HasLineInfo">
            <summary>设置 XmlTextReader.HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.HasValueGet">
            <summary>设置 XmlTextReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.IsDefaultGet">
            <summary>设置 XmlTextReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.IsEmptyElementGet">
            <summary>设置 XmlTextReader.get_IsEmptyElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.LineNumberGet">
            <summary>设置 XmlTextReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.LinePositionGet">
            <summary>设置 XmlTextReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.LocalNameGet">
            <summary>设置 XmlTextReader.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.LookupNamespaceString">
            <summary>设置 XmlTextReader.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToAttributeInt32">
            <summary>设置 XmlTextReader.MoveToAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToAttributeString">
            <summary>设置 XmlTextReader.MoveToAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToAttributeStringString">
            <summary>设置 XmlTextReader.MoveToAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToElement">
            <summary>设置 XmlTextReader.MoveToElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToFirstAttribute">
            <summary>设置 XmlTextReader.MoveToFirstAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.MoveToNextAttribute">
            <summary>设置 XmlTextReader.MoveToNextAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NameGet">
            <summary>设置 XmlTextReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NameTableGet">
            <summary>设置 XmlTextReader.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NamespaceManagerGet">
            <summary>设置 XmlTextReader.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NamespaceURIGet">
            <summary>设置 XmlTextReader.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NamespacesGet">
            <summary>设置 XmlTextReader.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NamespacesSetBoolean">
            <summary>设置 XmlTextReader.set_Namespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NodeTypeGet">
            <summary>设置 XmlTextReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NormalizationGet">
            <summary>设置 XmlTextReader.get_Normalization() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.NormalizationSetBoolean">
            <summary>设置 XmlTextReader.set_Normalization(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.PrefixGet">
            <summary>设置 XmlTextReader.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ProhibitDtdGet">
            <summary>设置 XmlTextReader.get_ProhibitDtd() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ProhibitDtdSetBoolean">
            <summary>设置 XmlTextReader.set_ProhibitDtd(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.QuoteCharGet">
            <summary>设置 XmlTextReader.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.Read">
            <summary>设置 XmlTextReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadAttributeValue">
            <summary>设置 XmlTextReader.ReadAttributeValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadBase64(Byte[] array, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadBinHex(Byte[] array, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadCharsCharArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadChars(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadStateGet">
            <summary>设置 XmlTextReader.get_ReadState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ReadString">
            <summary>设置 XmlTextReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ResetState">
            <summary>设置 XmlTextReader.ResetState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ResolveEntity">
            <summary>设置 XmlTextReader.ResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.Skip">
            <summary>设置 XmlTextReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.SystemXmlIXmlNamespaceResolverGetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.SystemXmlIXmlNamespaceResolverLookupNamespaceString">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.SystemXmlIXmlNamespaceResolverLookupPrefixString">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.ValueGet">
            <summary>设置 XmlTextReader.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.WhitespaceHandlingGet">
            <summary>设置 XmlTextReader.get_WhitespaceHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.WhitespaceHandlingSetWhitespaceHandling">
            <summary>设置 XmlTextReader.set_WhitespaceHandling(WhitespaceHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.XmlLangGet">
            <summary>设置 XmlTextReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.XmlResolverSetXmlResolver">
            <summary>设置 XmlTextReader.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.XmlSpaceGet">
            <summary>设置 XmlTextReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AllInstances.XmlValidatingReaderCompatibilityModeSetBoolean">
            <summary>设置 XmlTextReader.set_XmlValidatingReaderCompatibilityMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.AttributeCountGet">
            <summary>设置 XmlTextReader.get_AttributeCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.BaseURIGet">
            <summary>设置 XmlTextReader.get_BaseURI() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.Bind(System.Xml.IXmlLineInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.CanReadBinaryContentGet">
            <summary>设置 XmlTextReader.get_CanReadBinaryContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.CanReadValueChunkGet">
            <summary>设置 XmlTextReader.get_CanReadValueChunk() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.CanResolveEntityGet">
            <summary>设置 XmlTextReader.get_CanResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.Close">
            <summary>设置 XmlTextReader.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.Constructor">
            <summary>设置 XmlTextReader.XmlTextReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStream">
            <summary>设置 XmlTextReader.XmlTextReader(Stream input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStreamXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(Stream input, XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStreamXmlNodeTypeXmlParserContext">
            <summary>设置 XmlTextReader.XmlTextReader(Stream xmlFragment, XmlNodeType fragType, XmlParserContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorString">
            <summary>设置 XmlTextReader.XmlTextReader(String url) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringStream">
            <summary>设置 XmlTextReader.XmlTextReader(String url, Stream input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringStreamXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(String url, Stream input, XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringTextReader">
            <summary>设置 XmlTextReader.XmlTextReader(String url, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringTextReaderXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(String url, TextReader input, XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(String url, XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorStringXmlNodeTypeXmlParserContext">
            <summary>设置 XmlTextReader.XmlTextReader(String xmlFragment, XmlNodeType fragType, XmlParserContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorTextReader">
            <summary>设置 XmlTextReader.XmlTextReader(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorTextReaderXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(TextReader input, XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ConstructorXmlNameTable">
            <summary>设置 XmlTextReader.XmlTextReader(XmlNameTable nt) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.DepthGet">
            <summary>设置 XmlTextReader.get_Depth() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.DtdProcessingGet">
            <summary>设置 XmlTextReader.get_DtdProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.DtdProcessingSetDtdProcessing">
            <summary>设置 XmlTextReader.set_DtdProcessing(DtdProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.EOFGet">
            <summary>设置 XmlTextReader.get_EOF() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.EntityHandlingGet">
            <summary>设置 XmlTextReader.get_EntityHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.EntityHandlingSetEntityHandling">
            <summary>设置 XmlTextReader.set_EntityHandling(EntityHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.GetAttributeInt32">
            <summary>设置 XmlTextReader.GetAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.GetAttributeString">
            <summary>设置 XmlTextReader.GetAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.GetAttributeStringString">
            <summary>设置 XmlTextReader.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlTextReader.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.GetRemainder">
            <summary>设置 XmlTextReader.GetRemainder() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.HasLineInfo">
            <summary>设置 XmlTextReader.HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.HasValueGet">
            <summary>设置 XmlTextReader.get_HasValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.IsDefaultGet">
            <summary>设置 XmlTextReader.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.IsEmptyElementGet">
            <summary>设置 XmlTextReader.get_IsEmptyElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.LineNumberGet">
            <summary>设置 XmlTextReader.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.LinePositionGet">
            <summary>设置 XmlTextReader.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.LocalNameGet">
            <summary>设置 XmlTextReader.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.LookupNamespaceString">
            <summary>设置 XmlTextReader.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToAttributeInt32">
            <summary>设置 XmlTextReader.MoveToAttribute(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToAttributeString">
            <summary>设置 XmlTextReader.MoveToAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToAttributeStringString">
            <summary>设置 XmlTextReader.MoveToAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToElement">
            <summary>设置 XmlTextReader.MoveToElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToFirstAttribute">
            <summary>设置 XmlTextReader.MoveToFirstAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.MoveToNextAttribute">
            <summary>设置 XmlTextReader.MoveToNextAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NameGet">
            <summary>设置 XmlTextReader.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NameTableGet">
            <summary>设置 XmlTextReader.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NamespaceManagerGet">
            <summary>设置 XmlTextReader.get_NamespaceManager() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NamespaceURIGet">
            <summary>设置 XmlTextReader.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NamespacesGet">
            <summary>设置 XmlTextReader.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NamespacesSetBoolean">
            <summary>设置 XmlTextReader.set_Namespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NodeTypeGet">
            <summary>设置 XmlTextReader.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NormalizationGet">
            <summary>设置 XmlTextReader.get_Normalization() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.NormalizationSetBoolean">
            <summary>设置 XmlTextReader.set_Normalization(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.PrefixGet">
            <summary>设置 XmlTextReader.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ProhibitDtdGet">
            <summary>设置 XmlTextReader.get_ProhibitDtd() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ProhibitDtdSetBoolean">
            <summary>设置 XmlTextReader.set_ProhibitDtd(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.QuoteCharGet">
            <summary>设置 XmlTextReader.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.Read">
            <summary>设置 XmlTextReader.Read() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadAttributeValue">
            <summary>设置 XmlTextReader.ReadAttributeValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadBase64(Byte[] array, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadBinHex(Byte[] array, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadCharsCharArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadChars(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadStateGet">
            <summary>设置 XmlTextReader.get_ReadState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ReadString">
            <summary>设置 XmlTextReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ResetState">
            <summary>设置 XmlTextReader.ResetState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ResolveEntity">
            <summary>设置 XmlTextReader.ResolveEntity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.Skip">
            <summary>设置 XmlTextReader.Skip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.SystemXmlIXmlNamespaceResolverGetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.SystemXmlIXmlNamespaceResolverLookupNamespaceString">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.SystemXmlIXmlNamespaceResolverLookupPrefixString">
            <summary>设置 XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.ValueGet">
            <summary>设置 XmlTextReader.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.WhitespaceHandlingGet">
            <summary>设置 XmlTextReader.get_WhitespaceHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.WhitespaceHandlingSetWhitespaceHandling">
            <summary>设置 XmlTextReader.set_WhitespaceHandling(WhitespaceHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.XmlLangGet">
            <summary>设置 XmlTextReader.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.XmlResolverSetXmlResolver">
            <summary>设置 XmlTextReader.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.XmlSpaceGet">
            <summary>设置 XmlTextReader.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextReader.XmlValidatingReaderCompatibilityModeSetBoolean">
            <summary>设置 XmlTextReader.set_XmlValidatingReaderCompatibilityMode(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlTextWriter">
            <summary>System.Xml.XmlTextWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextWriter.#ctor(System.Xml.XmlTextWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlTextWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.BaseStreamGet">
            <summary>设置 XmlTextWriter.get_BaseStream() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.Close">
            <summary>设置 XmlTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.Flush">
            <summary>设置 XmlTextWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.FormattingGet">
            <summary>设置 XmlTextWriter.get_Formatting() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.FormattingSetFormatting">
            <summary>设置 XmlTextWriter.set_Formatting(Formatting value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.IndentCharGet">
            <summary>设置 XmlTextWriter.get_IndentChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.IndentCharSetChar">
            <summary>设置 XmlTextWriter.set_IndentChar(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.IndentationGet">
            <summary>设置 XmlTextWriter.get_Indentation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.IndentationSetInt32">
            <summary>设置 XmlTextWriter.set_Indentation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.LookupPrefixString">
            <summary>设置 XmlTextWriter.LookupPrefix(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.NamespacesGet">
            <summary>设置 XmlTextWriter.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.NamespacesSetBoolean">
            <summary>设置 XmlTextWriter.set_Namespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.QuoteCharGet">
            <summary>设置 XmlTextWriter.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.QuoteCharSetChar">
            <summary>设置 XmlTextWriter.set_QuoteChar(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteCDataString">
            <summary>设置 XmlTextWriter.WriteCData(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteCharEntityChar">
            <summary>设置 XmlTextWriter.WriteCharEntity(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteCharsCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteCommentString">
            <summary>设置 XmlTextWriter.WriteComment(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteDocTypeStringStringStringString">
            <summary>设置 XmlTextWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteEndAttribute">
            <summary>设置 XmlTextWriter.WriteEndAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteEndDocument">
            <summary>设置 XmlTextWriter.WriteEndDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteEndElement">
            <summary>设置 XmlTextWriter.WriteEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteEntityRefString">
            <summary>设置 XmlTextWriter.WriteEntityRef(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteFullEndElement">
            <summary>设置 XmlTextWriter.WriteFullEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteNameString">
            <summary>设置 XmlTextWriter.WriteName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteNmTokenString">
            <summary>设置 XmlTextWriter.WriteNmToken(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteProcessingInstructionStringString">
            <summary>设置 XmlTextWriter.WriteProcessingInstruction(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteQualifiedNameStringString">
            <summary>设置 XmlTextWriter.WriteQualifiedName(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteRawCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteRawString">
            <summary>设置 XmlTextWriter.WriteRaw(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStartAttributeStringStringString">
            <summary>设置 XmlTextWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStartDocument">
            <summary>设置 XmlTextWriter.WriteStartDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStartDocumentBoolean">
            <summary>设置 XmlTextWriter.WriteStartDocument(Boolean standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStartElementStringStringString">
            <summary>设置 XmlTextWriter.WriteStartElement(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStateGet">
            <summary>设置 XmlTextWriter.get_WriteState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteStringString">
            <summary>设置 XmlTextWriter.WriteString(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteSurrogateCharEntityCharChar">
            <summary>设置 XmlTextWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.WriteWhitespaceString">
            <summary>设置 XmlTextWriter.WriteWhitespace(String ws) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.XmlLangGet">
            <summary>设置 XmlTextWriter.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.AllInstances.XmlSpaceGet">
            <summary>设置 XmlTextWriter.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.BaseStreamGet">
            <summary>设置 XmlTextWriter.get_BaseStream() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlTextWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.Close">
            <summary>设置 XmlTextWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.Constructor">
            <summary>设置 XmlTextWriter.XmlTextWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.ConstructorTextWriter">
            <summary>设置 XmlTextWriter.XmlTextWriter(TextWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.Flush">
            <summary>设置 XmlTextWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.FormattingGet">
            <summary>设置 XmlTextWriter.get_Formatting() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.FormattingSetFormatting">
            <summary>设置 XmlTextWriter.set_Formatting(Formatting value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.IndentCharGet">
            <summary>设置 XmlTextWriter.get_IndentChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.IndentCharSetChar">
            <summary>设置 XmlTextWriter.set_IndentChar(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.IndentationGet">
            <summary>设置 XmlTextWriter.get_Indentation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.IndentationSetInt32">
            <summary>设置 XmlTextWriter.set_Indentation(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.LookupPrefixString">
            <summary>设置 XmlTextWriter.LookupPrefix(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.NamespacesGet">
            <summary>设置 XmlTextWriter.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.NamespacesSetBoolean">
            <summary>设置 XmlTextWriter.set_Namespaces(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.QuoteCharGet">
            <summary>设置 XmlTextWriter.get_QuoteChar() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.QuoteCharSetChar">
            <summary>设置 XmlTextWriter.set_QuoteChar(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.StaticConstructor">
            <summary>设置 XmlTextWriter.XmlTextWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteCDataString">
            <summary>设置 XmlTextWriter.WriteCData(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteCharEntityChar">
            <summary>设置 XmlTextWriter.WriteCharEntity(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteCharsCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteCommentString">
            <summary>设置 XmlTextWriter.WriteComment(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteDocTypeStringStringStringString">
            <summary>设置 XmlTextWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteEndAttribute">
            <summary>设置 XmlTextWriter.WriteEndAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteEndDocument">
            <summary>设置 XmlTextWriter.WriteEndDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteEndElement">
            <summary>设置 XmlTextWriter.WriteEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteEntityRefString">
            <summary>设置 XmlTextWriter.WriteEntityRef(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteFullEndElement">
            <summary>设置 XmlTextWriter.WriteFullEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteNameString">
            <summary>设置 XmlTextWriter.WriteName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteNmTokenString">
            <summary>设置 XmlTextWriter.WriteNmToken(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteProcessingInstructionStringString">
            <summary>设置 XmlTextWriter.WriteProcessingInstruction(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteQualifiedNameStringString">
            <summary>设置 XmlTextWriter.WriteQualifiedName(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteRawCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteRawString">
            <summary>设置 XmlTextWriter.WriteRaw(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStartAttributeStringStringString">
            <summary>设置 XmlTextWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStartDocument">
            <summary>设置 XmlTextWriter.WriteStartDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStartDocumentBoolean">
            <summary>设置 XmlTextWriter.WriteStartDocument(Boolean standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStartElementStringStringString">
            <summary>设置 XmlTextWriter.WriteStartElement(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStateGet">
            <summary>设置 XmlTextWriter.get_WriteState() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteStringString">
            <summary>设置 XmlTextWriter.WriteString(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteSurrogateCharEntityCharChar">
            <summary>设置 XmlTextWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.WriteWhitespaceString">
            <summary>设置 XmlTextWriter.WriteWhitespace(String ws) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.XmlLangGet">
            <summary>设置 XmlTextWriter.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlTextWriter.XmlSpaceGet">
            <summary>设置 XmlTextWriter.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlUrlResolver">
            <summary>System.Xml.XmlUrlResolver 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlUrlResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlUrlResolver.#ctor(System.Xml.XmlUrlResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.CachePolicySetRequestCachePolicy">
            <summary>设置 XmlUrlResolver.set_CachePolicy(RequestCachePolicy value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.CredentialsSetICredentials">
            <summary>设置 XmlUrlResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.GetEntityAsyncUriStringType">
            <summary>设置 XmlUrlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.GetEntityUriStringType">
            <summary>设置 XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.ProxySetIWebProxy">
            <summary>设置 XmlUrlResolver.set_Proxy(IWebProxy value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.AllInstances.ResolveUriUriString">
            <summary>设置 XmlUrlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlUrlResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlUrlResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.CachePolicySetRequestCachePolicy">
            <summary>设置 XmlUrlResolver.set_CachePolicy(RequestCachePolicy value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.Constructor">
            <summary>设置 XmlUrlResolver.XmlUrlResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.CredentialsSetICredentials">
            <summary>设置 XmlUrlResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlUrlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.GetEntityUriStringType">
            <summary>设置 XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.ProxySetIWebProxy">
            <summary>设置 XmlUrlResolver.set_Proxy(IWebProxy value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlUrlResolver.ResolveUriUriString">
            <summary>设置 XmlUrlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWhitespace">
            <summary>System.Xml.XmlWhitespace 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.#ctor(System.Xml.XmlWhitespace)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWhitespace.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.CloneNodeBoolean">
            <summary>设置 XmlWhitespace.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.IsTextGet">
            <summary>设置 XmlWhitespace.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.LocalNameGet">
            <summary>设置 XmlWhitespace.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.NameGet">
            <summary>设置 XmlWhitespace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.NodeTypeGet">
            <summary>设置 XmlWhitespace.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.ParentNodeGet">
            <summary>设置 XmlWhitespace.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.PreviousTextGet">
            <summary>设置 XmlWhitespace.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.ValueGet">
            <summary>设置 XmlWhitespace.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.ValueSetString">
            <summary>设置 XmlWhitespace.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.WriteContentToXmlWriter">
            <summary>设置 XmlWhitespace.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.WriteToXmlWriter">
            <summary>设置 XmlWhitespace.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.AllInstances.XPNodeTypeGet">
            <summary>设置 XmlWhitespace.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWhitespace.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.CloneNodeBoolean">
            <summary>设置 XmlWhitespace.CloneNode(Boolean deep) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.ConstructorStringXmlDocument">
            <summary>设置 XmlWhitespace.XmlWhitespace(String strData, XmlDocument doc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.IsTextGet">
            <summary>设置 XmlWhitespace.get_IsText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.LocalNameGet">
            <summary>设置 XmlWhitespace.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.NameGet">
            <summary>设置 XmlWhitespace.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.NodeTypeGet">
            <summary>设置 XmlWhitespace.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.ParentNodeGet">
            <summary>设置 XmlWhitespace.get_ParentNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.PreviousTextGet">
            <summary>设置 XmlWhitespace.get_PreviousText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.ValueGet">
            <summary>设置 XmlWhitespace.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.ValueSetString">
            <summary>设置 XmlWhitespace.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.WriteContentToXmlWriter">
            <summary>设置 XmlWhitespace.WriteContentTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.WriteToXmlWriter">
            <summary>设置 XmlWhitespace.WriteTo(XmlWriter w) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWhitespace.XPNodeTypeGet">
            <summary>设置 XmlWhitespace.get_XPNodeType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWriter">
            <summary>System.Xml.XmlWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.Close">
            <summary>设置 XmlWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.Dispose">
            <summary>设置 XmlWriter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.DisposeBoolean">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.FlushAsync">
            <summary>设置 XmlWriter.FlushAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.SettingsGet">
            <summary>设置 XmlWriter.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributeStringAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeStringAsync(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributeStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributeStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributeStringStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributesAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteAttributesXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteCDataAsyncString">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteCharEntityAsyncChar">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteCharsAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteCommentAsyncString">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteDocTypeAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteElementStringAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteElementStringAsync(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteElementStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteElementStringStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteElementStringStringStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteEndAttributeAsync">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteEndDocumentAsync">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteEndElementAsync">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteEntityRefAsyncString">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteFullEndElementAsync">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNameAsyncString">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNameString">
            <summary>设置 XmlWriter.WriteName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNmTokenAsyncString">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNmTokenString">
            <summary>设置 XmlWriter.WriteNmToken(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeAsyncXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeAsync_CallAsyncReaderXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync_CallAsyncReader(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeAsync_CallSyncReaderXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync_CallSyncReader(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteNodeXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteProcessingInstructionAsyncStringString">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteQualifiedNameAsyncStringString">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteQualifiedNameStringString">
            <summary>设置 XmlWriter.WriteQualifiedName(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteRawAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteRawAsyncString">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartAttributeAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartAttributeString">
            <summary>设置 XmlWriter.WriteStartAttribute(String localName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartAttributeStringString">
            <summary>设置 XmlWriter.WriteStartAttribute(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartDocumentAsync">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartDocumentAsyncBoolean">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartElementAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartElementString">
            <summary>设置 XmlWriter.WriteStartElement(String localName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStartElementStringString">
            <summary>设置 XmlWriter.WriteStartElement(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteStringAsyncString">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteSurrogateCharEntityAsyncCharChar">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueBoolean">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueDateTime">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueDateTimeOffset">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueDecimal">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueDouble">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueInt32">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueInt64">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueObject">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueSingle">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteValueString">
            <summary>设置 XmlWriter.WriteValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.WriteWhitespaceAsyncString">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.XmlLangGet">
            <summary>设置 XmlWriter.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.AllInstances.XmlSpaceGet">
            <summary>设置 XmlWriter.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.Close">
            <summary>设置 XmlWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.Constructor">
            <summary>设置 XmlWriter.XmlWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateStream">
            <summary>设置 XmlWriter.Create(Stream output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateStreamXmlWriterSettings">
            <summary>设置 XmlWriter.Create(Stream output, XmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateString">
            <summary>设置 XmlWriter.Create(String outputFileName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateStringBuilder">
            <summary>设置 XmlWriter.Create(StringBuilder output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateStringBuilderXmlWriterSettings">
            <summary>设置 XmlWriter.Create(StringBuilder output, XmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateStringXmlWriterSettings">
            <summary>设置 XmlWriter.Create(String outputFileName, XmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateTextWriter">
            <summary>设置 XmlWriter.Create(TextWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateTextWriterXmlWriterSettings">
            <summary>设置 XmlWriter.Create(TextWriter output, XmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateXmlWriter">
            <summary>设置 XmlWriter.Create(XmlWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.CreateXmlWriterXmlWriterSettings">
            <summary>设置 XmlWriter.Create(XmlWriter output, XmlWriterSettings settings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.Dispose">
            <summary>设置 XmlWriter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.DisposeBoolean">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.FlushAsync">
            <summary>设置 XmlWriter.FlushAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.SettingsGet">
            <summary>设置 XmlWriter.get_Settings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributeStringAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeStringAsync(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributeStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributeStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributeStringStringStringStringString">
            <summary>设置 XmlWriter.WriteAttributeString(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributesAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteAttributesXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteCDataAsyncString">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteCharEntityAsyncChar">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteCharsAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteCommentAsyncString">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteDocTypeAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteElementStringAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteElementStringAsync(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteElementStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteElementStringStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteElementStringStringStringStringString">
            <summary>设置 XmlWriter.WriteElementString(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteEndAttributeAsync">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteEndDocumentAsync">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteEndElementAsync">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteEntityRefAsyncString">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteFullEndElementAsync">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNameAsyncString">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNameString">
            <summary>设置 XmlWriter.WriteName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNmTokenAsyncString">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNmTokenString">
            <summary>设置 XmlWriter.WriteNmToken(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeAsyncXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeAsync_CallAsyncReaderXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync_CallAsyncReader(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeAsync_CallSyncReaderXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync_CallSyncReader(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteNodeXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteProcessingInstructionAsyncStringString">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteQualifiedNameAsyncStringString">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteQualifiedNameStringString">
            <summary>设置 XmlWriter.WriteQualifiedName(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteRawAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteRawAsyncString">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartAttributeAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartAttributeString">
            <summary>设置 XmlWriter.WriteStartAttribute(String localName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartAttributeStringString">
            <summary>设置 XmlWriter.WriteStartAttribute(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartDocumentAsync">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartDocumentAsyncBoolean">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartElementAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartElementString">
            <summary>设置 XmlWriter.WriteStartElement(String localName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStartElementStringString">
            <summary>设置 XmlWriter.WriteStartElement(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteStringAsyncString">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteSurrogateCharEntityAsyncCharChar">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueBoolean">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueDateTime">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueDateTimeOffset">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueDecimal">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueDouble">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueInt32">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueInt64">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueObject">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueSingle">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteValueString">
            <summary>设置 XmlWriter.WriteValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.WriteWhitespaceAsyncString">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.XmlLangGet">
            <summary>设置 XmlWriter.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriter.XmlSpaceGet">
            <summary>设置 XmlWriter.get_XmlSpace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWriterSettings">
            <summary>System.Xml.XmlWriterSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriterSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriterSettings.#ctor(System.Xml.XmlWriterSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.AsyncGet">
            <summary>设置 XmlWriterSettings.get_Async() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.AsyncSetBoolean">
            <summary>设置 XmlWriterSettings.set_Async(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.AutoXmlDeclarationGet">
            <summary>设置 XmlWriterSettings.get_AutoXmlDeclaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.AutoXmlDeclarationSetBoolean">
            <summary>设置 XmlWriterSettings.set_AutoXmlDeclaration(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CDataSectionElementsGet">
            <summary>设置 XmlWriterSettings.get_CDataSectionElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CheckCharactersGet">
            <summary>设置 XmlWriterSettings.get_CheckCharacters() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CheckCharactersSetBoolean">
            <summary>设置 XmlWriterSettings.set_CheckCharacters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.Clone">
            <summary>设置 XmlWriterSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CloseOutputGet">
            <summary>设置 XmlWriterSettings.get_CloseOutput() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CloseOutputSetBoolean">
            <summary>设置 XmlWriterSettings.set_CloseOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.ConformanceLevelGet">
            <summary>设置 XmlWriterSettings.get_ConformanceLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.ConformanceLevelSetConformanceLevel">
            <summary>设置 XmlWriterSettings.set_ConformanceLevel(ConformanceLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CreateWriterStream">
            <summary>设置 XmlWriterSettings.CreateWriter(Stream output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CreateWriterString">
            <summary>设置 XmlWriterSettings.CreateWriter(String outputFileName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CreateWriterTextWriter">
            <summary>设置 XmlWriterSettings.CreateWriter(TextWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.CreateWriterXmlWriter">
            <summary>设置 XmlWriterSettings.CreateWriter(XmlWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DoNotEscapeUriAttributesGet">
            <summary>设置 XmlWriterSettings.get_DoNotEscapeUriAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DoNotEscapeUriAttributesSetBoolean">
            <summary>设置 XmlWriterSettings.set_DoNotEscapeUriAttributes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DocTypePublicGet">
            <summary>设置 XmlWriterSettings.get_DocTypePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DocTypePublicSetString">
            <summary>设置 XmlWriterSettings.set_DocTypePublic(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DocTypeSystemGet">
            <summary>设置 XmlWriterSettings.get_DocTypeSystem() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.DocTypeSystemSetString">
            <summary>设置 XmlWriterSettings.set_DocTypeSystem(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.IndentCharsGet">
            <summary>设置 XmlWriterSettings.get_IndentChars() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.IndentCharsSetString">
            <summary>设置 XmlWriterSettings.set_IndentChars(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.IndentGet">
            <summary>设置 XmlWriterSettings.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.IndentSetBoolean">
            <summary>设置 XmlWriterSettings.set_Indent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.IsQuerySpecificGet">
            <summary>设置 XmlWriterSettings.get_IsQuerySpecific() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.MediaTypeGet">
            <summary>设置 XmlWriterSettings.get_MediaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.MediaTypeSetString">
            <summary>设置 XmlWriterSettings.set_MediaType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.MergeCDataSectionsGet">
            <summary>设置 XmlWriterSettings.get_MergeCDataSections() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.MergeCDataSectionsSetBoolean">
            <summary>设置 XmlWriterSettings.set_MergeCDataSections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NamespaceHandlingGet">
            <summary>设置 XmlWriterSettings.get_NamespaceHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NamespaceHandlingSetNamespaceHandling">
            <summary>设置 XmlWriterSettings.set_NamespaceHandling(NamespaceHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineCharsGet">
            <summary>设置 XmlWriterSettings.get_NewLineChars() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineCharsSetString">
            <summary>设置 XmlWriterSettings.set_NewLineChars(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineHandlingGet">
            <summary>设置 XmlWriterSettings.get_NewLineHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineHandlingSetNewLineHandling">
            <summary>设置 XmlWriterSettings.set_NewLineHandling(NewLineHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineOnAttributesGet">
            <summary>设置 XmlWriterSettings.get_NewLineOnAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.NewLineOnAttributesSetBoolean">
            <summary>设置 XmlWriterSettings.set_NewLineOnAttributes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.OmitXmlDeclarationGet">
            <summary>设置 XmlWriterSettings.get_OmitXmlDeclaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.OmitXmlDeclarationSetBoolean">
            <summary>设置 XmlWriterSettings.set_OmitXmlDeclaration(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.OutputMethodGet">
            <summary>设置 XmlWriterSettings.get_OutputMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.OutputMethodSetXmlOutputMethod">
            <summary>设置 XmlWriterSettings.set_OutputMethod(XmlOutputMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.ReadOnlyGet">
            <summary>设置 XmlWriterSettings.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.ReadOnlySetBoolean">
            <summary>设置 XmlWriterSettings.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.Reset">
            <summary>设置 XmlWriterSettings.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.WriteEndDocumentOnCloseGet">
            <summary>设置 XmlWriterSettings.get_WriteEndDocumentOnClose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AllInstances.WriteEndDocumentOnCloseSetBoolean">
            <summary>设置 XmlWriterSettings.set_WriteEndDocumentOnClose(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AsyncGet">
            <summary>设置 XmlWriterSettings.get_Async() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AsyncSetBoolean">
            <summary>设置 XmlWriterSettings.set_Async(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AutoXmlDeclarationGet">
            <summary>设置 XmlWriterSettings.get_AutoXmlDeclaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.AutoXmlDeclarationSetBoolean">
            <summary>设置 XmlWriterSettings.set_AutoXmlDeclaration(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriterSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.ShimXmlWriterSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CDataSectionElementsGet">
            <summary>设置 XmlWriterSettings.get_CDataSectionElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CheckCharactersGet">
            <summary>设置 XmlWriterSettings.get_CheckCharacters() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CheckCharactersSetBoolean">
            <summary>设置 XmlWriterSettings.set_CheckCharacters(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.Clone">
            <summary>设置 XmlWriterSettings.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CloseOutputGet">
            <summary>设置 XmlWriterSettings.get_CloseOutput() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CloseOutputSetBoolean">
            <summary>设置 XmlWriterSettings.set_CloseOutput(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.ConformanceLevelGet">
            <summary>设置 XmlWriterSettings.get_ConformanceLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.ConformanceLevelSetConformanceLevel">
            <summary>设置 XmlWriterSettings.set_ConformanceLevel(ConformanceLevel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.Constructor">
            <summary>设置 XmlWriterSettings.XmlWriterSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CreateWriterStream">
            <summary>设置 XmlWriterSettings.CreateWriter(Stream output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CreateWriterString">
            <summary>设置 XmlWriterSettings.CreateWriter(String outputFileName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CreateWriterTextWriter">
            <summary>设置 XmlWriterSettings.CreateWriter(TextWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.CreateWriterXmlWriter">
            <summary>设置 XmlWriterSettings.CreateWriter(XmlWriter output) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DoNotEscapeUriAttributesGet">
            <summary>设置 XmlWriterSettings.get_DoNotEscapeUriAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DoNotEscapeUriAttributesSetBoolean">
            <summary>设置 XmlWriterSettings.set_DoNotEscapeUriAttributes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DocTypePublicGet">
            <summary>设置 XmlWriterSettings.get_DocTypePublic() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DocTypePublicSetString">
            <summary>设置 XmlWriterSettings.set_DocTypePublic(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DocTypeSystemGet">
            <summary>设置 XmlWriterSettings.get_DocTypeSystem() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.DocTypeSystemSetString">
            <summary>设置 XmlWriterSettings.set_DocTypeSystem(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.IndentCharsGet">
            <summary>设置 XmlWriterSettings.get_IndentChars() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.IndentCharsSetString">
            <summary>设置 XmlWriterSettings.set_IndentChars(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.IndentGet">
            <summary>设置 XmlWriterSettings.get_Indent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.IndentSetBoolean">
            <summary>设置 XmlWriterSettings.set_Indent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.IsQuerySpecificGet">
            <summary>设置 XmlWriterSettings.get_IsQuerySpecific() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.MediaTypeGet">
            <summary>设置 XmlWriterSettings.get_MediaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.MediaTypeSetString">
            <summary>设置 XmlWriterSettings.set_MediaType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.MergeCDataSectionsGet">
            <summary>设置 XmlWriterSettings.get_MergeCDataSections() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.MergeCDataSectionsSetBoolean">
            <summary>设置 XmlWriterSettings.set_MergeCDataSections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NamespaceHandlingGet">
            <summary>设置 XmlWriterSettings.get_NamespaceHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NamespaceHandlingSetNamespaceHandling">
            <summary>设置 XmlWriterSettings.set_NamespaceHandling(NamespaceHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineCharsGet">
            <summary>设置 XmlWriterSettings.get_NewLineChars() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineCharsSetString">
            <summary>设置 XmlWriterSettings.set_NewLineChars(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineHandlingGet">
            <summary>设置 XmlWriterSettings.get_NewLineHandling() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineHandlingSetNewLineHandling">
            <summary>设置 XmlWriterSettings.set_NewLineHandling(NewLineHandling value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineOnAttributesGet">
            <summary>设置 XmlWriterSettings.get_NewLineOnAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.NewLineOnAttributesSetBoolean">
            <summary>设置 XmlWriterSettings.set_NewLineOnAttributes(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.OmitXmlDeclarationGet">
            <summary>设置 XmlWriterSettings.get_OmitXmlDeclaration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.OmitXmlDeclarationSetBoolean">
            <summary>设置 XmlWriterSettings.set_OmitXmlDeclaration(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.OutputMethodGet">
            <summary>设置 XmlWriterSettings.get_OutputMethod() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.OutputMethodSetXmlOutputMethod">
            <summary>设置 XmlWriterSettings.set_OutputMethod(XmlOutputMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.ReadOnlyGet">
            <summary>设置 XmlWriterSettings.get_ReadOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.ReadOnlySetBoolean">
            <summary>设置 XmlWriterSettings.set_ReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.Reset">
            <summary>设置 XmlWriterSettings.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.WriteEndDocumentOnCloseGet">
            <summary>设置 XmlWriterSettings.get_WriteEndDocumentOnClose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Fakes.ShimXmlWriterSettings.WriteEndDocumentOnCloseSetBoolean">
            <summary>设置 XmlWriterSettings.set_WriteEndDocumentOnClose(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubIHasXmlNode">
            <summary>System.Xml.IHasXmlNode 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIHasXmlNode.#ctor">
            <summary>初始化 type StubIHasXmlNode 的新实例</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIHasXmlNode.GetNode">
            <summary>设置 IHasXmlNode.GetNode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIHasXmlNode.System#Xml#IHasXmlNode#GetNode">
            <summary>设置 IHasXmlNode.GetNode() 的 存根</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubIXmlLineInfo">
            <summary>System.Xml.IXmlLineInfo 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlLineInfo.#ctor">
            <summary>初始化 type StubIXmlLineInfo 的新实例</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlLineInfo.HasLineInfo">
            <summary>设置 IXmlLineInfo.HasLineInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubIXmlLineInfo.System#Xml#IXmlLineInfo#LineNumber">
            <summary>设置 IXmlLineInfo.get_LineNumber() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlLineInfo.LineNumberGet">
            <summary>设置 IXmlLineInfo.get_LineNumber() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubIXmlLineInfo.System#Xml#IXmlLineInfo#LinePosition">
            <summary>设置 IXmlLineInfo.get_LinePosition() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlLineInfo.LinePositionGet">
            <summary>设置 IXmlLineInfo.get_LinePosition() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlLineInfo.System#Xml#IXmlLineInfo#HasLineInfo">
            <summary>设置 IXmlLineInfo.HasLineInfo() 的 存根</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubIXmlNamespaceResolver">
            <summary>System.Xml.IXmlNamespaceResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlNamespaceResolver.#ctor">
            <summary>初始化 type StubIXmlNamespaceResolver 的新实例</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlNamespaceResolver.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlNamespaceResolver.LookupNamespaceString">
            <summary>设置 IXmlNamespaceResolver.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubIXmlNamespaceResolver.LookupPrefixString">
            <summary>设置 IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlNamespaceResolver.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>设置 IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope scope) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlNamespaceResolver.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
            <summary>设置 IXmlNamespaceResolver.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubIXmlNamespaceResolver.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
            <summary>设置 IXmlNamespaceResolver.LookupPrefix(String namespaceName) 的 存根</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubNameTable">
            <summary>System.Xml.NameTable 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.Add(System.String)">
            <summary>设置 NameTable.Add(String key) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.Add(System.Char[],System.Int32,System.Int32)">
            <summary>设置 NameTable.Add(Char[] key, Int32 start, Int32 len) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubNameTable.AddCharArrayInt32Int32">
            <summary>设置 NameTable.Add(Char[] key, Int32 start, Int32 len) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubNameTable.AddString">
            <summary>设置 NameTable.Add(String key) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubNameTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.Get(System.String)">
            <summary>设置 NameTable.Get(String value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>设置 NameTable.Get(Char[] key, Int32 start, Int32 len) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubNameTable.GetCharArrayInt32Int32">
            <summary>设置 NameTable.Get(Char[] key, Int32 start, Int32 len) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubNameTable.GetString">
            <summary>设置 NameTable.Get(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubNameTable.InitializeStub">
            <summary>初始化 type StubNameTable 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubNameTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubNameTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlAttribute">
            <summary>System.Xml.XmlAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.AppendChildXmlNode">
            <summary>设置 XmlAttribute.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlAttribute.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlAttribute.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.BaseURI">
            <summary>设置 XmlAttribute.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.BaseURIGet">
            <summary>设置 XmlAttribute.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.CloneNode(System.Boolean)">
            <summary>设置 XmlAttribute.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.CloneNodeBoolean">
            <summary>设置 XmlAttribute.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.InitializeStub">
            <summary>初始化 type StubXmlAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.InnerText">
            <summary>设置 XmlAttribute.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.InnerTextSetString">
            <summary>设置 XmlAttribute.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.InnerXml">
            <summary>设置 XmlAttribute.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.InnerXmlSetString">
            <summary>设置 XmlAttribute.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlAttribute.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.LocalName">
            <summary>设置 XmlAttribute.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.LocalNameGet">
            <summary>设置 XmlAttribute.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Name">
            <summary>设置 XmlAttribute.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.NameGet">
            <summary>设置 XmlAttribute.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.NamespaceURI">
            <summary>设置 XmlAttribute.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.NamespaceURIGet">
            <summary>设置 XmlAttribute.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.NextSibling">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.NextSiblingGet">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.NodeType">
            <summary>设置 XmlAttribute.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.NodeTypeGet">
            <summary>设置 XmlAttribute.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.OwnerDocument">
            <summary>设置 XmlAttribute.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.OwnerDocumentGet">
            <summary>设置 XmlAttribute.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.OwnerElement">
            <summary>设置 XmlAttribute.get_OwnerElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.OwnerElementGet">
            <summary>设置 XmlAttribute.get_OwnerElement() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.ParentNode">
            <summary>设置 XmlAttribute.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ParentNodeGet">
            <summary>设置 XmlAttribute.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Prefix">
            <summary>设置 XmlAttribute.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.PrefixGet">
            <summary>设置 XmlAttribute.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.PrefixSetString">
            <summary>设置 XmlAttribute.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.PrependChildXmlNode">
            <summary>设置 XmlAttribute.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.PreviousSibling">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.PreviousSiblingGet">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.RemoveChildXmlNode">
            <summary>设置 XmlAttribute.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlAttribute.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlAttribute.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.SchemaInfo">
            <summary>设置 XmlAttribute.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.SchemaInfoGet">
            <summary>设置 XmlAttribute.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Specified">
            <summary>设置 XmlAttribute.get_Specified() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.SpecifiedGet">
            <summary>设置 XmlAttribute.get_Specified() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlAttribute.Value">
            <summary>设置 XmlAttribute.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ValueGet">
            <summary>设置 XmlAttribute.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.ValueSetString">
            <summary>设置 XmlAttribute.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlAttribute.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.WriteContentToXmlWriter">
            <summary>设置 XmlAttribute.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlAttribute.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlAttribute.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlAttribute.WriteToXmlWriter">
            <summary>设置 XmlAttribute.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlCDataSection">
            <summary>System.Xml.XmlCDataSection 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlCDataSection.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlCDataSection.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlCDataSection.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlCDataSection.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlCDataSection.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.CloneNode(System.Boolean)">
            <summary>设置 XmlCDataSection.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.CloneNodeBoolean">
            <summary>设置 XmlCDataSection.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.InitializeStub">
            <summary>初始化 type StubXmlCDataSection 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.LocalName">
            <summary>设置 XmlCDataSection.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.LocalNameGet">
            <summary>设置 XmlCDataSection.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Name">
            <summary>设置 XmlCDataSection.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.NameGet">
            <summary>设置 XmlCDataSection.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.NodeType">
            <summary>设置 XmlCDataSection.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.NodeTypeGet">
            <summary>设置 XmlCDataSection.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.ParentNode">
            <summary>设置 XmlCDataSection.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ParentNodeGet">
            <summary>设置 XmlCDataSection.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.PreviousText">
            <summary>设置 XmlCDataSection.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.PreviousTextGet">
            <summary>设置 XmlCDataSection.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCDataSection.Value">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ValueGet">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.ValueSetString">
            <summary>设置 XmlCharacterData.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlCDataSection.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.WriteContentToXmlWriter">
            <summary>设置 XmlCDataSection.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCDataSection.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlCDataSection.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCDataSection.WriteToXmlWriter">
            <summary>设置 XmlCDataSection.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlCharacterData">
            <summary>System.Xml.XmlCharacterData 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlCharacterData.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlCharacterData.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlCharacterData.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlCharacterData.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlCharacterData.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.CloneNode(System.Boolean)">
            <summary>设置 XmlNode.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.CloneNodeBoolean">
            <summary>设置 XmlNode.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.InitializeStub">
            <summary>初始化 type StubXmlCharacterData 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.LocalName">
            <summary>设置 XmlNode.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.LocalNameGet">
            <summary>设置 XmlNode.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Name">
            <summary>设置 XmlNode.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.NameGet">
            <summary>设置 XmlNode.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.NodeType">
            <summary>设置 XmlNode.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.NodeTypeGet">
            <summary>设置 XmlNode.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlCharacterData.Value">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ValueGet">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.ValueSetString">
            <summary>设置 XmlCharacterData.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlNode.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.WriteContentToXmlWriter">
            <summary>设置 XmlNode.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlCharacterData.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlNode.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlCharacterData.WriteToXmlWriter">
            <summary>设置 XmlNode.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlComment">
            <summary>System.Xml.XmlComment 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlComment.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlComment.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlComment.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlComment.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlComment.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.CloneNode(System.Boolean)">
            <summary>设置 XmlComment.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.CloneNodeBoolean">
            <summary>设置 XmlComment.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.InitializeStub">
            <summary>初始化 type StubXmlComment 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.LocalName">
            <summary>设置 XmlComment.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.LocalNameGet">
            <summary>设置 XmlComment.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Name">
            <summary>设置 XmlComment.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.NameGet">
            <summary>设置 XmlComment.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.NodeType">
            <summary>设置 XmlComment.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.NodeTypeGet">
            <summary>设置 XmlComment.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlComment.Value">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ValueGet">
            <summary>设置 XmlCharacterData.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.ValueSetString">
            <summary>设置 XmlCharacterData.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlComment.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.WriteContentToXmlWriter">
            <summary>设置 XmlComment.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlComment.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlComment.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlComment.WriteToXmlWriter">
            <summary>设置 XmlComment.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlConvert">
            <summary>System.Xml.XmlConvert 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlConvert.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlConvert.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlConvert.InitializeStub">
            <summary>初始化 type StubXmlConvert 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlConvert.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlConvert.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlDeclaration">
            <summary>System.Xml.XmlDeclaration 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlDeclaration.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlDeclaration.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlDeclaration.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlDeclaration.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.CloneNode(System.Boolean)">
            <summary>设置 XmlDeclaration.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.CloneNodeBoolean">
            <summary>设置 XmlDeclaration.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.InitializeStub">
            <summary>初始化 type StubXmlDeclaration 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.InnerText">
            <summary>设置 XmlDeclaration.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InnerTextGet">
            <summary>设置 XmlDeclaration.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InnerTextSetString">
            <summary>设置 XmlDeclaration.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.LocalName">
            <summary>设置 XmlDeclaration.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.LocalNameGet">
            <summary>设置 XmlDeclaration.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Name">
            <summary>设置 XmlDeclaration.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.NameGet">
            <summary>设置 XmlDeclaration.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.NodeType">
            <summary>设置 XmlDeclaration.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.NodeTypeGet">
            <summary>设置 XmlDeclaration.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDeclaration.Value">
            <summary>设置 XmlDeclaration.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ValueGet">
            <summary>设置 XmlDeclaration.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.ValueSetString">
            <summary>设置 XmlDeclaration.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDeclaration.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.WriteContentToXmlWriter">
            <summary>设置 XmlDeclaration.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDeclaration.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDeclaration.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDeclaration.WriteToXmlWriter">
            <summary>设置 XmlDeclaration.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlDocument">
            <summary>System.Xml.XmlDocument 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.#ctor(System.Xml.XmlImplementation)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlDocument.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlDocument.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlDocument.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.BaseURI">
            <summary>设置 XmlDocument.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.BaseURIGet">
            <summary>设置 XmlDocument.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CloneNode(System.Boolean)">
            <summary>设置 XmlDocument.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CloneNodeBoolean">
            <summary>设置 XmlDocument.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateAttribute(String prefix, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateAttributeStringStringString">
            <summary>设置 XmlDocument.CreateAttribute(String prefix, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateCDataSection(System.String)">
            <summary>设置 XmlDocument.CreateCDataSection(String data) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateCDataSectionString">
            <summary>设置 XmlDocument.CreateCDataSection(String data) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateComment(System.String)">
            <summary>设置 XmlDocument.CreateComment(String data) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateCommentString">
            <summary>设置 XmlDocument.CreateComment(String data) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateDefaultAttribute(String prefix, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateDefaultAttributeStringStringString">
            <summary>设置 XmlDocument.CreateDefaultAttribute(String prefix, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateDocumentFragment">
            <summary>设置 XmlDocument.CreateDocumentFragment() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateDocumentFragment01">
            <summary>设置 XmlDocument.CreateDocumentFragment() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateDocumentType(String name, String publicId, String systemId, String internalSubset) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateDocumentTypeStringStringStringString">
            <summary>设置 XmlDocument.CreateDocumentType(String name, String publicId, String systemId, String internalSubset) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateElement(System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateElement(String prefix, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateElementStringStringString">
            <summary>设置 XmlDocument.CreateElement(String prefix, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateEntityReference(System.String)">
            <summary>设置 XmlDocument.CreateEntityReference(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateEntityReferenceString">
            <summary>设置 XmlDocument.CreateEntityReference(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateNavigator">
            <summary>设置 XmlDocument.CreateNavigator() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateNavigator(System.Xml.XmlNode)">
            <summary>设置 XmlDocument.CreateNavigator(XmlNode node) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateNavigator01">
            <summary>设置 XmlDocument.CreateNavigator() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateNavigatorXmlNode">
            <summary>设置 XmlDocument.CreateNavigator(XmlNode node) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateNode(System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateNode(String nodeTypeString, String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String prefix, String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateNodeStringStringString">
            <summary>设置 XmlDocument.CreateNode(String nodeTypeString, String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateNodeXmlNodeTypeStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateNodeXmlNodeTypeStringStringString">
            <summary>设置 XmlDocument.CreateNode(XmlNodeType type, String prefix, String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateProcessingInstruction(System.String,System.String)">
            <summary>设置 XmlDocument.CreateProcessingInstruction(String target, String data) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateProcessingInstructionStringString">
            <summary>设置 XmlDocument.CreateProcessingInstruction(String target, String data) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateSignificantWhitespace(System.String)">
            <summary>设置 XmlDocument.CreateSignificantWhitespace(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateSignificantWhitespaceString">
            <summary>设置 XmlDocument.CreateSignificantWhitespace(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateTextNode(System.String)">
            <summary>设置 XmlDocument.CreateTextNode(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateTextNodeString">
            <summary>设置 XmlDocument.CreateTextNode(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateWhitespace(System.String)">
            <summary>设置 XmlDocument.CreateWhitespace(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateWhitespaceString">
            <summary>设置 XmlDocument.CreateWhitespace(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
            <summary>设置 XmlDocument.CreateXmlDeclaration(String version, String encoding, String standalone) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.CreateXmlDeclarationStringStringString">
            <summary>设置 XmlDocument.CreateXmlDeclaration(String version, String encoding, String standalone) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.DocumentType">
            <summary>设置 XmlDocument.get_DocumentType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.DocumentTypeGet">
            <summary>设置 XmlDocument.get_DocumentType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.GetElementById(System.String)">
            <summary>设置 XmlDocument.GetElementById(String elementId) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.GetElementByIdString">
            <summary>设置 XmlDocument.GetElementById(String elementId) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.GetElementsByTagName(System.String)">
            <summary>设置 XmlDocument.GetElementsByTagName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.GetElementsByTagName(System.String,System.String)">
            <summary>设置 XmlDocument.GetElementsByTagName(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.GetElementsByTagNameString">
            <summary>设置 XmlDocument.GetElementsByTagName(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.GetElementsByTagNameStringString">
            <summary>设置 XmlDocument.GetElementsByTagName(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
            <summary>设置 XmlDocument.ImportNode(XmlNode node, Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ImportNodeXmlNodeBoolean">
            <summary>设置 XmlDocument.ImportNode(XmlNode node, Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.InitializeStub">
            <summary>初始化 type StubXmlDocument 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.InnerText">
            <summary>设置 XmlDocument.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.InnerTextSetString">
            <summary>设置 XmlDocument.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.InnerXml">
            <summary>设置 XmlDocument.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.InnerXmlGet">
            <summary>设置 XmlDocument.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.InnerXmlSetString">
            <summary>设置 XmlDocument.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.IsReadOnly">
            <summary>设置 XmlDocument.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.IsReadOnlyGet">
            <summary>设置 XmlDocument.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Load(System.Xml.XmlReader)">
            <summary>设置 XmlDocument.Load(XmlReader reader) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Load(System.String)">
            <summary>设置 XmlDocument.Load(String filename) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Load(System.IO.Stream)">
            <summary>设置 XmlDocument.Load(Stream inStream) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Load(System.IO.TextReader)">
            <summary>设置 XmlDocument.Load(TextReader txtReader) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LoadStream">
            <summary>设置 XmlDocument.Load(Stream inStream) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LoadString">
            <summary>设置 XmlDocument.Load(String filename) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LoadTextReader">
            <summary>设置 XmlDocument.Load(TextReader txtReader) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.LoadXml(System.String)">
            <summary>设置 XmlDocument.LoadXml(String xml) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LoadXmlReader">
            <summary>设置 XmlDocument.Load(XmlReader reader) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LoadXmlString">
            <summary>设置 XmlDocument.LoadXml(String xml) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.LocalName">
            <summary>设置 XmlDocument.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.LocalNameGet">
            <summary>设置 XmlDocument.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Name">
            <summary>设置 XmlDocument.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.NameGet">
            <summary>设置 XmlDocument.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.NextSibling">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.NextSiblingGet">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.NodeType">
            <summary>设置 XmlDocument.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.NodeTypeGet">
            <summary>设置 XmlDocument.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.OwnerDocument">
            <summary>设置 XmlDocument.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.OwnerDocumentGet">
            <summary>设置 XmlDocument.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.ParentNode">
            <summary>设置 XmlDocument.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ParentNodeGet">
            <summary>设置 XmlDocument.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.PreviousSibling">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.PreviousSiblingGet">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.ReadNode(System.Xml.XmlReader)">
            <summary>设置 XmlDocument.ReadNode(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ReadNodeXmlReader">
            <summary>设置 XmlDocument.ReadNode(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Save(System.Xml.XmlWriter)">
            <summary>设置 XmlDocument.Save(XmlWriter w) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Save(System.String)">
            <summary>设置 XmlDocument.Save(String filename) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Save(System.IO.Stream)">
            <summary>设置 XmlDocument.Save(Stream outStream) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Save(System.IO.TextWriter)">
            <summary>设置 XmlDocument.Save(TextWriter writer) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SaveStream">
            <summary>设置 XmlDocument.Save(Stream outStream) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SaveString">
            <summary>设置 XmlDocument.Save(String filename) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SaveTextWriter">
            <summary>设置 XmlDocument.Save(TextWriter writer) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SaveXmlWriter">
            <summary>设置 XmlDocument.Save(XmlWriter w) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.SchemaInfo">
            <summary>设置 XmlDocument.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SchemaInfoGet">
            <summary>设置 XmlDocument.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.Value">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocument.WriteContentTo(XmlWriter xw) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.WriteContentToXmlWriter">
            <summary>设置 XmlDocument.WriteContentTo(XmlWriter xw) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocument.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocument.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.WriteToXmlWriter">
            <summary>设置 XmlDocument.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocument.XmlResolver">
            <summary>设置 XmlDocument.set_XmlResolver(XmlResolver value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocument.XmlResolverSetXmlResolver">
            <summary>设置 XmlDocument.set_XmlResolver(XmlResolver value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlDocumentFragment">
            <summary>System.Xml.XmlDocumentFragment 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlDocumentFragment.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlDocumentFragment.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlDocumentFragment.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlDocumentFragment.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.CloneNode(System.Boolean)">
            <summary>设置 XmlDocumentFragment.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.CloneNodeBoolean">
            <summary>设置 XmlDocumentFragment.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.InitializeStub">
            <summary>初始化 type StubXmlDocumentFragment 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.InnerText">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InnerTextGet">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InnerTextSetString">
            <summary>设置 XmlNode.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.InnerXml">
            <summary>设置 XmlDocumentFragment.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InnerXmlGet">
            <summary>设置 XmlDocumentFragment.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InnerXmlSetString">
            <summary>设置 XmlDocumentFragment.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.LocalName">
            <summary>设置 XmlDocumentFragment.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.LocalNameGet">
            <summary>设置 XmlDocumentFragment.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Name">
            <summary>设置 XmlDocumentFragment.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.NameGet">
            <summary>设置 XmlDocumentFragment.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.NextSibling">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.NextSiblingGet">
            <summary>设置 XmlNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.NodeType">
            <summary>设置 XmlDocumentFragment.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.NodeTypeGet">
            <summary>设置 XmlDocumentFragment.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.OwnerDocument">
            <summary>设置 XmlDocumentFragment.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.OwnerDocumentGet">
            <summary>设置 XmlDocumentFragment.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.ParentNode">
            <summary>设置 XmlDocumentFragment.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ParentNodeGet">
            <summary>设置 XmlDocumentFragment.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.PreviousSibling">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.PreviousSiblingGet">
            <summary>设置 XmlNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentFragment.Value">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocumentFragment.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocumentFragment.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentFragment.WriteToXmlWriter">
            <summary>设置 XmlDocumentFragment.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlDocumentType">
            <summary>System.Xml.XmlDocumentType 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlDocumentType.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlDocumentType.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlDocumentType.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlDocumentType.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.CloneNode(System.Boolean)">
            <summary>设置 XmlDocumentType.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.CloneNodeBoolean">
            <summary>设置 XmlDocumentType.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.InitializeStub">
            <summary>初始化 type StubXmlDocumentType 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.InnerText">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InnerTextGet">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InnerTextSetString">
            <summary>设置 XmlNode.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.IsReadOnly">
            <summary>设置 XmlDocumentType.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.IsReadOnlyGet">
            <summary>设置 XmlDocumentType.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.LocalName">
            <summary>设置 XmlDocumentType.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.LocalNameGet">
            <summary>设置 XmlDocumentType.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Name">
            <summary>设置 XmlDocumentType.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.NameGet">
            <summary>设置 XmlDocumentType.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.NodeType">
            <summary>设置 XmlDocumentType.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.NodeTypeGet">
            <summary>设置 XmlDocumentType.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlDocumentType.Value">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocumentType.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.WriteContentToXmlWriter">
            <summary>设置 XmlDocumentType.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlDocumentType.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlDocumentType.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlDocumentType.WriteToXmlWriter">
            <summary>设置 XmlDocumentType.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlElement">
            <summary>System.Xml.XmlElement 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlElement.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlElement.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlElement.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlElement.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Attributes">
            <summary>设置 XmlElement.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.AttributesGet">
            <summary>设置 XmlElement.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.CloneNode(System.Boolean)">
            <summary>设置 XmlElement.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.CloneNodeBoolean">
            <summary>设置 XmlElement.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetAttribute(System.String)">
            <summary>设置 XmlElement.GetAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetAttribute(System.String,System.String)">
            <summary>设置 XmlElement.GetAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetAttributeNode(System.String)">
            <summary>设置 XmlElement.GetAttributeNode(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetAttributeNode(System.String,System.String)">
            <summary>设置 XmlElement.GetAttributeNode(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetAttributeNodeString">
            <summary>设置 XmlElement.GetAttributeNode(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetAttributeNodeStringString">
            <summary>设置 XmlElement.GetAttributeNode(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetAttributeString">
            <summary>设置 XmlElement.GetAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetAttributeStringString">
            <summary>设置 XmlElement.GetAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetElementsByTagName(System.String)">
            <summary>设置 XmlElement.GetElementsByTagName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetElementsByTagName(System.String,System.String)">
            <summary>设置 XmlElement.GetElementsByTagName(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetElementsByTagNameString">
            <summary>设置 XmlElement.GetElementsByTagName(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetElementsByTagNameStringString">
            <summary>设置 XmlElement.GetElementsByTagName(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.HasAttribute(System.String)">
            <summary>设置 XmlElement.HasAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.HasAttribute(System.String,System.String)">
            <summary>设置 XmlElement.HasAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.HasAttributeString">
            <summary>设置 XmlElement.HasAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.HasAttributeStringString">
            <summary>设置 XmlElement.HasAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.HasAttributes">
            <summary>设置 XmlElement.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.HasAttributesGet">
            <summary>设置 XmlElement.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.InitializeStub">
            <summary>初始化 type StubXmlElement 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.InnerText">
            <summary>设置 XmlElement.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InnerTextGet">
            <summary>设置 XmlElement.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InnerTextSetString">
            <summary>设置 XmlElement.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.InnerXml">
            <summary>设置 XmlElement.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InnerXmlGet">
            <summary>设置 XmlElement.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InnerXmlSetString">
            <summary>设置 XmlElement.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.LocalName">
            <summary>设置 XmlElement.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.LocalNameGet">
            <summary>设置 XmlElement.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Name">
            <summary>设置 XmlElement.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.NameGet">
            <summary>设置 XmlElement.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.NamespaceURI">
            <summary>设置 XmlElement.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.NamespaceURIGet">
            <summary>设置 XmlElement.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.NextSibling">
            <summary>设置 XmlElement.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.NextSiblingGet">
            <summary>设置 XmlElement.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.NodeType">
            <summary>设置 XmlElement.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.NodeTypeGet">
            <summary>设置 XmlElement.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.OwnerDocument">
            <summary>设置 XmlElement.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.OwnerDocumentGet">
            <summary>设置 XmlElement.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.ParentNode">
            <summary>设置 XmlElement.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ParentNodeGet">
            <summary>设置 XmlElement.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Prefix">
            <summary>设置 XmlElement.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.PrefixGet">
            <summary>设置 XmlElement.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.PrefixSetString">
            <summary>设置 XmlElement.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAll">
            <summary>设置 XmlElement.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAll01">
            <summary>设置 XmlElement.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAllAttributes">
            <summary>设置 XmlElement.RemoveAllAttributes() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAllAttributes01">
            <summary>设置 XmlElement.RemoveAllAttributes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAttribute(System.String)">
            <summary>设置 XmlElement.RemoveAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAttribute(System.String,System.String)">
            <summary>设置 XmlElement.RemoveAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAttributeAt(System.Int32)">
            <summary>设置 XmlElement.RemoveAttributeAt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAttributeAtInt32">
            <summary>设置 XmlElement.RemoveAttributeAt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
            <summary>设置 XmlElement.RemoveAttributeNode(XmlAttribute oldAttr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveAttributeNode(System.String,System.String)">
            <summary>设置 XmlElement.RemoveAttributeNode(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAttributeNodeStringString">
            <summary>设置 XmlElement.RemoveAttributeNode(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.RemoveAttributeNode(XmlAttribute oldAttr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAttributeString">
            <summary>设置 XmlElement.RemoveAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveAttributeStringString">
            <summary>设置 XmlElement.RemoveAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.SchemaInfo">
            <summary>设置 XmlElement.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SchemaInfoGet">
            <summary>设置 XmlElement.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.SetAttribute(System.String,System.String)">
            <summary>设置 XmlElement.SetAttribute(String name, String value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.SetAttribute(System.String,System.String,System.String)">
            <summary>设置 XmlElement.SetAttribute(String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
            <summary>设置 XmlElement.SetAttributeNode(XmlAttribute newAttr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.SetAttributeNode(System.String,System.String)">
            <summary>设置 XmlElement.SetAttributeNode(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SetAttributeNodeStringString">
            <summary>设置 XmlElement.SetAttributeNode(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SetAttributeNodeXmlAttribute">
            <summary>设置 XmlElement.SetAttributeNode(XmlAttribute newAttr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SetAttributeStringString">
            <summary>设置 XmlElement.SetAttribute(String name, String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SetAttributeStringStringString">
            <summary>设置 XmlElement.SetAttribute(String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlElement.Value">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ValueGet">
            <summary>设置 XmlNode.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.ValueSetString">
            <summary>设置 XmlNode.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlElement.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.WriteContentToXmlWriter">
            <summary>设置 XmlElement.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlElement.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlElement.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlElement.WriteToXmlWriter">
            <summary>设置 XmlElement.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlEntityReference">
            <summary>System.Xml.XmlEntityReference 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlEntityReference.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlEntityReference.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlEntityReference.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlEntityReference.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.BaseURI">
            <summary>设置 XmlEntityReference.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.BaseURIGet">
            <summary>设置 XmlEntityReference.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.CloneNode(System.Boolean)">
            <summary>设置 XmlEntityReference.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.CloneNodeBoolean">
            <summary>设置 XmlEntityReference.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.InitializeStub">
            <summary>初始化 type StubXmlEntityReference 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.InnerText">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InnerTextGet">
            <summary>设置 XmlNode.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InnerTextSetString">
            <summary>设置 XmlNode.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.IsReadOnly">
            <summary>设置 XmlEntityReference.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.IsReadOnlyGet">
            <summary>设置 XmlEntityReference.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.LocalName">
            <summary>设置 XmlEntityReference.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.LocalNameGet">
            <summary>设置 XmlEntityReference.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Name">
            <summary>设置 XmlEntityReference.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.NameGet">
            <summary>设置 XmlEntityReference.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.NodeType">
            <summary>设置 XmlEntityReference.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.NodeTypeGet">
            <summary>设置 XmlEntityReference.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlEntityReference.Value">
            <summary>设置 XmlEntityReference.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ValueGet">
            <summary>设置 XmlEntityReference.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.ValueSetString">
            <summary>设置 XmlEntityReference.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlEntityReference.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.WriteContentToXmlWriter">
            <summary>设置 XmlEntityReference.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlEntityReference.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlEntityReference.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlEntityReference.WriteToXmlWriter">
            <summary>设置 XmlEntityReference.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlException">
            <summary>System.Xml.XmlException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXmlException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXmlException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XmlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.InitializeStub">
            <summary>初始化 type StubXmlException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.Message">
            <summary>设置 XmlException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.MessageGet">
            <summary>设置 XmlException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlImplementation">
            <summary>System.Xml.XmlImplementation 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlImplementation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlImplementation.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlImplementation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlImplementation.CreateDocument">
            <summary>设置 XmlImplementation.CreateDocument() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlImplementation.CreateDocument01">
            <summary>设置 XmlImplementation.CreateDocument() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlImplementation.InitializeStub">
            <summary>初始化 type StubXmlImplementation 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlImplementation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlImplementation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlNameTable">
            <summary>System.Xml.XmlNameTable 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.Add(System.String)">
            <summary>设置 XmlNameTable.Add(String array) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlNameTable.Add(Char[] array, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNameTable.AddCharArrayInt32Int32">
            <summary>设置 XmlNameTable.Add(Char[] array, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNameTable.AddString">
            <summary>设置 XmlNameTable.Add(String array) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNameTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.Get(System.String)">
            <summary>设置 XmlNameTable.Get(String array) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlNameTable.Get(Char[] array, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNameTable.GetCharArrayInt32Int32">
            <summary>设置 XmlNameTable.Get(Char[] array, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNameTable.GetString">
            <summary>设置 XmlNameTable.Get(String array) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNameTable.InitializeStub">
            <summary>初始化 type StubXmlNameTable 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNameTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNameTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlNamespaceManager">
            <summary>System.Xml.XmlNamespaceManager 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.AddNamespace(System.String,System.String)">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.AddNamespaceStringString">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNamespaceManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNamespaceManager.DefaultNamespace">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.DefaultNamespaceGet">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.GetEnumerator">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.GetEnumerator01">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.HasNamespace(System.String)">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.HasNamespaceString">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.InitializeStub">
            <summary>初始化 type StubXmlNamespaceManager 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNamespaceManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNamespaceManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.LookupNamespace(System.String)">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.LookupNamespaceString">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.LookupPrefix(System.String)">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.LookupPrefixString">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNamespaceManager.NameTable">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.NameTableGet">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.PopScope">
            <summary>设置 XmlNamespaceManager.PopScope() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.PopScope01">
            <summary>设置 XmlNamespaceManager.PopScope() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.PushScope">
            <summary>设置 XmlNamespaceManager.PushScope() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.PushScope01">
            <summary>设置 XmlNamespaceManager.PushScope() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNamespaceManager.RemoveNamespace(System.String,System.String)">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNamespaceManager.RemoveNamespaceStringString">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlNodeChangedEventArgs">
            <summary>System.Xml.XmlNodeChangedEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeChangedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeChangedEventArgs.InitializeStub">
            <summary>初始化 type StubXmlNodeChangedEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeChangedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeChangedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlNodeList">
            <summary>System.Xml.XmlNodeList 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeList.Count">
            <summary>设置 XmlNodeList.get_Count() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeList.CountGet">
            <summary>设置 XmlNodeList.get_Count() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeList.GetEnumerator">
            <summary>设置 XmlNodeList.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeList.GetEnumerator01">
            <summary>设置 XmlNodeList.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeList.InitializeStub">
            <summary>初始化 type StubXmlNodeList 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeList.Item(System.Int32)">
            <summary>设置 XmlNodeList.Item(Int32 index) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeList.ItemInt32">
            <summary>设置 XmlNodeList.Item(Int32 index) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeList.PrivateDisposeNodeList">
            <summary>设置 XmlNodeList.PrivateDisposeNodeList() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeList.PrivateDisposeNodeList01">
            <summary>设置 XmlNodeList.PrivateDisposeNodeList() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlNodeReader">
            <summary>System.Xml.XmlNodeReader 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.#ctor(System.Xml.XmlNode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.AttributeCount">
            <summary>设置 XmlNodeReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.AttributeCountGet">
            <summary>设置 XmlNodeReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.BaseURI">
            <summary>设置 XmlNodeReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.BaseURIGet">
            <summary>设置 XmlNodeReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.CanReadBinaryContent">
            <summary>设置 XmlNodeReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.CanReadBinaryContentGet">
            <summary>设置 XmlNodeReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.CanReadValueChunk">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.CanReadValueChunkGet">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.CanResolveEntity">
            <summary>设置 XmlNodeReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.CanResolveEntityGet">
            <summary>设置 XmlNodeReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.Close">
            <summary>设置 XmlNodeReader.Close() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.Close01">
            <summary>设置 XmlNodeReader.Close() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Depth">
            <summary>设置 XmlNodeReader.get_Depth() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.DepthGet">
            <summary>设置 XmlNodeReader.get_Depth() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.Dispose(System.Boolean)">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.DisposeBoolean">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.EOF">
            <summary>设置 XmlNodeReader.get_EOF() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.EOFGet">
            <summary>设置 XmlNodeReader.get_EOF() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.GetAttribute(System.Int32)">
            <summary>设置 XmlNodeReader.GetAttribute(Int32 attributeIndex) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.GetAttribute(System.String)">
            <summary>设置 XmlNodeReader.GetAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.GetAttribute(System.String,System.String)">
            <summary>设置 XmlNodeReader.GetAttribute(String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.GetAttributeInt32">
            <summary>设置 XmlNodeReader.GetAttribute(Int32 attributeIndex) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.GetAttributeString">
            <summary>设置 XmlNodeReader.GetAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.GetAttributeStringString">
            <summary>设置 XmlNodeReader.GetAttribute(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.GetValueAsync">
            <summary>设置 XmlReader.GetValueAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.GetValueAsync01">
            <summary>设置 XmlReader.GetValueAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.HasAttributes">
            <summary>设置 XmlNodeReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.HasAttributesGet">
            <summary>设置 XmlNodeReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.HasValue">
            <summary>设置 XmlNodeReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.HasValueGet">
            <summary>设置 XmlNodeReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.InitializeStub">
            <summary>初始化 type StubXmlNodeReader 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.IsDefault">
            <summary>设置 XmlNodeReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.IsDefaultGet">
            <summary>设置 XmlNodeReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.IsEmptyElement">
            <summary>设置 XmlNodeReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.IsEmptyElementGet">
            <summary>设置 XmlNodeReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.IsStartElement">
            <summary>设置 XmlReader.IsStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.IsStartElement(System.String)">
            <summary>设置 XmlReader.IsStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.IsStartElement(System.String,System.String)">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.IsStartElement01">
            <summary>设置 XmlReader.IsStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.IsStartElementString">
            <summary>设置 XmlReader.IsStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.IsStartElementStringString">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Item(System.Int32)">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Item(System.String)">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Item(System.String,System.String)">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ItemGetInt32">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ItemGetString">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ItemGetStringString">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.LocalName">
            <summary>设置 XmlNodeReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.LocalNameGet">
            <summary>设置 XmlNodeReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.LookupNamespace(System.String)">
            <summary>设置 XmlNodeReader.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.LookupNamespaceString">
            <summary>设置 XmlNodeReader.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToAttribute(System.String)">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToAttribute(System.String,System.String)">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToAttribute(System.Int32)">
            <summary>设置 XmlNodeReader.MoveToAttribute(Int32 attributeIndex) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToAttributeInt32">
            <summary>设置 XmlNodeReader.MoveToAttribute(Int32 attributeIndex) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToAttributeString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToAttributeStringString">
            <summary>设置 XmlNodeReader.MoveToAttribute(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToContent">
            <summary>设置 XmlReader.MoveToContent() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToContent01">
            <summary>设置 XmlReader.MoveToContent() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToContentAsync">
            <summary>设置 XmlReader.MoveToContentAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToContentAsync01">
            <summary>设置 XmlReader.MoveToContentAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToElement">
            <summary>设置 XmlNodeReader.MoveToElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToElement01">
            <summary>设置 XmlNodeReader.MoveToElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToFirstAttribute">
            <summary>设置 XmlNodeReader.MoveToFirstAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToFirstAttribute01">
            <summary>设置 XmlNodeReader.MoveToFirstAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.MoveToNextAttribute">
            <summary>设置 XmlNodeReader.MoveToNextAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.MoveToNextAttribute01">
            <summary>设置 XmlNodeReader.MoveToNextAttribute() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Name">
            <summary>设置 XmlNodeReader.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.NameGet">
            <summary>设置 XmlNodeReader.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.NameTable">
            <summary>设置 XmlNodeReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.NameTableGet">
            <summary>设置 XmlNodeReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.NamespaceURI">
            <summary>设置 XmlNodeReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.NamespaceURIGet">
            <summary>设置 XmlNodeReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.NodeType">
            <summary>设置 XmlNodeReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.NodeTypeGet">
            <summary>设置 XmlNodeReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Prefix">
            <summary>设置 XmlNodeReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.PrefixGet">
            <summary>设置 XmlNodeReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.QuoteChar">
            <summary>设置 XmlReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.QuoteCharGet">
            <summary>设置 XmlReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.Read">
            <summary>设置 XmlNodeReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.Read01">
            <summary>设置 XmlNodeReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadAsync">
            <summary>设置 XmlReader.ReadAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadAsync01">
            <summary>设置 XmlReader.ReadAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadAttributeValue">
            <summary>设置 XmlNodeReader.ReadAttributeValue() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadAttributeValue01">
            <summary>设置 XmlNodeReader.ReadAttributeValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlNodeReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlNodeReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBoolean">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsBoolean01">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDateTime">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDateTime01">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDateTimeOffset">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDateTimeOffset01">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDecimal">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDecimal01">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDouble">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsDouble01">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsFloat">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsFloat01">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsInt">
            <summary>设置 XmlReader.ReadContentAsInt() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsInt01">
            <summary>设置 XmlReader.ReadContentAsInt() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsLong">
            <summary>设置 XmlReader.ReadContentAsLong() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsLong01">
            <summary>设置 XmlReader.ReadContentAsLong() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsObject">
            <summary>设置 XmlReader.ReadContentAsObject() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsObject01">
            <summary>设置 XmlReader.ReadContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsObjectAsync">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsString">
            <summary>设置 XmlReader.ReadContentAsString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsString01">
            <summary>设置 XmlReader.ReadContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsStringAsync">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsStringAsync01">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlNodeReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlNodeReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlNodeReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBoolean">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBoolean(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBoolean01">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsBooleanStringString">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDateTime">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDateTime(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDateTime01">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDateTimeStringString">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDecimal">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDecimal(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDecimal01">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDecimalStringString">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDouble">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDouble(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDouble01">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsDoubleStringString">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsFloat">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsFloat(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsFloat01">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsFloatStringString">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsInt">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsInt(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsInt01">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsIntStringString">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsLong">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsLong(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsLong01">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsLongStringString">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObject">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObject(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObject01">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObjectAsync">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsObjectStringString">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsString">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsString01">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsStringAsync">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsStringAsync01">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsStringStringString">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementString">
            <summary>设置 XmlReader.ReadElementString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementString(System.String)">
            <summary>设置 XmlReader.ReadElementString(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadElementString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementString01">
            <summary>设置 XmlReader.ReadElementString() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementStringString">
            <summary>设置 XmlReader.ReadElementString(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadElementStringStringString">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadEndElement">
            <summary>设置 XmlReader.ReadEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadEndElement01">
            <summary>设置 XmlReader.ReadEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadInnerXml">
            <summary>设置 XmlReader.ReadInnerXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadInnerXml01">
            <summary>设置 XmlReader.ReadInnerXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadInnerXmlAsync">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadInnerXmlAsync01">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadOuterXml">
            <summary>设置 XmlReader.ReadOuterXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadOuterXml01">
            <summary>设置 XmlReader.ReadOuterXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadOuterXmlAsync">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadOuterXmlAsync01">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadStartElement">
            <summary>设置 XmlReader.ReadStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadStartElement(System.String)">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadStartElement(System.String,System.String)">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadStartElement01">
            <summary>设置 XmlReader.ReadStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadStartElementString">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadStartElementStringString">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.ReadState">
            <summary>设置 XmlNodeReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadStateGet">
            <summary>设置 XmlNodeReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadString">
            <summary>设置 XmlNodeReader.ReadString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadString01">
            <summary>设置 XmlNodeReader.ReadString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadSubtree">
            <summary>设置 XmlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadSubtree01">
            <summary>设置 XmlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToDescendant(System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToDescendant(System.String,System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToDescendantString">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToDescendantStringString">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToFollowing(System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToFollowing(System.String,System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToFollowingString">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToFollowingStringString">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToNextSibling(System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadToNextSibling(System.String,System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToNextSiblingString">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadToNextSiblingStringString">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ReadValueChunkCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.ResolveEntity">
            <summary>设置 XmlNodeReader.ResolveEntity() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ResolveEntity01">
            <summary>设置 XmlNodeReader.ResolveEntity() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.SchemaInfo">
            <summary>设置 XmlNodeReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.SchemaInfoGet">
            <summary>设置 XmlNodeReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Settings">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.SettingsGet">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.Skip">
            <summary>设置 XmlNodeReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.Skip01">
            <summary>设置 XmlNodeReader.Skip() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlNodeReader.SkipAsync">
            <summary>设置 XmlReader.SkipAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.SkipAsync01">
            <summary>设置 XmlReader.SkipAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.Value">
            <summary>设置 XmlNodeReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ValueGet">
            <summary>设置 XmlNodeReader.get_Value() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.ValueType">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.ValueTypeGet">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.XmlLang">
            <summary>设置 XmlNodeReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.XmlLangGet">
            <summary>设置 XmlNodeReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlNodeReader.XmlSpace">
            <summary>设置 XmlNodeReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlNodeReader.XmlSpaceGet">
            <summary>设置 XmlNodeReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlParserContext">
            <summary>System.Xml.XmlParserContext 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlParserContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlParserContext.InitializeStub">
            <summary>初始化 type StubXmlParserContext 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlParserContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlParserContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlProcessingInstruction">
            <summary>System.Xml.XmlProcessingInstruction 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlProcessingInstruction.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlProcessingInstruction.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlProcessingInstruction.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlProcessingInstruction.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.CloneNode(System.Boolean)">
            <summary>设置 XmlProcessingInstruction.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.CloneNodeBoolean">
            <summary>设置 XmlProcessingInstruction.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.InitializeStub">
            <summary>初始化 type StubXmlProcessingInstruction 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.InnerText">
            <summary>设置 XmlProcessingInstruction.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InnerTextGet">
            <summary>设置 XmlProcessingInstruction.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InnerTextSetString">
            <summary>设置 XmlProcessingInstruction.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.LocalName">
            <summary>设置 XmlProcessingInstruction.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.LocalNameGet">
            <summary>设置 XmlProcessingInstruction.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Name">
            <summary>设置 XmlProcessingInstruction.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.NameGet">
            <summary>设置 XmlProcessingInstruction.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.NodeType">
            <summary>设置 XmlProcessingInstruction.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.NodeTypeGet">
            <summary>设置 XmlProcessingInstruction.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.ParentNode">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ParentNodeGet">
            <summary>设置 XmlNode.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.PreviousText">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.PreviousTextGet">
            <summary>设置 XmlNode.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlProcessingInstruction.Value">
            <summary>设置 XmlProcessingInstruction.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ValueGet">
            <summary>设置 XmlProcessingInstruction.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.ValueSetString">
            <summary>设置 XmlProcessingInstruction.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlProcessingInstruction.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.WriteContentToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlProcessingInstruction.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlProcessingInstruction.WriteToXmlWriter">
            <summary>设置 XmlProcessingInstruction.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlQualifiedName">
            <summary>System.Xml.XmlQualifiedName 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlQualifiedName.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.Equals(System.Object)">
            <summary>设置 XmlQualifiedName.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlQualifiedName.EqualsObject">
            <summary>设置 XmlQualifiedName.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.GetHashCode">
            <summary>设置 XmlQualifiedName.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlQualifiedName.GetHashCode01">
            <summary>设置 XmlQualifiedName.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlQualifiedName.InitializeStub">
            <summary>初始化 type StubXmlQualifiedName 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlQualifiedName.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlQualifiedName.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlReader">
            <summary>System.Xml.XmlReader 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.AttributeCount">
            <summary>设置 XmlReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.AttributeCountGet">
            <summary>设置 XmlReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.BaseURI">
            <summary>设置 XmlReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.BaseURIGet">
            <summary>设置 XmlReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.CanReadBinaryContent">
            <summary>设置 XmlReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.CanReadBinaryContentGet">
            <summary>设置 XmlReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.CanReadValueChunk">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.CanReadValueChunkGet">
            <summary>设置 XmlReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.CanResolveEntity">
            <summary>设置 XmlReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.CanResolveEntityGet">
            <summary>设置 XmlReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.Close">
            <summary>设置 XmlReader.Close() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.Close01">
            <summary>设置 XmlReader.Close() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Depth">
            <summary>设置 XmlReader.get_Depth() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.DepthGet">
            <summary>设置 XmlReader.get_Depth() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.Dispose(System.Boolean)">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.DisposeBoolean">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.EOF">
            <summary>设置 XmlReader.get_EOF() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.EOFGet">
            <summary>设置 XmlReader.get_EOF() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.GetAttribute(System.String)">
            <summary>设置 XmlReader.GetAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.GetAttribute(System.Int32)">
            <summary>设置 XmlReader.GetAttribute(Int32 i) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.GetAttribute(System.String,System.String)">
            <summary>设置 XmlReader.GetAttribute(String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.GetAttributeInt32">
            <summary>设置 XmlReader.GetAttribute(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.GetAttributeString">
            <summary>设置 XmlReader.GetAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.GetAttributeStringString">
            <summary>设置 XmlReader.GetAttribute(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.GetValueAsync">
            <summary>设置 XmlReader.GetValueAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.GetValueAsync01">
            <summary>设置 XmlReader.GetValueAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.HasAttributes">
            <summary>设置 XmlReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.HasAttributesGet">
            <summary>设置 XmlReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.HasValue">
            <summary>设置 XmlReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.HasValueGet">
            <summary>设置 XmlReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.InitializeStub">
            <summary>初始化 type StubXmlReader 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.IsDefault">
            <summary>设置 XmlReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.IsDefaultGet">
            <summary>设置 XmlReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.IsEmptyElement">
            <summary>设置 XmlReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.IsEmptyElementGet">
            <summary>设置 XmlReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.IsStartElement">
            <summary>设置 XmlReader.IsStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.IsStartElement(System.String)">
            <summary>设置 XmlReader.IsStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.IsStartElement(System.String,System.String)">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.IsStartElement01">
            <summary>设置 XmlReader.IsStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.IsStartElementString">
            <summary>设置 XmlReader.IsStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.IsStartElementStringString">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Item(System.Int32)">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Item(System.String)">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Item(System.String,System.String)">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ItemGetInt32">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ItemGetString">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ItemGetStringString">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.LocalName">
            <summary>设置 XmlReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.LocalNameGet">
            <summary>设置 XmlReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.LookupNamespace(System.String)">
            <summary>设置 XmlReader.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.LookupNamespaceString">
            <summary>设置 XmlReader.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToAttribute(System.String)">
            <summary>设置 XmlReader.MoveToAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToAttribute(System.String,System.String)">
            <summary>设置 XmlReader.MoveToAttribute(String name, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToAttribute(System.Int32)">
            <summary>设置 XmlReader.MoveToAttribute(Int32 i) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToAttributeInt32">
            <summary>设置 XmlReader.MoveToAttribute(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToAttributeString">
            <summary>设置 XmlReader.MoveToAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToAttributeStringString">
            <summary>设置 XmlReader.MoveToAttribute(String name, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToContent">
            <summary>设置 XmlReader.MoveToContent() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToContent01">
            <summary>设置 XmlReader.MoveToContent() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToContentAsync">
            <summary>设置 XmlReader.MoveToContentAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToContentAsync01">
            <summary>设置 XmlReader.MoveToContentAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToElement">
            <summary>设置 XmlReader.MoveToElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToElement01">
            <summary>设置 XmlReader.MoveToElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToFirstAttribute">
            <summary>设置 XmlReader.MoveToFirstAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToFirstAttribute01">
            <summary>设置 XmlReader.MoveToFirstAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.MoveToNextAttribute">
            <summary>设置 XmlReader.MoveToNextAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.MoveToNextAttribute01">
            <summary>设置 XmlReader.MoveToNextAttribute() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Name">
            <summary>设置 XmlReader.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.NameGet">
            <summary>设置 XmlReader.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.NameTable">
            <summary>设置 XmlReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.NameTableGet">
            <summary>设置 XmlReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.NamespaceURI">
            <summary>设置 XmlReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.NamespaceURIGet">
            <summary>设置 XmlReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.NodeType">
            <summary>设置 XmlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.NodeTypeGet">
            <summary>设置 XmlReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Prefix">
            <summary>设置 XmlReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.PrefixGet">
            <summary>设置 XmlReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.QuoteChar">
            <summary>设置 XmlReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.QuoteCharGet">
            <summary>设置 XmlReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.Read">
            <summary>设置 XmlReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.Read01">
            <summary>设置 XmlReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadAsync">
            <summary>设置 XmlReader.ReadAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadAsync01">
            <summary>设置 XmlReader.ReadAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadAttributeValue">
            <summary>设置 XmlReader.ReadAttributeValue() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadAttributeValue01">
            <summary>设置 XmlReader.ReadAttributeValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsBoolean">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsBoolean01">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsDateTime">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsDateTime01">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsDateTimeOffset">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsDateTimeOffset01">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsDecimal">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsDecimal01">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsDouble">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsDouble01">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsFloat">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsFloat01">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsInt">
            <summary>设置 XmlReader.ReadContentAsInt() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsInt01">
            <summary>设置 XmlReader.ReadContentAsInt() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsLong">
            <summary>设置 XmlReader.ReadContentAsLong() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsLong01">
            <summary>设置 XmlReader.ReadContentAsLong() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsObject">
            <summary>设置 XmlReader.ReadContentAsObject() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsObject01">
            <summary>设置 XmlReader.ReadContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsObjectAsync">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsString">
            <summary>设置 XmlReader.ReadContentAsString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsString01">
            <summary>设置 XmlReader.ReadContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadContentAsStringAsync">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsStringAsync01">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBoolean">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBoolean(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBoolean01">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsBooleanStringString">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDateTime">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDateTime(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDateTime01">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDateTimeStringString">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDecimal">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDecimal(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDecimal01">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDecimalStringString">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDouble">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDouble(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDouble01">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsDoubleStringString">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsFloat">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsFloat(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsFloat01">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsFloatStringString">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsInt">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsInt(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsInt01">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsIntStringString">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsLong">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsLong(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsLong01">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsLongStringString">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObject">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObject(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObject01">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObjectAsync">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsObjectStringString">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsString">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsString01">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementContentAsStringAsync">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsStringAsync01">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsStringStringString">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementString">
            <summary>设置 XmlReader.ReadElementString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementString(System.String)">
            <summary>设置 XmlReader.ReadElementString(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadElementString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementString01">
            <summary>设置 XmlReader.ReadElementString() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementStringString">
            <summary>设置 XmlReader.ReadElementString(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadElementStringStringString">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadEndElement">
            <summary>设置 XmlReader.ReadEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadEndElement01">
            <summary>设置 XmlReader.ReadEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadInnerXml">
            <summary>设置 XmlReader.ReadInnerXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadInnerXml01">
            <summary>设置 XmlReader.ReadInnerXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadInnerXmlAsync">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadInnerXmlAsync01">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadOuterXml">
            <summary>设置 XmlReader.ReadOuterXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadOuterXml01">
            <summary>设置 XmlReader.ReadOuterXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadOuterXmlAsync">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadOuterXmlAsync01">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadStartElement">
            <summary>设置 XmlReader.ReadStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadStartElement(System.String)">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadStartElement(System.String,System.String)">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadStartElement01">
            <summary>设置 XmlReader.ReadStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadStartElementString">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadStartElementStringString">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.ReadState">
            <summary>设置 XmlReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadStateGet">
            <summary>设置 XmlReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadString">
            <summary>设置 XmlReader.ReadString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadString01">
            <summary>设置 XmlReader.ReadString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadSubtree">
            <summary>设置 XmlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadSubtree01">
            <summary>设置 XmlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToDescendant(System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToDescendant(System.String,System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToDescendantString">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToDescendantStringString">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToFollowing(System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToFollowing(System.String,System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToFollowingString">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToFollowingStringString">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToNextSibling(System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadToNextSibling(System.String,System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToNextSiblingString">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadToNextSiblingStringString">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ReadValueChunkCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.ResolveEntity">
            <summary>设置 XmlReader.ResolveEntity() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ResolveEntity01">
            <summary>设置 XmlReader.ResolveEntity() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.SchemaInfo">
            <summary>设置 XmlReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.SchemaInfoGet">
            <summary>设置 XmlReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Settings">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.SettingsGet">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.Skip">
            <summary>设置 XmlReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.Skip01">
            <summary>设置 XmlReader.Skip() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlReader.SkipAsync">
            <summary>设置 XmlReader.SkipAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.SkipAsync01">
            <summary>设置 XmlReader.SkipAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.Value">
            <summary>设置 XmlReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ValueGet">
            <summary>设置 XmlReader.get_Value() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.ValueType">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.ValueTypeGet">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.XmlLang">
            <summary>设置 XmlReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.XmlLangGet">
            <summary>设置 XmlReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlReader.XmlSpace">
            <summary>设置 XmlReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlReader.XmlSpaceGet">
            <summary>设置 XmlReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlResolver">
            <summary>System.Xml.XmlResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlResolver.Credentials">
            <summary>设置 XmlResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlResolver.CredentialsSetICredentials">
            <summary>设置 XmlResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>设置 XmlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
            <summary>设置 XmlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlResolver.GetEntityUriStringType">
            <summary>设置 XmlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.InitializeStub">
            <summary>初始化 type StubXmlResolver 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.ResolveUri(System.Uri,System.String)">
            <summary>设置 XmlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlResolver.ResolveUriUriString">
            <summary>设置 XmlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlResolver.SupportsType(System.Uri,System.Type)">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlResolver.SupportsTypeUriType">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlSecureResolver">
            <summary>System.Xml.XmlSecureResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSecureResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSecureResolver.Credentials">
            <summary>设置 XmlSecureResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSecureResolver.CredentialsSetICredentials">
            <summary>设置 XmlSecureResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>设置 XmlSecureResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
            <summary>设置 XmlSecureResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSecureResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlSecureResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSecureResolver.GetEntityUriStringType">
            <summary>设置 XmlSecureResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.InitializeStub">
            <summary>初始化 type StubXmlSecureResolver 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSecureResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSecureResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.ResolveUri(System.Uri,System.String)">
            <summary>设置 XmlSecureResolver.ResolveUri(Uri baseUri, String relativeUri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSecureResolver.ResolveUriUriString">
            <summary>设置 XmlSecureResolver.ResolveUri(Uri baseUri, String relativeUri) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSecureResolver.SupportsType(System.Uri,System.Type)">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSecureResolver.SupportsTypeUriType">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlSignificantWhitespace">
            <summary>System.Xml.XmlSignificantWhitespace 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlSignificantWhitespace.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlSignificantWhitespace.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlSignificantWhitespace.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlSignificantWhitespace.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlSignificantWhitespace.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.CloneNode(System.Boolean)">
            <summary>设置 XmlSignificantWhitespace.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.CloneNodeBoolean">
            <summary>设置 XmlSignificantWhitespace.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.InitializeStub">
            <summary>初始化 type StubXmlSignificantWhitespace 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.LocalName">
            <summary>设置 XmlSignificantWhitespace.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.LocalNameGet">
            <summary>设置 XmlSignificantWhitespace.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Name">
            <summary>设置 XmlSignificantWhitespace.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.NameGet">
            <summary>设置 XmlSignificantWhitespace.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.NodeType">
            <summary>设置 XmlSignificantWhitespace.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.NodeTypeGet">
            <summary>设置 XmlSignificantWhitespace.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.ParentNode">
            <summary>设置 XmlSignificantWhitespace.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ParentNodeGet">
            <summary>设置 XmlSignificantWhitespace.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.PreviousText">
            <summary>设置 XmlSignificantWhitespace.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.PreviousTextGet">
            <summary>设置 XmlSignificantWhitespace.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlSignificantWhitespace.Value">
            <summary>设置 XmlSignificantWhitespace.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ValueGet">
            <summary>设置 XmlSignificantWhitespace.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.ValueSetString">
            <summary>设置 XmlSignificantWhitespace.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlSignificantWhitespace.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.WriteContentToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlSignificantWhitespace.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlSignificantWhitespace.WriteToXmlWriter">
            <summary>设置 XmlSignificantWhitespace.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlText">
            <summary>System.Xml.XmlText 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlText.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlText.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlText.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlText.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlText.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.CloneNode(System.Boolean)">
            <summary>设置 XmlText.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.CloneNodeBoolean">
            <summary>设置 XmlText.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.InitializeStub">
            <summary>初始化 type StubXmlText 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.LocalName">
            <summary>设置 XmlText.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.LocalNameGet">
            <summary>设置 XmlText.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Name">
            <summary>设置 XmlText.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.NameGet">
            <summary>设置 XmlText.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.NodeType">
            <summary>设置 XmlText.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.NodeTypeGet">
            <summary>设置 XmlText.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.ParentNode">
            <summary>设置 XmlText.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ParentNodeGet">
            <summary>设置 XmlText.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.PreviousText">
            <summary>设置 XmlText.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.PreviousTextGet">
            <summary>设置 XmlText.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.SplitText(System.Int32)">
            <summary>设置 XmlText.SplitText(Int32 offset) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.SplitTextInt32">
            <summary>设置 XmlText.SplitText(Int32 offset) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlText.Value">
            <summary>设置 XmlText.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ValueGet">
            <summary>设置 XmlText.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.ValueSetString">
            <summary>设置 XmlText.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlText.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.WriteContentToXmlWriter">
            <summary>设置 XmlText.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlText.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlText.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlText.WriteToXmlWriter">
            <summary>设置 XmlText.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlTextReader">
            <summary>System.Xml.XmlTextReader 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.AttributeCount">
            <summary>设置 XmlTextReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.AttributeCountGet">
            <summary>设置 XmlTextReader.get_AttributeCount() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.BaseURI">
            <summary>设置 XmlTextReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.BaseURIGet">
            <summary>设置 XmlTextReader.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.CanReadBinaryContent">
            <summary>设置 XmlTextReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.CanReadBinaryContentGet">
            <summary>设置 XmlTextReader.get_CanReadBinaryContent() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.CanReadValueChunk">
            <summary>设置 XmlTextReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.CanReadValueChunkGet">
            <summary>设置 XmlTextReader.get_CanReadValueChunk() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.CanResolveEntity">
            <summary>设置 XmlTextReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.CanResolveEntityGet">
            <summary>设置 XmlTextReader.get_CanResolveEntity() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.Close">
            <summary>设置 XmlTextReader.Close() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.Close01">
            <summary>设置 XmlTextReader.Close() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Depth">
            <summary>设置 XmlTextReader.get_Depth() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.DepthGet">
            <summary>设置 XmlTextReader.get_Depth() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.Dispose(System.Boolean)">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.DisposeBoolean">
            <summary>设置 XmlReader.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.EOF">
            <summary>设置 XmlTextReader.get_EOF() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.EOFGet">
            <summary>设置 XmlTextReader.get_EOF() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.GetAttribute(System.String)">
            <summary>设置 XmlTextReader.GetAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.GetAttribute(System.Int32)">
            <summary>设置 XmlTextReader.GetAttribute(Int32 i) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.GetAttribute(System.String,System.String)">
            <summary>设置 XmlTextReader.GetAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.GetAttributeInt32">
            <summary>设置 XmlTextReader.GetAttribute(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.GetAttributeString">
            <summary>设置 XmlTextReader.GetAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.GetAttributeStringString">
            <summary>设置 XmlTextReader.GetAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.GetValueAsync">
            <summary>设置 XmlReader.GetValueAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.GetValueAsync01">
            <summary>设置 XmlReader.GetValueAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.HasAttributes">
            <summary>设置 XmlReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.HasAttributesGet">
            <summary>设置 XmlReader.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.HasValue">
            <summary>设置 XmlTextReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.HasValueGet">
            <summary>设置 XmlTextReader.get_HasValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.InitializeStub">
            <summary>初始化 type StubXmlTextReader 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.IsDefault">
            <summary>设置 XmlTextReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.IsDefaultGet">
            <summary>设置 XmlTextReader.get_IsDefault() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.IsEmptyElement">
            <summary>设置 XmlTextReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.IsEmptyElementGet">
            <summary>设置 XmlTextReader.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.IsStartElement">
            <summary>设置 XmlReader.IsStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.IsStartElement(System.String)">
            <summary>设置 XmlReader.IsStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.IsStartElement(System.String,System.String)">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.IsStartElement01">
            <summary>设置 XmlReader.IsStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.IsStartElementString">
            <summary>设置 XmlReader.IsStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.IsStartElementStringString">
            <summary>设置 XmlReader.IsStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Item(System.Int32)">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Item(System.String)">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Item(System.String,System.String)">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ItemGetInt32">
            <summary>设置 XmlReader.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ItemGetString">
            <summary>设置 XmlReader.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ItemGetStringString">
            <summary>设置 XmlReader.get_Item(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.LocalName">
            <summary>设置 XmlTextReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.LocalNameGet">
            <summary>设置 XmlTextReader.get_LocalName() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.LookupNamespace(System.String)">
            <summary>设置 XmlTextReader.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.LookupNamespaceString">
            <summary>设置 XmlTextReader.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToAttribute(System.String)">
            <summary>设置 XmlTextReader.MoveToAttribute(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToAttribute(System.String,System.String)">
            <summary>设置 XmlTextReader.MoveToAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToAttribute(System.Int32)">
            <summary>设置 XmlTextReader.MoveToAttribute(Int32 i) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToAttributeInt32">
            <summary>设置 XmlTextReader.MoveToAttribute(Int32 i) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToAttributeString">
            <summary>设置 XmlTextReader.MoveToAttribute(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToAttributeStringString">
            <summary>设置 XmlTextReader.MoveToAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToContent">
            <summary>设置 XmlReader.MoveToContent() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToContent01">
            <summary>设置 XmlReader.MoveToContent() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToContentAsync">
            <summary>设置 XmlReader.MoveToContentAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToContentAsync01">
            <summary>设置 XmlReader.MoveToContentAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToElement">
            <summary>设置 XmlTextReader.MoveToElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToElement01">
            <summary>设置 XmlTextReader.MoveToElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToFirstAttribute">
            <summary>设置 XmlTextReader.MoveToFirstAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToFirstAttribute01">
            <summary>设置 XmlTextReader.MoveToFirstAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.MoveToNextAttribute">
            <summary>设置 XmlTextReader.MoveToNextAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.MoveToNextAttribute01">
            <summary>设置 XmlTextReader.MoveToNextAttribute() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Name">
            <summary>设置 XmlTextReader.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.NameGet">
            <summary>设置 XmlTextReader.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.NameTable">
            <summary>设置 XmlTextReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.NameTableGet">
            <summary>设置 XmlTextReader.get_NameTable() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.NamespaceURI">
            <summary>设置 XmlTextReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.NamespaceURIGet">
            <summary>设置 XmlTextReader.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.NodeType">
            <summary>设置 XmlTextReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.NodeTypeGet">
            <summary>设置 XmlTextReader.get_NodeType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Prefix">
            <summary>设置 XmlTextReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.PrefixGet">
            <summary>设置 XmlTextReader.get_Prefix() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.QuoteChar">
            <summary>设置 XmlTextReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.QuoteCharGet">
            <summary>设置 XmlTextReader.get_QuoteChar() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.Read">
            <summary>设置 XmlTextReader.Read() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.Read01">
            <summary>设置 XmlTextReader.Read() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadAsync">
            <summary>设置 XmlReader.ReadAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadAsync01">
            <summary>设置 XmlReader.ReadAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadAttributeValue">
            <summary>设置 XmlTextReader.ReadAttributeValue() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadAttributeValue01">
            <summary>设置 XmlTextReader.ReadAttributeValue() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBoolean">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsBoolean01">
            <summary>设置 XmlReader.ReadContentAsBoolean() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDateTime">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDateTime01">
            <summary>设置 XmlReader.ReadContentAsDateTime() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDateTimeOffset">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDateTimeOffset01">
            <summary>设置 XmlReader.ReadContentAsDateTimeOffset() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDecimal">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDecimal01">
            <summary>设置 XmlReader.ReadContentAsDecimal() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDouble">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsDouble01">
            <summary>设置 XmlReader.ReadContentAsDouble() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsFloat">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsFloat01">
            <summary>设置 XmlReader.ReadContentAsFloat() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsInt">
            <summary>设置 XmlReader.ReadContentAsInt() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsInt01">
            <summary>设置 XmlReader.ReadContentAsInt() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsLong">
            <summary>设置 XmlReader.ReadContentAsLong() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsLong01">
            <summary>设置 XmlReader.ReadContentAsLong() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsObject">
            <summary>设置 XmlReader.ReadContentAsObject() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsObject01">
            <summary>设置 XmlReader.ReadContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsObjectAsync">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsString">
            <summary>设置 XmlReader.ReadContentAsString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsString01">
            <summary>设置 XmlReader.ReadContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadContentAsStringAsync">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsStringAsync01">
            <summary>设置 XmlReader.ReadContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBoolean">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBoolean(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBoolean01">
            <summary>设置 XmlReader.ReadElementContentAsBoolean() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsBooleanStringString">
            <summary>设置 XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDateTime">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDateTime(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDateTime01">
            <summary>设置 XmlReader.ReadElementContentAsDateTime() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDateTimeStringString">
            <summary>设置 XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDecimal">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDecimal(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDecimal01">
            <summary>设置 XmlReader.ReadElementContentAsDecimal() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDecimalStringString">
            <summary>设置 XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDouble">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDouble(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDouble01">
            <summary>设置 XmlReader.ReadElementContentAsDouble() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsDoubleStringString">
            <summary>设置 XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsFloat">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsFloat(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsFloat01">
            <summary>设置 XmlReader.ReadElementContentAsFloat() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsFloatStringString">
            <summary>设置 XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsInt">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsInt(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsInt01">
            <summary>设置 XmlReader.ReadElementContentAsInt() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsIntStringString">
            <summary>设置 XmlReader.ReadElementContentAsInt(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsLong">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsLong(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsLong01">
            <summary>设置 XmlReader.ReadElementContentAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsLongStringString">
            <summary>设置 XmlReader.ReadElementContentAsLong(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObject">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObject(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObject01">
            <summary>设置 XmlReader.ReadElementContentAsObject() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObjectAsync">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObjectAsync01">
            <summary>设置 XmlReader.ReadElementContentAsObjectAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsObjectStringString">
            <summary>设置 XmlReader.ReadElementContentAsObject(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsString">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsString01">
            <summary>设置 XmlReader.ReadElementContentAsString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsStringAsync">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsStringAsync01">
            <summary>设置 XmlReader.ReadElementContentAsStringAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsStringStringString">
            <summary>设置 XmlReader.ReadElementContentAsString(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>设置 XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementString">
            <summary>设置 XmlReader.ReadElementString() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementString(System.String)">
            <summary>设置 XmlReader.ReadElementString(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadElementString(System.String,System.String)">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementString01">
            <summary>设置 XmlReader.ReadElementString() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementStringString">
            <summary>设置 XmlReader.ReadElementString(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadElementStringStringString">
            <summary>设置 XmlReader.ReadElementString(String localname, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadEndElement">
            <summary>设置 XmlReader.ReadEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadEndElement01">
            <summary>设置 XmlReader.ReadEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadInnerXml">
            <summary>设置 XmlReader.ReadInnerXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadInnerXml01">
            <summary>设置 XmlReader.ReadInnerXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadInnerXmlAsync">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadInnerXmlAsync01">
            <summary>设置 XmlReader.ReadInnerXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadOuterXml">
            <summary>设置 XmlReader.ReadOuterXml() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadOuterXml01">
            <summary>设置 XmlReader.ReadOuterXml() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadOuterXmlAsync">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadOuterXmlAsync01">
            <summary>设置 XmlReader.ReadOuterXmlAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadStartElement">
            <summary>设置 XmlReader.ReadStartElement() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadStartElement(System.String)">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadStartElement(System.String,System.String)">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadStartElement01">
            <summary>设置 XmlReader.ReadStartElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadStartElementString">
            <summary>设置 XmlReader.ReadStartElement(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadStartElementStringString">
            <summary>设置 XmlReader.ReadStartElement(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.ReadState">
            <summary>设置 XmlTextReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadStateGet">
            <summary>设置 XmlTextReader.get_ReadState() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadString">
            <summary>设置 XmlTextReader.ReadString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadString01">
            <summary>设置 XmlTextReader.ReadString() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadSubtree">
            <summary>设置 XmlReader.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadSubtree01">
            <summary>设置 XmlReader.ReadSubtree() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToDescendant(System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToDescendant(System.String,System.String)">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToDescendantString">
            <summary>设置 XmlReader.ReadToDescendant(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToDescendantStringString">
            <summary>设置 XmlReader.ReadToDescendant(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToFollowing(System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToFollowing(System.String,System.String)">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToFollowingString">
            <summary>设置 XmlReader.ReadToFollowing(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToFollowingStringString">
            <summary>设置 XmlReader.ReadToFollowing(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToNextSibling(System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadToNextSibling(System.String,System.String)">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToNextSiblingString">
            <summary>设置 XmlReader.ReadToNextSibling(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadToNextSiblingStringString">
            <summary>设置 XmlReader.ReadToNextSibling(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ReadValueChunkCharArrayInt32Int32">
            <summary>设置 XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.ResolveEntity">
            <summary>设置 XmlTextReader.ResolveEntity() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ResolveEntity01">
            <summary>设置 XmlTextReader.ResolveEntity() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.SchemaInfo">
            <summary>设置 XmlReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.SchemaInfoGet">
            <summary>设置 XmlReader.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Settings">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.SettingsGet">
            <summary>设置 XmlReader.get_Settings() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.Skip">
            <summary>设置 XmlTextReader.Skip() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.Skip01">
            <summary>设置 XmlTextReader.Skip() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextReader.SkipAsync">
            <summary>设置 XmlReader.SkipAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.SkipAsync01">
            <summary>设置 XmlReader.SkipAsync() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.Value">
            <summary>设置 XmlTextReader.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ValueGet">
            <summary>设置 XmlTextReader.get_Value() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.ValueType">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.ValueTypeGet">
            <summary>设置 XmlReader.get_ValueType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.XmlLang">
            <summary>设置 XmlTextReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.XmlLangGet">
            <summary>设置 XmlTextReader.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextReader.XmlSpace">
            <summary>设置 XmlTextReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextReader.XmlSpaceGet">
            <summary>设置 XmlTextReader.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlTextWriter">
            <summary>System.Xml.XmlTextWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.Close">
            <summary>设置 XmlTextWriter.Close() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.Close01">
            <summary>设置 XmlTextWriter.Close() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.Dispose(System.Boolean)">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.DisposeBoolean">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.Flush">
            <summary>设置 XmlTextWriter.Flush() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.Flush01">
            <summary>设置 XmlTextWriter.Flush() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.InitializeStub">
            <summary>初始化 type StubXmlTextWriter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.LookupPrefix(System.String)">
            <summary>设置 XmlTextWriter.LookupPrefix(String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.LookupPrefixString">
            <summary>设置 XmlTextWriter.LookupPrefix(String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.Settings">
            <summary>设置 XmlWriter.get_Settings() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.SettingsGet">
            <summary>设置 XmlWriter.get_Settings() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteAttributesAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteAttributesXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteBase64ByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlTextWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCData(System.String)">
            <summary>设置 XmlTextWriter.WriteCData(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCDataAsync(System.String)">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCDataAsyncString">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCDataString">
            <summary>设置 XmlTextWriter.WriteCData(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCharEntity(System.Char)">
            <summary>设置 XmlTextWriter.WriteCharEntity(Char ch) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCharEntityAsync(System.Char)">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCharEntityAsyncChar">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCharEntityChar">
            <summary>设置 XmlTextWriter.WriteCharEntity(Char ch) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlTextWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCharsAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCharsCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteComment(System.String)">
            <summary>设置 XmlTextWriter.WriteComment(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteCommentAsync(System.String)">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCommentAsyncString">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteCommentString">
            <summary>设置 XmlTextWriter.WriteComment(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>设置 XmlTextWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteDocTypeAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteDocTypeStringStringStringString">
            <summary>设置 XmlTextWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndAttribute">
            <summary>设置 XmlTextWriter.WriteEndAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndAttribute01">
            <summary>设置 XmlTextWriter.WriteEndAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndAttributeAsync">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndAttributeAsync01">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndDocument">
            <summary>设置 XmlTextWriter.WriteEndDocument() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndDocument01">
            <summary>设置 XmlTextWriter.WriteEndDocument() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndDocumentAsync">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndDocumentAsync01">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndElement">
            <summary>设置 XmlTextWriter.WriteEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndElement01">
            <summary>设置 XmlTextWriter.WriteEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEndElementAsync">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEndElementAsync01">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEntityRef(System.String)">
            <summary>设置 XmlTextWriter.WriteEntityRef(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteEntityRefAsync(System.String)">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEntityRefAsyncString">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteEntityRefString">
            <summary>设置 XmlTextWriter.WriteEntityRef(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteFullEndElement">
            <summary>设置 XmlTextWriter.WriteFullEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteFullEndElement01">
            <summary>设置 XmlTextWriter.WriteFullEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteFullEndElementAsync">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteFullEndElementAsync01">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteName(System.String)">
            <summary>设置 XmlTextWriter.WriteName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNameAsync(System.String)">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNameAsyncString">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNameString">
            <summary>设置 XmlTextWriter.WriteName(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNmToken(System.String)">
            <summary>设置 XmlTextWriter.WriteNmToken(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNmTokenAsync(System.String)">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNmTokenAsyncString">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNmTokenString">
            <summary>设置 XmlTextWriter.WriteNmToken(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNodeAsyncXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNodeAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNodeXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteNodeXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
            <summary>设置 XmlTextWriter.WriteProcessingInstruction(String name, String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteProcessingInstructionAsync(System.String,System.String)">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteProcessingInstructionAsyncStringString">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteProcessingInstructionStringString">
            <summary>设置 XmlTextWriter.WriteProcessingInstruction(String name, String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteQualifiedName(System.String,System.String)">
            <summary>设置 XmlTextWriter.WriteQualifiedName(String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteQualifiedNameAsync(System.String,System.String)">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteQualifiedNameAsyncStringString">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteQualifiedNameStringString">
            <summary>设置 XmlTextWriter.WriteQualifiedName(String localName, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteRaw(System.String)">
            <summary>设置 XmlTextWriter.WriteRaw(String data) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlTextWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteRawAsync(System.String)">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteRawAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteRawAsyncString">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteRawCharArrayInt32Int32">
            <summary>设置 XmlTextWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteRawString">
            <summary>设置 XmlTextWriter.WriteRaw(String data) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <summary>设置 XmlTextWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartAttributeAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartAttributeStringStringString">
            <summary>设置 XmlTextWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocument">
            <summary>设置 XmlTextWriter.WriteStartDocument() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocument(System.Boolean)">
            <summary>设置 XmlTextWriter.WriteStartDocument(Boolean standalone) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocument01">
            <summary>设置 XmlTextWriter.WriteStartDocument() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocumentAsync">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocumentAsync(System.Boolean)">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocumentAsync01">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocumentAsyncBoolean">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartDocumentBoolean">
            <summary>设置 XmlTextWriter.WriteStartDocument(Boolean standalone) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>设置 XmlTextWriter.WriteStartElement(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStartElementAsync(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartElementAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStartElementStringStringString">
            <summary>设置 XmlTextWriter.WriteStartElement(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.WriteState">
            <summary>设置 XmlTextWriter.get_WriteState() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStateGet">
            <summary>设置 XmlTextWriter.get_WriteState() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteString(System.String)">
            <summary>设置 XmlTextWriter.WriteString(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteStringAsync(System.String)">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStringAsyncString">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteStringString">
            <summary>设置 XmlTextWriter.WriteString(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <summary>设置 XmlTextWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteSurrogateCharEntityAsyncCharChar">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteSurrogateCharEntityCharChar">
            <summary>设置 XmlTextWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Object)">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Boolean)">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.DateTime)">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.DateTimeOffset)">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Decimal)">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.String)">
            <summary>设置 XmlWriter.WriteValue(String value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Double)">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Int32)">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Int64)">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteValue(System.Single)">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueBoolean">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueDateTime">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueDateTimeOffset">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueDecimal">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueDouble">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueInt32">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueInt64">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueObject">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueSingle">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteValueString">
            <summary>设置 XmlWriter.WriteValue(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteWhitespace(System.String)">
            <summary>设置 XmlTextWriter.WriteWhitespace(String ws) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlTextWriter.WriteWhitespaceAsync(System.String)">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteWhitespaceAsyncString">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.WriteWhitespaceString">
            <summary>设置 XmlTextWriter.WriteWhitespace(String ws) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.XmlLang">
            <summary>设置 XmlTextWriter.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.XmlLangGet">
            <summary>设置 XmlTextWriter.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlTextWriter.XmlSpace">
            <summary>设置 XmlTextWriter.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlTextWriter.XmlSpaceGet">
            <summary>设置 XmlTextWriter.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlUrlResolver">
            <summary>System.Xml.XmlUrlResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlUrlResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlUrlResolver.Credentials">
            <summary>设置 XmlUrlResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlUrlResolver.CredentialsSetICredentials">
            <summary>设置 XmlUrlResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>设置 XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
            <summary>设置 XmlUrlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlUrlResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlUrlResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlUrlResolver.GetEntityUriStringType">
            <summary>设置 XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.InitializeStub">
            <summary>初始化 type StubXmlUrlResolver 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlUrlResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlUrlResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.ResolveUri(System.Uri,System.String)">
            <summary>设置 XmlUrlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlUrlResolver.ResolveUriUriString">
            <summary>设置 XmlUrlResolver.ResolveUri(Uri baseUri, String relativeUri) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlUrlResolver.SupportsType(System.Uri,System.Type)">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlUrlResolver.SupportsTypeUriType">
            <summary>设置 XmlResolver.SupportsType(Uri absoluteUri, Type type) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlWhitespace">
            <summary>System.Xml.XmlWhitespace 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AppendChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.AppendChildXmlNode">
            <summary>设置 XmlNode.AppendChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AppendData(System.String)">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.AppendDataString">
            <summary>设置 XmlCharacterData.AppendData(String strData) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AttachBackingFieldToData">
            <summary>附加委托以将 StubXmlWhitespace.Data 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AttachBackingFieldToInnerText">
            <summary>附加委托以将 StubXmlWhitespace.InnerText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXmlWhitespace.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AttachBackingFieldToPrefix">
            <summary>附加委托以将 StubXmlWhitespace.Prefix 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.AttachBackingFieldToValue">
            <summary>附加委托以将 StubXmlWhitespace.Value 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Attributes">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.AttributesGet">
            <summary>设置 XmlNode.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.BaseURI">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.BaseURIGet">
            <summary>设置 XmlNode.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.ChildNodes">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ChildNodesGet">
            <summary>设置 XmlNode.get_ChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.Clone">
            <summary>设置 XmlNode.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.Clone01">
            <summary>设置 XmlNode.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.CloneNode(System.Boolean)">
            <summary>设置 XmlWhitespace.CloneNode(Boolean deep) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.CloneNodeBoolean">
            <summary>设置 XmlWhitespace.CloneNode(Boolean deep) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.CreateNavigator">
            <summary>设置 XmlNode.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.CreateNavigator01">
            <summary>设置 XmlNode.CreateNavigator() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Data">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.DataGet">
            <summary>设置 XmlCharacterData.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.DataSetString">
            <summary>设置 XmlCharacterData.set_Data(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.DeleteData(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.DeleteDataInt32Int32">
            <summary>设置 XmlCharacterData.DeleteData(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.FirstChild">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.FirstChildGet">
            <summary>设置 XmlNode.get_FirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.GetNamespaceOfPrefix(System.String)">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.GetNamespaceOfPrefixString">
            <summary>设置 XmlNode.GetNamespaceOfPrefix(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.GetPrefixOfNamespace(System.String)">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.GetPrefixOfNamespaceString">
            <summary>设置 XmlNode.GetPrefixOfNamespace(String namespaceURI) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.HasChildNodes">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.HasChildNodesGet">
            <summary>设置 XmlNode.get_HasChildNodes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.InitializeStub">
            <summary>初始化 type StubXmlWhitespace 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.InnerText">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InnerTextGet">
            <summary>设置 XmlCharacterData.get_InnerText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InnerTextSetString">
            <summary>设置 XmlCharacterData.set_InnerText(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.InnerXml">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InnerXmlGet">
            <summary>设置 XmlNode.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InnerXmlSetString">
            <summary>设置 XmlNode.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InsertAfterXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertAfter(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InsertBeforeXmlNodeXmlNode">
            <summary>设置 XmlNode.InsertBefore(XmlNode newChild, XmlNode refChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.InsertData(System.Int32,System.String)">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.InsertDataInt32String">
            <summary>设置 XmlCharacterData.InsertData(Int32 offset, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.IsReadOnly">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.IsReadOnlyGet">
            <summary>设置 XmlNode.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Item(System.String)">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Item(System.String,System.String)">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ItemGetString">
            <summary>设置 XmlNode.get_Item(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ItemGetStringString">
            <summary>设置 XmlNode.get_Item(String localname, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.LastChild">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.LastChildGet">
            <summary>设置 XmlNode.get_LastChild() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Length">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.LengthGet">
            <summary>设置 XmlCharacterData.get_Length() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.LocalName">
            <summary>设置 XmlWhitespace.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.LocalNameGet">
            <summary>设置 XmlWhitespace.get_LocalName() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Name">
            <summary>设置 XmlWhitespace.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.NameGet">
            <summary>设置 XmlWhitespace.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.NamespaceURI">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.NamespaceURIGet">
            <summary>设置 XmlNode.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.NextSibling">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.NextSiblingGet">
            <summary>设置 XmlLinkedNode.get_NextSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.NodeType">
            <summary>设置 XmlWhitespace.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.NodeTypeGet">
            <summary>设置 XmlWhitespace.get_NodeType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.Normalize">
            <summary>设置 XmlNode.Normalize() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.Normalize01">
            <summary>设置 XmlNode.Normalize() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.OuterXml">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.OuterXmlGet">
            <summary>设置 XmlNode.get_OuterXml() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.OwnerDocument">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.OwnerDocumentGet">
            <summary>设置 XmlNode.get_OwnerDocument() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.ParentNode">
            <summary>设置 XmlWhitespace.get_ParentNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ParentNodeGet">
            <summary>设置 XmlWhitespace.get_ParentNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Prefix">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.PrefixGet">
            <summary>设置 XmlNode.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.PrefixSetString">
            <summary>设置 XmlNode.set_Prefix(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.PrependChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.PrependChildXmlNode">
            <summary>设置 XmlNode.PrependChild(XmlNode newChild) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.PreviousSibling">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.PreviousSiblingGet">
            <summary>设置 XmlLinkedNode.get_PreviousSibling() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.PreviousText">
            <summary>设置 XmlWhitespace.get_PreviousText() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.PreviousTextGet">
            <summary>设置 XmlWhitespace.get_PreviousText() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.RemoveAll">
            <summary>设置 XmlNode.RemoveAll() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.RemoveAll01">
            <summary>设置 XmlNode.RemoveAll() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.RemoveChild(System.Xml.XmlNode)">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.RemoveChildXmlNode">
            <summary>设置 XmlNode.RemoveChild(XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ReplaceChildXmlNodeXmlNode">
            <summary>设置 XmlNode.ReplaceChild(XmlNode newChild, XmlNode oldChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ReplaceDataInt32Int32String">
            <summary>设置 XmlCharacterData.ReplaceData(Int32 offset, Int32 count, String strData) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.SchemaInfo">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.SchemaInfoGet">
            <summary>设置 XmlNode.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.Substring(System.Int32,System.Int32)">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.SubstringInt32Int32">
            <summary>设置 XmlCharacterData.Substring(Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.Supports(System.String,System.String)">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.SupportsStringString">
            <summary>设置 XmlNode.Supports(String feature, String version) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWhitespace.Value">
            <summary>设置 XmlWhitespace.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ValueGet">
            <summary>设置 XmlWhitespace.get_Value() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.ValueSetString">
            <summary>设置 XmlWhitespace.set_Value(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
            <summary>设置 XmlWhitespace.WriteContentTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.WriteContentToXmlWriter">
            <summary>设置 XmlWhitespace.WriteContentTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWhitespace.WriteTo(System.Xml.XmlWriter)">
            <summary>设置 XmlWhitespace.WriteTo(XmlWriter w) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWhitespace.WriteToXmlWriter">
            <summary>设置 XmlWhitespace.WriteTo(XmlWriter w) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Fakes.StubXmlWriter">
            <summary>System.Xml.XmlWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.Close">
            <summary>设置 XmlWriter.Close() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.Close01">
            <summary>设置 XmlWriter.Close() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.Dispose(System.Boolean)">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.DisposeBoolean">
            <summary>设置 XmlWriter.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.Flush">
            <summary>设置 XmlWriter.Flush() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.Flush01">
            <summary>设置 XmlWriter.Flush() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.FlushAsync">
            <summary>设置 XmlWriter.FlushAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.FlushAsync01">
            <summary>设置 XmlWriter.FlushAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.InitializeStub">
            <summary>初始化 type StubXmlWriter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.LookupPrefix(System.String)">
            <summary>设置 XmlWriter.LookupPrefix(String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.LookupPrefixString">
            <summary>设置 XmlWriter.LookupPrefix(String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.Settings">
            <summary>设置 XmlWriter.get_Settings() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.SettingsGet">
            <summary>设置 XmlWriter.get_Settings() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteAttributesAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteAttributesXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteBase64AsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteBase64ByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteBinHexAsyncByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteBinHexByteArrayInt32Int32">
            <summary>设置 XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCData(System.String)">
            <summary>设置 XmlWriter.WriteCData(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCDataAsync(System.String)">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCDataAsyncString">
            <summary>设置 XmlWriter.WriteCDataAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCDataString">
            <summary>设置 XmlWriter.WriteCData(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCharEntity(System.Char)">
            <summary>设置 XmlWriter.WriteCharEntity(Char ch) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCharEntityAsync(System.Char)">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCharEntityAsyncChar">
            <summary>设置 XmlWriter.WriteCharEntityAsync(Char ch) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCharEntityChar">
            <summary>设置 XmlWriter.WriteCharEntity(Char ch) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCharsAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCharsCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteChars(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteComment(System.String)">
            <summary>设置 XmlWriter.WriteComment(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteCommentAsync(System.String)">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCommentAsyncString">
            <summary>设置 XmlWriter.WriteCommentAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteCommentString">
            <summary>设置 XmlWriter.WriteComment(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteDocTypeAsyncStringStringStringString">
            <summary>设置 XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteDocTypeStringStringStringString">
            <summary>设置 XmlWriter.WriteDocType(String name, String pubid, String sysid, String subset) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndAttribute">
            <summary>设置 XmlWriter.WriteEndAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndAttribute01">
            <summary>设置 XmlWriter.WriteEndAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndAttributeAsync">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndAttributeAsync01">
            <summary>设置 XmlWriter.WriteEndAttributeAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndDocument">
            <summary>设置 XmlWriter.WriteEndDocument() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndDocument01">
            <summary>设置 XmlWriter.WriteEndDocument() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndDocumentAsync">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndDocumentAsync01">
            <summary>设置 XmlWriter.WriteEndDocumentAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndElement">
            <summary>设置 XmlWriter.WriteEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndElement01">
            <summary>设置 XmlWriter.WriteEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEndElementAsync">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEndElementAsync01">
            <summary>设置 XmlWriter.WriteEndElementAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEntityRef(System.String)">
            <summary>设置 XmlWriter.WriteEntityRef(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteEntityRefAsync(System.String)">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEntityRefAsyncString">
            <summary>设置 XmlWriter.WriteEntityRefAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteEntityRefString">
            <summary>设置 XmlWriter.WriteEntityRef(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteFullEndElement">
            <summary>设置 XmlWriter.WriteFullEndElement() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteFullEndElement01">
            <summary>设置 XmlWriter.WriteFullEndElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteFullEndElementAsync">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteFullEndElementAsync01">
            <summary>设置 XmlWriter.WriteFullEndElementAsync() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteName(System.String)">
            <summary>设置 XmlWriter.WriteName(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNameAsync(System.String)">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNameAsyncString">
            <summary>设置 XmlWriter.WriteNameAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNameString">
            <summary>设置 XmlWriter.WriteName(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNmToken(System.String)">
            <summary>设置 XmlWriter.WriteNmToken(String name) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNmTokenAsync(System.String)">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNmTokenAsyncString">
            <summary>设置 XmlWriter.WriteNmTokenAsync(String name) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNmTokenString">
            <summary>设置 XmlWriter.WriteNmToken(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNodeAsyncXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNodeAsyncXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNodeXPathNavigatorBoolean">
            <summary>设置 XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteNodeXmlReaderBoolean">
            <summary>设置 XmlWriter.WriteNode(XmlReader reader, Boolean defattr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteProcessingInstruction(System.String,System.String)">
            <summary>设置 XmlWriter.WriteProcessingInstruction(String name, String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteProcessingInstructionAsyncStringString">
            <summary>设置 XmlWriter.WriteProcessingInstructionAsync(String name, String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteProcessingInstructionStringString">
            <summary>设置 XmlWriter.WriteProcessingInstruction(String name, String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteQualifiedName(System.String,System.String)">
            <summary>设置 XmlWriter.WriteQualifiedName(String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteQualifiedNameAsyncStringString">
            <summary>设置 XmlWriter.WriteQualifiedNameAsync(String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteQualifiedNameStringString">
            <summary>设置 XmlWriter.WriteQualifiedName(String localName, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteRaw(System.String)">
            <summary>设置 XmlWriter.WriteRaw(String data) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteRawAsync(System.String)">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteRawAsyncCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteRawAsyncString">
            <summary>设置 XmlWriter.WriteRawAsync(String data) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteRawCharArrayInt32Int32">
            <summary>设置 XmlWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteRawString">
            <summary>设置 XmlWriter.WriteRaw(String data) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartAttributeAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartAttributeStringStringString">
            <summary>设置 XmlWriter.WriteStartAttribute(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartDocument">
            <summary>设置 XmlWriter.WriteStartDocument() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartDocument(System.Boolean)">
            <summary>设置 XmlWriter.WriteStartDocument(Boolean standalone) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartDocument01">
            <summary>设置 XmlWriter.WriteStartDocument() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartDocumentAsync">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartDocumentAsync(System.Boolean)">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartDocumentAsync01">
            <summary>设置 XmlWriter.WriteStartDocumentAsync() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartDocumentAsyncBoolean">
            <summary>设置 XmlWriter.WriteStartDocumentAsync(Boolean standalone) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartDocumentBoolean">
            <summary>设置 XmlWriter.WriteStartDocument(Boolean standalone) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartElement(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartElementAsyncStringStringString">
            <summary>设置 XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStartElementStringStringString">
            <summary>设置 XmlWriter.WriteStartElement(String prefix, String localName, String ns) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.WriteState">
            <summary>设置 XmlWriter.get_WriteState() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStateGet">
            <summary>设置 XmlWriter.get_WriteState() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteString(System.String)">
            <summary>设置 XmlWriter.WriteString(String text) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteStringAsync(System.String)">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStringAsyncString">
            <summary>设置 XmlWriter.WriteStringAsync(String text) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteStringString">
            <summary>设置 XmlWriter.WriteString(String text) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <summary>设置 XmlWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteSurrogateCharEntityAsyncCharChar">
            <summary>设置 XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteSurrogateCharEntityCharChar">
            <summary>设置 XmlWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.String)">
            <summary>设置 XmlWriter.WriteValue(String value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Boolean)">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Object)">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.DateTime)">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.DateTimeOffset)">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Decimal)">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Double)">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Int32)">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Int64)">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteValue(System.Single)">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueBoolean">
            <summary>设置 XmlWriter.WriteValue(Boolean value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueDateTime">
            <summary>设置 XmlWriter.WriteValue(DateTime value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueDateTimeOffset">
            <summary>设置 XmlWriter.WriteValue(DateTimeOffset value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueDecimal">
            <summary>设置 XmlWriter.WriteValue(Decimal value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueDouble">
            <summary>设置 XmlWriter.WriteValue(Double value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueInt32">
            <summary>设置 XmlWriter.WriteValue(Int32 value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueInt64">
            <summary>设置 XmlWriter.WriteValue(Int64 value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueObject">
            <summary>设置 XmlWriter.WriteValue(Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueSingle">
            <summary>设置 XmlWriter.WriteValue(Single value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteValueString">
            <summary>设置 XmlWriter.WriteValue(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteWhitespace(System.String)">
            <summary>设置 XmlWriter.WriteWhitespace(String ws) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Fakes.StubXmlWriter.WriteWhitespaceAsync(System.String)">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteWhitespaceAsyncString">
            <summary>设置 XmlWriter.WriteWhitespaceAsync(String ws) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.WriteWhitespaceString">
            <summary>设置 XmlWriter.WriteWhitespace(String ws) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.XmlLang">
            <summary>设置 XmlWriter.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.XmlLangGet">
            <summary>设置 XmlWriter.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Fakes.StubXmlWriter.XmlSpace">
            <summary>设置 XmlWriter.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Fakes.StubXmlWriter.XmlSpaceGet">
            <summary>设置 XmlWriter.get_XmlSpace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver">
            <summary>System.Xml.Resolvers.XmlPreloadedResolver 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlPreloadedResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AddUriByteArray">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AddUriByteArrayInt32Int32">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Byte[] value, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AddUriStream">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Stream value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AddUriString">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.AddUriByteArray">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.AddUriByteArrayInt32Int32">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Byte[] value, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.AddUriStream">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, Stream value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.AddUriString">
            <summary>设置 XmlPreloadedResolver.Add(Uri uri, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.CredentialsSetICredentials">
            <summary>设置 XmlPreloadedResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.GetEntityAsyncUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.GetEntityUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.PreloadedUrisGet">
            <summary>设置 XmlPreloadedResolver.get_PreloadedUris() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.RemoveUri">
            <summary>设置 XmlPreloadedResolver.Remove(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.ResolveUriUriString">
            <summary>设置 XmlPreloadedResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.AllInstances.SupportsTypeUriType">
            <summary>设置 XmlPreloadedResolver.SupportsType(Uri absoluteUri, Type type) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.Constructor">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.ConstructorXmlKnownDtds">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds preloadedDtds) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.ConstructorXmlResolver">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver fallbackResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.ConstructorXmlResolverXmlKnownDtds">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver fallbackResolver, XmlKnownDtds preloadedDtds) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.ConstructorXmlResolverXmlKnownDtdsIEqualityComparerOfUri">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver fallbackResolver, XmlKnownDtds preloadedDtds, IEqualityComparer`1&lt;Uri&gt; uriComparer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.CredentialsSetICredentials">
            <summary>设置 XmlPreloadedResolver.set_Credentials(ICredentials value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.GetEntityUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.PreloadedUrisGet">
            <summary>设置 XmlPreloadedResolver.get_PreloadedUris() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.RemoveUri">
            <summary>设置 XmlPreloadedResolver.Remove(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.ResolveUriUriString">
            <summary>设置 XmlPreloadedResolver.ResolveUri(Uri baseUri, String relativeUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.StaticConstructor">
            <summary>设置 XmlPreloadedResolver.XmlPreloadedResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.ShimXmlPreloadedResolver.SupportsTypeUriType">
            <summary>设置 XmlPreloadedResolver.SupportsType(Uri absoluteUri, Type type) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver">
            <summary>System.Xml.Resolvers.XmlPreloadedResolver 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.Credentials">
            <summary>设置 XmlPreloadedResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.CredentialsSetICredentials">
            <summary>设置 XmlPreloadedResolver.set_Credentials(ICredentials value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>设置 XmlPreloadedResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
            <summary>设置 XmlPreloadedResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.GetEntityAsyncUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntityAsync(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.GetEntityUriStringType">
            <summary>设置 XmlPreloadedResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.InitializeStub">
            <summary>初始化 type StubXmlPreloadedResolver 的新实例</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
            <summary>设置 XmlPreloadedResolver.ResolveUri(Uri baseUri, String relativeUri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.ResolveUriUriString">
            <summary>设置 XmlPreloadedResolver.ResolveUri(Uri baseUri, String relativeUri) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
            <summary>设置 XmlPreloadedResolver.SupportsType(Uri absoluteUri, Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Resolvers.Fakes.StubXmlPreloadedResolver.SupportsTypeUriType">
            <summary>设置 XmlPreloadedResolver.SupportsType(Uri absoluteUri, Type type) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimValidationEventArgs">
            <summary>System.Xml.Schema.ValidationEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimValidationEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimValidationEventArgs.#ctor(System.Xml.Schema.ValidationEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimValidationEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.AllInstances.ExceptionGet">
            <summary>设置 ValidationEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.AllInstances.MessageGet">
            <summary>设置 ValidationEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.AllInstances.SeverityGet">
            <summary>设置 ValidationEventArgs.get_Severity() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimValidationEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimValidationEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.ConstructorXmlSchemaException">
            <summary>设置 ValidationEventArgs.ValidationEventArgs(XmlSchemaException ex) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.ConstructorXmlSchemaExceptionXmlSeverityType">
            <summary>设置 ValidationEventArgs.ValidationEventArgs(XmlSchemaException ex, XmlSeverityType severity) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.ExceptionGet">
            <summary>设置 ValidationEventArgs.get_Exception() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.MessageGet">
            <summary>设置 ValidationEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimValidationEventArgs.SeverityGet">
            <summary>设置 ValidationEventArgs.get_Severity() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlAtomicValue">
            <summary>System.Xml.Schema.XmlAtomicValue 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlAtomicValue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlAtomicValue.#ctor(System.Xml.Schema.XmlAtomicValue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.Clone">
            <summary>设置 XmlAtomicValue.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.IsNodeGet">
            <summary>设置 XmlAtomicValue.get_IsNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.SystemICloneableClone">
            <summary>设置 XmlAtomicValue.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ToString01">
            <summary>设置 XmlAtomicValue.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.TypedValueGet">
            <summary>设置 XmlAtomicValue.get_TypedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsBooleanGet">
            <summary>设置 XmlAtomicValue.get_ValueAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsDateTimeGet">
            <summary>设置 XmlAtomicValue.get_ValueAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsDoubleGet">
            <summary>设置 XmlAtomicValue.get_ValueAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsIntGet">
            <summary>设置 XmlAtomicValue.get_ValueAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsLongGet">
            <summary>设置 XmlAtomicValue.get_ValueAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlAtomicValue.ValueAs(Type type, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueGet">
            <summary>设置 XmlAtomicValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.ValueTypeGet">
            <summary>设置 XmlAtomicValue.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.AllInstances.XmlTypeGet">
            <summary>设置 XmlAtomicValue.get_XmlType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlAtomicValue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlAtomicValue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlAtomicValue.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.Clone">
            <summary>设置 XmlAtomicValue.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeBoolean">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeDateTime">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeDouble">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Double value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeInt32">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeInt64">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Int64 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeObject">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeObjectIXmlNamespaceResolver">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, Object value, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeString">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ConstructorXmlSchemaTypeStringIXmlNamespaceResolver">
            <summary>设置 XmlAtomicValue.XmlAtomicValue(XmlSchemaType xmlType, String value, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.IsNodeGet">
            <summary>设置 XmlAtomicValue.get_IsNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.SystemICloneableClone">
            <summary>设置 XmlAtomicValue.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ToString">
            <summary>设置 XmlAtomicValue.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.TypedValueGet">
            <summary>设置 XmlAtomicValue.get_TypedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsBooleanGet">
            <summary>设置 XmlAtomicValue.get_ValueAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsDateTimeGet">
            <summary>设置 XmlAtomicValue.get_ValueAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsDoubleGet">
            <summary>设置 XmlAtomicValue.get_ValueAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsIntGet">
            <summary>设置 XmlAtomicValue.get_ValueAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsLongGet">
            <summary>设置 XmlAtomicValue.get_ValueAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XmlAtomicValue.ValueAs(Type type, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueGet">
            <summary>设置 XmlAtomicValue.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.ValueTypeGet">
            <summary>设置 XmlAtomicValue.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlAtomicValue.XmlTypeGet">
            <summary>设置 XmlAtomicValue.get_XmlType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchema">
            <summary>System.Xml.Schema.XmlSchema 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchema.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchema.#ctor(System.Xml.Schema.XmlSchema)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchema.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchema.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.AttributeFormDefaultGet">
            <summary>设置 XmlSchema.get_AttributeFormDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.AttributeFormDefaultSetXmlSchemaForm">
            <summary>设置 XmlSchema.set_AttributeFormDefault(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.AttributeGroupsGet">
            <summary>设置 XmlSchema.get_AttributeGroups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.AttributesGet">
            <summary>设置 XmlSchema.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.BaseUriGet">
            <summary>设置 XmlSchema.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.BaseUriSetUri">
            <summary>设置 XmlSchema.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.BlockDefaultGet">
            <summary>设置 XmlSchema.get_BlockDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.BlockDefaultSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchema.set_BlockDefault(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.Clone">
            <summary>设置 XmlSchema.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.CompileSchemaInSetXmlNameTableValidationEventHandlerXmlSchemaCompilationSettings">
            <summary>设置 XmlSchema.CompileSchemaInSet(XmlNameTable nameTable, ValidationEventHandler eventHandler, XmlSchemaCompilationSettings compilationSettings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.CompileValidationEventHandler">
            <summary>设置 XmlSchema.Compile(ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.CompileValidationEventHandlerXmlResolver">
            <summary>设置 XmlSchema.Compile(ValidationEventHandler validationEventHandler, XmlResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.DeepClone">
            <summary>设置 XmlSchema.DeepClone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.DocumentGet">
            <summary>设置 XmlSchema.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ElementFormDefaultGet">
            <summary>设置 XmlSchema.get_ElementFormDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ElementFormDefaultSetXmlSchemaForm">
            <summary>设置 XmlSchema.set_ElementFormDefault(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ElementsGet">
            <summary>设置 XmlSchema.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ErrorCountGet">
            <summary>设置 XmlSchema.get_ErrorCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ErrorCountSetInt32">
            <summary>设置 XmlSchema.set_ErrorCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.FinalDefaultGet">
            <summary>设置 XmlSchema.get_FinalDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.FinalDefaultSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchema.set_FinalDefault(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.GetExternalSchemasListIListXmlSchema">
            <summary>设置 XmlSchema.GetExternalSchemasList(IList extList, XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.GroupsGet">
            <summary>设置 XmlSchema.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdAttributeGet">
            <summary>设置 XmlSchema.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdAttributeSetString">
            <summary>设置 XmlSchema.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdGet">
            <summary>设置 XmlSchema.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdSetString">
            <summary>设置 XmlSchema.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdentityConstraintsGet">
            <summary>设置 XmlSchema.get_IdentityConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IdsGet">
            <summary>设置 XmlSchema.get_Ids() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ImportedNamespacesGet">
            <summary>设置 XmlSchema.get_ImportedNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ImportedSchemasGet">
            <summary>设置 XmlSchema.get_ImportedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IncludesGet">
            <summary>设置 XmlSchema.get_Includes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsChameleonGet">
            <summary>设置 XmlSchema.get_IsChameleon() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsChameleonSetBoolean">
            <summary>设置 XmlSchema.set_IsChameleon(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsCompiledBySetGet">
            <summary>设置 XmlSchema.get_IsCompiledBySet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsCompiledBySetSetBoolean">
            <summary>设置 XmlSchema.set_IsCompiledBySet(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsCompiledGet">
            <summary>设置 XmlSchema.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsPreprocessedGet">
            <summary>设置 XmlSchema.get_IsPreprocessed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsPreprocessedSetBoolean">
            <summary>设置 XmlSchema.set_IsPreprocessed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsRedefinedGet">
            <summary>设置 XmlSchema.get_IsRedefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.IsRedefinedSetBoolean">
            <summary>设置 XmlSchema.set_IsRedefined(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.ItemsGet">
            <summary>设置 XmlSchema.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.NameTableGet">
            <summary>设置 XmlSchema.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.NotationsGet">
            <summary>设置 XmlSchema.get_Notations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.SchemaIdGet">
            <summary>设置 XmlSchema.get_SchemaId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.SchemaTypesGet">
            <summary>设置 XmlSchema.get_SchemaTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.SetIsCompiledBoolean">
            <summary>设置 XmlSchema.SetIsCompiled(Boolean isCompiled) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchema.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.TargetNamespaceGet">
            <summary>设置 XmlSchema.get_TargetNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.TargetNamespaceSetString">
            <summary>设置 XmlSchema.set_TargetNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.UnhandledAttributesGet">
            <summary>设置 XmlSchema.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchema.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.VersionGet">
            <summary>设置 XmlSchema.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.VersionSetString">
            <summary>设置 XmlSchema.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteStream">
            <summary>设置 XmlSchema.Write(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteStreamXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(Stream stream, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteTextWriter">
            <summary>设置 XmlSchema.Write(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteTextWriterXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(TextWriter writer, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteXmlWriter">
            <summary>设置 XmlSchema.Write(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AllInstances.WriteXmlWriterXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(XmlWriter writer, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AttributeFormDefaultGet">
            <summary>设置 XmlSchema.get_AttributeFormDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AttributeFormDefaultSetXmlSchemaForm">
            <summary>设置 XmlSchema.set_AttributeFormDefault(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AttributeGroupsGet">
            <summary>设置 XmlSchema.get_AttributeGroups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.AttributesGet">
            <summary>设置 XmlSchema.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.BaseUriGet">
            <summary>设置 XmlSchema.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.BaseUriSetUri">
            <summary>设置 XmlSchema.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchema.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchema.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.BlockDefaultGet">
            <summary>设置 XmlSchema.get_BlockDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.BlockDefaultSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchema.set_BlockDefault(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.Clone">
            <summary>设置 XmlSchema.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.CompileSchemaInSetXmlNameTableValidationEventHandlerXmlSchemaCompilationSettings">
            <summary>设置 XmlSchema.CompileSchemaInSet(XmlNameTable nameTable, ValidationEventHandler eventHandler, XmlSchemaCompilationSettings compilationSettings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.CompileValidationEventHandler">
            <summary>设置 XmlSchema.Compile(ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.CompileValidationEventHandlerXmlResolver">
            <summary>设置 XmlSchema.Compile(ValidationEventHandler validationEventHandler, XmlResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.Constructor">
            <summary>设置 XmlSchema.XmlSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.DeepClone">
            <summary>设置 XmlSchema.DeepClone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.DocumentGet">
            <summary>设置 XmlSchema.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ElementFormDefaultGet">
            <summary>设置 XmlSchema.get_ElementFormDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ElementFormDefaultSetXmlSchemaForm">
            <summary>设置 XmlSchema.set_ElementFormDefault(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ElementsGet">
            <summary>设置 XmlSchema.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ErrorCountGet">
            <summary>设置 XmlSchema.get_ErrorCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ErrorCountSetInt32">
            <summary>设置 XmlSchema.set_ErrorCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.FinalDefaultGet">
            <summary>设置 XmlSchema.get_FinalDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.FinalDefaultSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchema.set_FinalDefault(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.GetExternalSchemasListIListXmlSchema">
            <summary>设置 XmlSchema.GetExternalSchemasList(IList extList, XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.GroupsGet">
            <summary>设置 XmlSchema.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdAttributeGet">
            <summary>设置 XmlSchema.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdAttributeSetString">
            <summary>设置 XmlSchema.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdGet">
            <summary>设置 XmlSchema.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdSetString">
            <summary>设置 XmlSchema.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdentityConstraintsGet">
            <summary>设置 XmlSchema.get_IdentityConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IdsGet">
            <summary>设置 XmlSchema.get_Ids() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ImportedNamespacesGet">
            <summary>设置 XmlSchema.get_ImportedNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ImportedSchemasGet">
            <summary>设置 XmlSchema.get_ImportedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IncludesGet">
            <summary>设置 XmlSchema.get_Includes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsChameleonGet">
            <summary>设置 XmlSchema.get_IsChameleon() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsChameleonSetBoolean">
            <summary>设置 XmlSchema.set_IsChameleon(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsCompiledBySetGet">
            <summary>设置 XmlSchema.get_IsCompiledBySet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsCompiledBySetSetBoolean">
            <summary>设置 XmlSchema.set_IsCompiledBySet(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsCompiledGet">
            <summary>设置 XmlSchema.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsPreprocessedGet">
            <summary>设置 XmlSchema.get_IsPreprocessed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsPreprocessedSetBoolean">
            <summary>设置 XmlSchema.set_IsPreprocessed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsRedefinedGet">
            <summary>设置 XmlSchema.get_IsRedefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.IsRedefinedSetBoolean">
            <summary>设置 XmlSchema.set_IsRedefined(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ItemsGet">
            <summary>设置 XmlSchema.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.NameTableGet">
            <summary>设置 XmlSchema.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.NotationsGet">
            <summary>设置 XmlSchema.get_Notations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ReadStreamValidationEventHandler">
            <summary>设置 XmlSchema.Read(Stream stream, ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ReadTextReaderValidationEventHandler">
            <summary>设置 XmlSchema.Read(TextReader reader, ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.ReadXmlReaderValidationEventHandler">
            <summary>设置 XmlSchema.Read(XmlReader reader, ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.SchemaIdGet">
            <summary>设置 XmlSchema.get_SchemaId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.SchemaTypesGet">
            <summary>设置 XmlSchema.get_SchemaTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.SetIsCompiledBoolean">
            <summary>设置 XmlSchema.SetIsCompiled(Boolean isCompiled) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchema.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.StaticConstructor">
            <summary>设置 XmlSchema.XmlSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.TargetNamespaceGet">
            <summary>设置 XmlSchema.get_TargetNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.TargetNamespaceSetString">
            <summary>设置 XmlSchema.set_TargetNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.UnhandledAttributesGet">
            <summary>设置 XmlSchema.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchema.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.VersionGet">
            <summary>设置 XmlSchema.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.VersionSetString">
            <summary>设置 XmlSchema.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteStream">
            <summary>设置 XmlSchema.Write(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteStreamXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(Stream stream, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteTextWriter">
            <summary>设置 XmlSchema.Write(TextWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteTextWriterXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(TextWriter writer, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteXmlWriter">
            <summary>设置 XmlSchema.Write(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchema.WriteXmlWriterXmlNamespaceManager">
            <summary>设置 XmlSchema.Write(XmlWriter writer, XmlNamespaceManager namespaceManager) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAll">
            <summary>System.Xml.Schema.XmlSchemaAll 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAll.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAll.#ctor(System.Xml.Schema.XmlSchemaAll)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAll.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.AllInstances.IsEmptyGet">
            <summary>设置 XmlSchemaAll.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.AllInstances.ItemsGet">
            <summary>设置 XmlSchemaAll.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.AllInstances.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaAll.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAll.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAll.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.Constructor">
            <summary>设置 XmlSchemaAll.XmlSchemaAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.IsEmptyGet">
            <summary>设置 XmlSchemaAll.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.ItemsGet">
            <summary>设置 XmlSchemaAll.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAll.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaAll.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated">
            <summary>System.Xml.Schema.XmlSchemaAnnotated 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.#ctor(System.Xml.Schema.XmlSchemaAnnotated)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaAnnotated.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaAnnotated.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.AnnotationGet">
            <summary>设置 XmlSchemaAnnotated.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaAnnotated.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.IdAttributeGet">
            <summary>设置 XmlSchemaAnnotated.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.IdAttributeSetString">
            <summary>设置 XmlSchemaAnnotated.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.IdGet">
            <summary>设置 XmlSchemaAnnotated.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.IdSetString">
            <summary>设置 XmlSchemaAnnotated.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotated.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.UnhandledAttributesGet">
            <summary>设置 XmlSchemaAnnotated.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AllInstances.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotated.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AnnotationGet">
            <summary>设置 XmlSchemaAnnotated.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaAnnotated.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.Constructor">
            <summary>设置 XmlSchemaAnnotated.XmlSchemaAnnotated() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.IdAttributeGet">
            <summary>设置 XmlSchemaAnnotated.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.IdAttributeSetString">
            <summary>设置 XmlSchemaAnnotated.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.IdGet">
            <summary>设置 XmlSchemaAnnotated.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.IdSetString">
            <summary>设置 XmlSchemaAnnotated.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotated.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.UnhandledAttributesGet">
            <summary>设置 XmlSchemaAnnotated.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotated.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotated.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation">
            <summary>System.Xml.Schema.XmlSchemaAnnotation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.#ctor(System.Xml.Schema.XmlSchemaAnnotation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.IdAttributeGet">
            <summary>设置 XmlSchemaAnnotation.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.IdAttributeSetString">
            <summary>设置 XmlSchemaAnnotation.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.IdGet">
            <summary>设置 XmlSchemaAnnotation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.IdSetString">
            <summary>设置 XmlSchemaAnnotation.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.ItemsGet">
            <summary>设置 XmlSchemaAnnotation.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotation.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.UnhandledAttributesGet">
            <summary>设置 XmlSchemaAnnotation.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.AllInstances.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotation.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.Constructor">
            <summary>设置 XmlSchemaAnnotation.XmlSchemaAnnotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.IdAttributeGet">
            <summary>设置 XmlSchemaAnnotation.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.IdAttributeSetString">
            <summary>设置 XmlSchemaAnnotation.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.IdGet">
            <summary>设置 XmlSchemaAnnotation.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.IdSetString">
            <summary>设置 XmlSchemaAnnotation.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.ItemsGet">
            <summary>设置 XmlSchemaAnnotation.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotation.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.UnhandledAttributesGet">
            <summary>设置 XmlSchemaAnnotation.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnnotation.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaAnnotation.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAny">
            <summary>System.Xml.Schema.XmlSchemaAny 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAny.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAny.#ctor(System.Xml.Schema.XmlSchemaAny)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.AllowsXmlQualifiedName">
            <summary>设置 XmlSchemaAny.Allows(XmlQualifiedName qname) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.BuildNamespaceListString">
            <summary>设置 XmlSchemaAny.BuildNamespaceList(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.BuildNamespaceListV1CompatString">
            <summary>设置 XmlSchemaAny.BuildNamespaceListV1Compat(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.NameStringGet">
            <summary>设置 XmlSchemaAny.get_NameString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.NamespaceGet">
            <summary>设置 XmlSchemaAny.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.NamespaceSetString">
            <summary>设置 XmlSchemaAny.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.ProcessContentsCorrectGet">
            <summary>设置 XmlSchemaAny.get_ProcessContentsCorrect() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.ProcessContentsGet">
            <summary>设置 XmlSchemaAny.get_ProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.ProcessContentsSetXmlSchemaContentProcessing">
            <summary>设置 XmlSchemaAny.set_ProcessContents(XmlSchemaContentProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllInstances.ResolvedNamespaceGet">
            <summary>设置 XmlSchemaAny.get_ResolvedNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.AllowsXmlQualifiedName">
            <summary>设置 XmlSchemaAny.Allows(XmlQualifiedName qname) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAny.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAny.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.BuildNamespaceListString">
            <summary>设置 XmlSchemaAny.BuildNamespaceList(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.BuildNamespaceListV1CompatString">
            <summary>设置 XmlSchemaAny.BuildNamespaceListV1Compat(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.Constructor">
            <summary>设置 XmlSchemaAny.XmlSchemaAny() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.NameStringGet">
            <summary>设置 XmlSchemaAny.get_NameString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.NamespaceGet">
            <summary>设置 XmlSchemaAny.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.NamespaceSetString">
            <summary>设置 XmlSchemaAny.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.ProcessContentsCorrectGet">
            <summary>设置 XmlSchemaAny.get_ProcessContentsCorrect() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.ProcessContentsGet">
            <summary>设置 XmlSchemaAny.get_ProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.ProcessContentsSetXmlSchemaContentProcessing">
            <summary>设置 XmlSchemaAny.set_ProcessContents(XmlSchemaContentProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAny.ResolvedNamespaceGet">
            <summary>设置 XmlSchemaAny.get_ResolvedNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute">
            <summary>System.Xml.Schema.XmlSchemaAnyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.#ctor(System.Xml.Schema.XmlSchemaAnyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.AllowsXmlQualifiedName">
            <summary>设置 XmlSchemaAnyAttribute.Allows(XmlQualifiedName qname) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.BuildNamespaceListString">
            <summary>设置 XmlSchemaAnyAttribute.BuildNamespaceList(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.BuildNamespaceListV1CompatString">
            <summary>设置 XmlSchemaAnyAttribute.BuildNamespaceListV1Compat(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlSchemaAnyAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlSchemaAnyAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.ProcessContentsCorrectGet">
            <summary>设置 XmlSchemaAnyAttribute.get_ProcessContentsCorrect() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.ProcessContentsGet">
            <summary>设置 XmlSchemaAnyAttribute.get_ProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllInstances.ProcessContentsSetXmlSchemaContentProcessing">
            <summary>设置 XmlSchemaAnyAttribute.set_ProcessContents(XmlSchemaContentProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.AllowsXmlQualifiedName">
            <summary>设置 XmlSchemaAnyAttribute.Allows(XmlQualifiedName qname) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.BuildNamespaceListString">
            <summary>设置 XmlSchemaAnyAttribute.BuildNamespaceList(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.BuildNamespaceListV1CompatString">
            <summary>设置 XmlSchemaAnyAttribute.BuildNamespaceListV1Compat(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.Constructor">
            <summary>设置 XmlSchemaAnyAttribute.XmlSchemaAnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.IntersectionXmlSchemaAnyAttributeXmlSchemaAnyAttributeBoolean">
            <summary>设置 XmlSchemaAnyAttribute.Intersection(XmlSchemaAnyAttribute o1, XmlSchemaAnyAttribute o2, Boolean v1Compat) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.IsSubsetXmlSchemaAnyAttributeXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaAnyAttribute.IsSubset(XmlSchemaAnyAttribute sub, XmlSchemaAnyAttribute super) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.NamespaceGet">
            <summary>设置 XmlSchemaAnyAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.NamespaceSetString">
            <summary>设置 XmlSchemaAnyAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.ProcessContentsCorrectGet">
            <summary>设置 XmlSchemaAnyAttribute.get_ProcessContentsCorrect() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.ProcessContentsGet">
            <summary>设置 XmlSchemaAnyAttribute.get_ProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.ProcessContentsSetXmlSchemaContentProcessing">
            <summary>设置 XmlSchemaAnyAttribute.set_ProcessContents(XmlSchemaContentProcessing value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAnyAttribute.UnionXmlSchemaAnyAttributeXmlSchemaAnyAttributeBoolean">
            <summary>设置 XmlSchemaAnyAttribute.Union(XmlSchemaAnyAttribute o1, XmlSchemaAnyAttribute o2, Boolean v1Compat) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo">
            <summary>System.Xml.Schema.XmlSchemaAppInfo 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.#ctor(System.Xml.Schema.XmlSchemaAppInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.AllInstances.MarkupGet">
            <summary>设置 XmlSchemaAppInfo.get_Markup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.AllInstances.MarkupSetXmlNodeArray">
            <summary>设置 XmlSchemaAppInfo.set_Markup(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.AllInstances.SourceGet">
            <summary>设置 XmlSchemaAppInfo.get_Source() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.AllInstances.SourceSetString">
            <summary>设置 XmlSchemaAppInfo.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.Constructor">
            <summary>设置 XmlSchemaAppInfo.XmlSchemaAppInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.MarkupGet">
            <summary>设置 XmlSchemaAppInfo.get_Markup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.MarkupSetXmlNodeArray">
            <summary>设置 XmlSchemaAppInfo.set_Markup(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.SourceGet">
            <summary>设置 XmlSchemaAppInfo.get_Source() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAppInfo.SourceSetString">
            <summary>设置 XmlSchemaAppInfo.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute">
            <summary>System.Xml.Schema.XmlSchemaAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.#ctor(System.Xml.Schema.XmlSchemaAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.AttributeSchemaTypeGet">
            <summary>设置 XmlSchemaAttribute.get_AttributeSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.AttributeTypeGet">
            <summary>设置 XmlSchemaAttribute.get_AttributeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.Clone">
            <summary>设置 XmlSchemaAttribute.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.DatatypeGet">
            <summary>设置 XmlSchemaAttribute.get_Datatype() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.DefaultValueGet">
            <summary>设置 XmlSchemaAttribute.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.DefaultValueSetString">
            <summary>设置 XmlSchemaAttribute.set_DefaultValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.FixedValueGet">
            <summary>设置 XmlSchemaAttribute.get_FixedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.FixedValueSetString">
            <summary>设置 XmlSchemaAttribute.set_FixedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.FormGet">
            <summary>设置 XmlSchemaAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlSchemaAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.HasDefaultGet">
            <summary>设置 XmlSchemaAttribute.get_HasDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaAttribute.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaAttribute.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.NameGet">
            <summary>设置 XmlSchemaAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.NameSetString">
            <summary>设置 XmlSchemaAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaAttribute.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.RefNameGet">
            <summary>设置 XmlSchemaAttribute.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SchemaTypeGet">
            <summary>设置 XmlSchemaAttribute.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SchemaTypeNameGet">
            <summary>设置 XmlSchemaAttribute.get_SchemaTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SchemaTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.set_SchemaTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SchemaTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaAttribute.set_SchemaType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SetAttributeTypeXmlSchemaSimpleType">
            <summary>设置 XmlSchemaAttribute.SetAttributeType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.UseGet">
            <summary>设置 XmlSchemaAttribute.get_Use() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.UseSetXmlSchemaUse">
            <summary>设置 XmlSchemaAttribute.set_Use(XmlSchemaUse value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AllInstances.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaAttribute.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AttributeSchemaTypeGet">
            <summary>设置 XmlSchemaAttribute.get_AttributeSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.AttributeTypeGet">
            <summary>设置 XmlSchemaAttribute.get_AttributeType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.Clone">
            <summary>设置 XmlSchemaAttribute.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.Constructor">
            <summary>设置 XmlSchemaAttribute.XmlSchemaAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.DatatypeGet">
            <summary>设置 XmlSchemaAttribute.get_Datatype() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.DefaultValueGet">
            <summary>设置 XmlSchemaAttribute.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.DefaultValueSetString">
            <summary>设置 XmlSchemaAttribute.set_DefaultValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.FixedValueGet">
            <summary>设置 XmlSchemaAttribute.get_FixedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.FixedValueSetString">
            <summary>设置 XmlSchemaAttribute.set_FixedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.FormGet">
            <summary>设置 XmlSchemaAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.FormSetXmlSchemaForm">
            <summary>设置 XmlSchemaAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.HasDefaultGet">
            <summary>设置 XmlSchemaAttribute.get_HasDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.NameAttributeGet">
            <summary>设置 XmlSchemaAttribute.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.NameAttributeSetString">
            <summary>设置 XmlSchemaAttribute.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.NameGet">
            <summary>设置 XmlSchemaAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.NameSetString">
            <summary>设置 XmlSchemaAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.QualifiedNameGet">
            <summary>设置 XmlSchemaAttribute.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.RefNameGet">
            <summary>设置 XmlSchemaAttribute.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SchemaTypeGet">
            <summary>设置 XmlSchemaAttribute.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SchemaTypeNameGet">
            <summary>设置 XmlSchemaAttribute.get_SchemaTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SchemaTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.set_SchemaTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SchemaTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaAttribute.set_SchemaType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SetAttributeTypeXmlSchemaSimpleType">
            <summary>设置 XmlSchemaAttribute.SetAttributeType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaAttribute.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.UseGet">
            <summary>设置 XmlSchemaAttribute.get_Use() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.UseSetXmlSchemaUse">
            <summary>设置 XmlSchemaAttribute.set_Use(XmlSchemaUse value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttribute.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaAttribute.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup">
            <summary>System.Xml.Schema.XmlSchemaAttributeGroup 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.#ctor(System.Xml.Schema.XmlSchemaAttributeGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaAttributeGroup.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AttributeUsesGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AttributeUses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AttributeWildcardGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AttributeWildcard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AttributeWildcardSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaAttributeGroup.set_AttributeWildcard(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.Clone">
            <summary>设置 XmlSchemaAttributeGroup.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaAttributeGroup.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaAttributeGroup.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.NameGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.NameSetString">
            <summary>设置 XmlSchemaAttributeGroup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaAttributeGroup.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.RedefinedAttributeGroupGet">
            <summary>设置 XmlSchemaAttributeGroup.get_RedefinedAttributeGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.RedefinedGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.RedefinedSetXmlSchemaAttributeGroup">
            <summary>设置 XmlSchemaAttributeGroup.set_Redefined(XmlSchemaAttributeGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.SelfReferenceCountGet">
            <summary>设置 XmlSchemaAttributeGroup.get_SelfReferenceCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.SelfReferenceCountSetInt32">
            <summary>设置 XmlSchemaAttributeGroup.set_SelfReferenceCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaAttributeGroup.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AnyAttributeGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaAttributeGroup.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AttributeUsesGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AttributeUses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AttributeWildcardGet">
            <summary>设置 XmlSchemaAttributeGroup.get_AttributeWildcard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AttributeWildcardSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaAttributeGroup.set_AttributeWildcard(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.AttributesGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.Clone">
            <summary>设置 XmlSchemaAttributeGroup.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.Constructor">
            <summary>设置 XmlSchemaAttributeGroup.XmlSchemaAttributeGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.NameAttributeGet">
            <summary>设置 XmlSchemaAttributeGroup.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.NameAttributeSetString">
            <summary>设置 XmlSchemaAttributeGroup.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.NameGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.NameSetString">
            <summary>设置 XmlSchemaAttributeGroup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.QualifiedNameGet">
            <summary>设置 XmlSchemaAttributeGroup.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.RedefinedAttributeGroupGet">
            <summary>设置 XmlSchemaAttributeGroup.get_RedefinedAttributeGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.RedefinedGet">
            <summary>设置 XmlSchemaAttributeGroup.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.RedefinedSetXmlSchemaAttributeGroup">
            <summary>设置 XmlSchemaAttributeGroup.set_Redefined(XmlSchemaAttributeGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.SelfReferenceCountGet">
            <summary>设置 XmlSchemaAttributeGroup.get_SelfReferenceCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.SelfReferenceCountSetInt32">
            <summary>设置 XmlSchemaAttributeGroup.set_SelfReferenceCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroup.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaAttributeGroup.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef">
            <summary>System.Xml.Schema.XmlSchemaAttributeGroupRef 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.#ctor(System.Xml.Schema.XmlSchemaAttributeGroupRef)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.AllInstances.RefNameGet">
            <summary>设置 XmlSchemaAttributeGroupRef.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.AllInstances.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttributeGroupRef.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.Constructor">
            <summary>设置 XmlSchemaAttributeGroupRef.XmlSchemaAttributeGroupRef() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.RefNameGet">
            <summary>设置 XmlSchemaAttributeGroupRef.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaAttributeGroupRef.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaAttributeGroupRef.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaChoice">
            <summary>System.Xml.Schema.XmlSchemaChoice 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.#ctor(System.Xml.Schema.XmlSchemaChoice)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.AllInstances.IsEmptyGet">
            <summary>设置 XmlSchemaChoice.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.AllInstances.ItemsGet">
            <summary>设置 XmlSchemaChoice.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.AllInstances.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaChoice.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.Constructor">
            <summary>设置 XmlSchemaChoice.XmlSchemaChoice() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.IsEmptyGet">
            <summary>设置 XmlSchemaChoice.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.ItemsGet">
            <summary>设置 XmlSchemaChoice.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaChoice.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaChoice.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator">
            <summary>System.Xml.Schema.XmlSchemaCollectionEnumerator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.#ctor(System.Xml.Schema.XmlSchemaCollectionEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances.CurrentGet">
            <summary>设置 XmlSchemaCollectionEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances.MoveNext">
            <summary>设置 XmlSchemaCollectionEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.AllInstances.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.ConstructorHashtable">
            <summary>设置 XmlSchemaCollectionEnumerator.XmlSchemaCollectionEnumerator(Hashtable collection) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.CurrentGet">
            <summary>设置 XmlSchemaCollectionEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.MoveNext">
            <summary>设置 XmlSchemaCollectionEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCollectionEnumerator.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings">
            <summary>System.Xml.Schema.XmlSchemaCompilationSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.#ctor(System.Xml.Schema.XmlSchemaCompilationSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.AllInstances.EnableUpaCheckGet">
            <summary>设置 XmlSchemaCompilationSettings.get_EnableUpaCheck() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.AllInstances.EnableUpaCheckSetBoolean">
            <summary>设置 XmlSchemaCompilationSettings.set_EnableUpaCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.Constructor">
            <summary>设置 XmlSchemaCompilationSettings.XmlSchemaCompilationSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.EnableUpaCheckGet">
            <summary>设置 XmlSchemaCompilationSettings.get_EnableUpaCheck() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaCompilationSettings.EnableUpaCheckSetBoolean">
            <summary>设置 XmlSchemaCompilationSettings.set_EnableUpaCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent">
            <summary>System.Xml.Schema.XmlSchemaComplexContent 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.#ctor(System.Xml.Schema.XmlSchemaComplexContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances.ContentGet">
            <summary>设置 XmlSchemaComplexContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaComplexContent.set_Content(XmlSchemaContent value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances.HasMixedAttributeGet">
            <summary>设置 XmlSchemaComplexContent.get_HasMixedAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances.IsMixedGet">
            <summary>设置 XmlSchemaComplexContent.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.AllInstances.IsMixedSetBoolean">
            <summary>设置 XmlSchemaComplexContent.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.Constructor">
            <summary>设置 XmlSchemaComplexContent.XmlSchemaComplexContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.ContentGet">
            <summary>设置 XmlSchemaComplexContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaComplexContent.set_Content(XmlSchemaContent value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.HasMixedAttributeGet">
            <summary>设置 XmlSchemaComplexContent.get_HasMixedAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.IsMixedGet">
            <summary>设置 XmlSchemaComplexContent.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContent.IsMixedSetBoolean">
            <summary>设置 XmlSchemaComplexContent.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension">
            <summary>System.Xml.Schema.XmlSchemaComplexContentExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.#ctor(System.Xml.Schema.XmlSchemaComplexContentExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexContentExtension.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.BaseTypeNameGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaComplexContentExtension.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.ParticleGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexContentExtension.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AllInstances.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexContentExtension.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexContentExtension.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.AttributesGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.BaseTypeNameGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaComplexContentExtension.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.Constructor">
            <summary>设置 XmlSchemaComplexContentExtension.XmlSchemaComplexContentExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.ParticleGet">
            <summary>设置 XmlSchemaComplexContentExtension.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexContentExtension.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentExtension.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexContentExtension.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction">
            <summary>System.Xml.Schema.XmlSchemaComplexContentRestriction 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.#ctor(System.Xml.Schema.XmlSchemaComplexContentRestriction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexContentRestriction.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.BaseTypeNameGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaComplexContentRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.ParticleGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexContentRestriction.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AllInstances.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexContentRestriction.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexContentRestriction.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.AttributesGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.BaseTypeNameGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaComplexContentRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.Constructor">
            <summary>设置 XmlSchemaComplexContentRestriction.XmlSchemaComplexContentRestriction() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.ParticleGet">
            <summary>设置 XmlSchemaComplexContentRestriction.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexContentRestriction.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexContentRestriction.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexContentRestriction.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType">
            <summary>System.Xml.Schema.XmlSchemaComplexType 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.#ctor(System.Xml.Schema.XmlSchemaComplexType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexType.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexType.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.AttributeUsesGet">
            <summary>设置 XmlSchemaComplexType.get_AttributeUses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.AttributeWildcardGet">
            <summary>设置 XmlSchemaComplexType.get_AttributeWildcard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaComplexType.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.BlockGet">
            <summary>设置 XmlSchemaComplexType.get_Block() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.BlockResolvedGet">
            <summary>设置 XmlSchemaComplexType.get_BlockResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.BlockSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaComplexType.set_Block(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.Clone">
            <summary>设置 XmlSchemaComplexType.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.CloneXmlSchema">
            <summary>设置 XmlSchemaComplexType.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ContainsIdAttributeBoolean">
            <summary>设置 XmlSchemaComplexType.ContainsIdAttribute(Boolean findAll) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ContentModelGet">
            <summary>设置 XmlSchemaComplexType.get_ContentModel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ContentModelSetXmlSchemaContentModel">
            <summary>设置 XmlSchemaComplexType.set_ContentModel(XmlSchemaContentModel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ContentTypeGet">
            <summary>设置 XmlSchemaComplexType.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ContentTypeParticleGet">
            <summary>设置 XmlSchemaComplexType.get_ContentTypeParticle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.DerivedFromGet">
            <summary>设置 XmlSchemaComplexType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.HasWildCardGet">
            <summary>设置 XmlSchemaComplexType.get_HasWildCard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.HasWildCardSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_HasWildCard(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.IsAbstractGet">
            <summary>设置 XmlSchemaComplexType.get_IsAbstract() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.IsAbstractSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_IsAbstract(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.IsMixedGet">
            <summary>设置 XmlSchemaComplexType.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.IsMixedSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.LocalElementsGet">
            <summary>设置 XmlSchemaComplexType.get_LocalElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ParticleGet">
            <summary>设置 XmlSchemaComplexType.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexType.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.SetAttributeWildcardXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexType.SetAttributeWildcard(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexType.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.SetBlockResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaComplexType.SetBlockResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AllInstances.SetContentTypeParticleXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexType.SetContentTypeParticle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AnyAttributeGet">
            <summary>设置 XmlSchemaComplexType.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexType.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AnyTypeGet">
            <summary>设置 XmlSchemaComplexType.get_AnyType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AnyTypeSkipGet">
            <summary>设置 XmlSchemaComplexType.get_AnyTypeSkip() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AttributeUsesGet">
            <summary>设置 XmlSchemaComplexType.get_AttributeUses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AttributeWildcardGet">
            <summary>设置 XmlSchemaComplexType.get_AttributeWildcard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.AttributesGet">
            <summary>设置 XmlSchemaComplexType.get_Attributes() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.BlockGet">
            <summary>设置 XmlSchemaComplexType.get_Block() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.BlockResolvedGet">
            <summary>设置 XmlSchemaComplexType.get_BlockResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.BlockSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaComplexType.set_Block(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.Clone">
            <summary>设置 XmlSchemaComplexType.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.CloneAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexType.CloneAttributes(XmlSchemaObjectCollection attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.CloneParticleXmlSchemaParticleXmlSchema">
            <summary>设置 XmlSchemaComplexType.CloneParticle(XmlSchemaParticle particle, XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.CloneXmlSchema">
            <summary>设置 XmlSchemaComplexType.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.Constructor">
            <summary>设置 XmlSchemaComplexType.XmlSchemaComplexType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ContainsIdAttributeBoolean">
            <summary>设置 XmlSchemaComplexType.ContainsIdAttribute(Boolean findAll) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ContentModelGet">
            <summary>设置 XmlSchemaComplexType.get_ContentModel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ContentModelSetXmlSchemaContentModel">
            <summary>设置 XmlSchemaComplexType.set_ContentModel(XmlSchemaContentModel value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ContentTypeGet">
            <summary>设置 XmlSchemaComplexType.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ContentTypeParticleGet">
            <summary>设置 XmlSchemaComplexType.get_ContentTypeParticle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.DerivedFromGet">
            <summary>设置 XmlSchemaComplexType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.HasAttributeQNameRefXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexType.HasAttributeQNameRef(XmlSchemaObjectCollection attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.HasParticleRefXmlSchemaParticleXmlSchema">
            <summary>设置 XmlSchemaComplexType.HasParticleRef(XmlSchemaParticle particle, XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.HasWildCardGet">
            <summary>设置 XmlSchemaComplexType.get_HasWildCard() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.HasWildCardSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_HasWildCard(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.IsAbstractGet">
            <summary>设置 XmlSchemaComplexType.get_IsAbstract() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.IsAbstractSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_IsAbstract(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.IsMixedGet">
            <summary>设置 XmlSchemaComplexType.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.IsMixedSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.LocalElementsGet">
            <summary>设置 XmlSchemaComplexType.get_LocalElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ParticleGet">
            <summary>设置 XmlSchemaComplexType.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.ParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexType.set_Particle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.SetAttributeWildcardXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaComplexType.SetAttributeWildcard(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaComplexType.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.SetBlockResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaComplexType.SetBlockResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.SetContentTypeParticleXmlSchemaParticle">
            <summary>设置 XmlSchemaComplexType.SetContentTypeParticle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.StaticConstructor">
            <summary>设置 XmlSchemaComplexType.XmlSchemaComplexType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaComplexType.UntypedAnyTypeGet">
            <summary>设置 XmlSchemaComplexType.get_UntypedAnyType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaContent">
            <summary>System.Xml.Schema.XmlSchemaContent 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContent.#ctor(System.Xml.Schema.XmlSchemaContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaContent.Constructor">
            <summary>设置 XmlSchemaContent.XmlSchemaContent() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel">
            <summary>System.Xml.Schema.XmlSchemaContentModel 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.#ctor(System.Xml.Schema.XmlSchemaContentModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaContentModel.Constructor">
            <summary>设置 XmlSchemaContentModel.XmlSchemaContentModel() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype">
            <summary>System.Xml.Schema.XmlSchemaDatatype 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.#ctor(System.Xml.Schema.XmlSchemaDatatype)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.ChangeTypeObjectType">
            <summary>设置 XmlSchemaDatatype.ChangeType(Object value, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.ChangeTypeObjectTypeIXmlNamespaceResolver">
            <summary>设置 XmlSchemaDatatype.ChangeType(Object value, Type targetType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.IsDerivedFromXmlSchemaDatatype">
            <summary>设置 XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype datatype) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.TypeCodeGet">
            <summary>设置 XmlSchemaDatatype.get_TypeCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.TypeCodeStringGet">
            <summary>设置 XmlSchemaDatatype.get_TypeCodeString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.TypeCodeToStringXmlTypeCode">
            <summary>设置 XmlSchemaDatatype.TypeCodeToString(XmlTypeCode typeCode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.AllInstances.VarietyGet">
            <summary>设置 XmlSchemaDatatype.get_Variety() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.ChangeTypeObjectType">
            <summary>设置 XmlSchemaDatatype.ChangeType(Object value, Type targetType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.ChangeTypeObjectTypeIXmlNamespaceResolver">
            <summary>设置 XmlSchemaDatatype.ChangeType(Object value, Type targetType, IXmlNamespaceResolver namespaceResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.ConcatenatedToStringObject">
            <summary>设置 XmlSchemaDatatype.ConcatenatedToString(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.Constructor">
            <summary>设置 XmlSchemaDatatype.XmlSchemaDatatype() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.DeriveByUnionXmlSchemaSimpleTypeArrayXmlSchemaType">
            <summary>设置 XmlSchemaDatatype.DeriveByUnion(XmlSchemaSimpleType[] types, XmlSchemaType schemaType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.FromXdrNameString">
            <summary>设置 XmlSchemaDatatype.FromXdrName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.FromXmlTokenizedTypeXmlTokenizedType">
            <summary>设置 XmlSchemaDatatype.FromXmlTokenizedType(XmlTokenizedType token) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.FromXmlTokenizedTypeXsdXmlTokenizedType">
            <summary>设置 XmlSchemaDatatype.FromXmlTokenizedTypeXsd(XmlTokenizedType token) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.IsDerivedFromXmlSchemaDatatype">
            <summary>设置 XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype datatype) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.TypeCodeGet">
            <summary>设置 XmlSchemaDatatype.get_TypeCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.TypeCodeStringGet">
            <summary>设置 XmlSchemaDatatype.get_TypeCodeString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.TypeCodeToStringXmlTypeCode">
            <summary>设置 XmlSchemaDatatype.TypeCodeToString(XmlTypeCode typeCode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDatatype.VarietyGet">
            <summary>设置 XmlSchemaDatatype.get_Variety() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation">
            <summary>System.Xml.Schema.XmlSchemaDocumentation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.#ctor(System.Xml.Schema.XmlSchemaDocumentation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.LanguageGet">
            <summary>设置 XmlSchemaDocumentation.get_Language() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.LanguageSetString">
            <summary>设置 XmlSchemaDocumentation.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.MarkupGet">
            <summary>设置 XmlSchemaDocumentation.get_Markup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.MarkupSetXmlNodeArray">
            <summary>设置 XmlSchemaDocumentation.set_Markup(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.SourceGet">
            <summary>设置 XmlSchemaDocumentation.get_Source() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.AllInstances.SourceSetString">
            <summary>设置 XmlSchemaDocumentation.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.Constructor">
            <summary>设置 XmlSchemaDocumentation.XmlSchemaDocumentation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.LanguageGet">
            <summary>设置 XmlSchemaDocumentation.get_Language() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.LanguageSetString">
            <summary>设置 XmlSchemaDocumentation.set_Language(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.MarkupGet">
            <summary>设置 XmlSchemaDocumentation.get_Markup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.MarkupSetXmlNodeArray">
            <summary>设置 XmlSchemaDocumentation.set_Markup(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.SourceGet">
            <summary>设置 XmlSchemaDocumentation.get_Source() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.SourceSetString">
            <summary>设置 XmlSchemaDocumentation.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaDocumentation.StaticConstructor">
            <summary>设置 XmlSchemaDocumentation.XmlSchemaDocumentation() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaElement">
            <summary>System.Xml.Schema.XmlSchemaElement 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaElement.#ctor(System.Xml.Schema.XmlSchemaElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.BlockGet">
            <summary>设置 XmlSchemaElement.get_Block() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.BlockResolvedGet">
            <summary>设置 XmlSchemaElement.get_BlockResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.BlockSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.set_Block(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.Clone">
            <summary>设置 XmlSchemaElement.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.CloneXmlSchema">
            <summary>设置 XmlSchemaElement.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.ConstraintsGet">
            <summary>设置 XmlSchemaElement.get_Constraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.DefaultValueGet">
            <summary>设置 XmlSchemaElement.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.DefaultValueSetString">
            <summary>设置 XmlSchemaElement.set_DefaultValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.ElementSchemaTypeGet">
            <summary>设置 XmlSchemaElement.get_ElementSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.ElementTypeGet">
            <summary>设置 XmlSchemaElement.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FinalGet">
            <summary>设置 XmlSchemaElement.get_Final() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FinalResolvedGet">
            <summary>设置 XmlSchemaElement.get_FinalResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FinalSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.set_Final(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FixedValueGet">
            <summary>设置 XmlSchemaElement.get_FixedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FixedValueSetString">
            <summary>设置 XmlSchemaElement.set_FixedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FormGet">
            <summary>设置 XmlSchemaElement.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlSchemaElement.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.HasAbstractAttributeGet">
            <summary>设置 XmlSchemaElement.get_HasAbstractAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.HasConstraintsGet">
            <summary>设置 XmlSchemaElement.get_HasConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.HasDefaultGet">
            <summary>设置 XmlSchemaElement.get_HasDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.HasNillableAttributeGet">
            <summary>设置 XmlSchemaElement.get_HasNillableAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsAbstractGet">
            <summary>设置 XmlSchemaElement.get_IsAbstract() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsAbstractSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsAbstract(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsLocalTypeDerivationCheckedGet">
            <summary>设置 XmlSchemaElement.get_IsLocalTypeDerivationChecked() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsLocalTypeDerivationCheckedSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsLocalTypeDerivationChecked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsNillableGet">
            <summary>设置 XmlSchemaElement.get_IsNillable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.IsNillableSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsNillable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaElement.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaElement.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.NameGet">
            <summary>设置 XmlSchemaElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.NameSetString">
            <summary>设置 XmlSchemaElement.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.NameStringGet">
            <summary>设置 XmlSchemaElement.get_NameString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaElement.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.RefNameGet">
            <summary>设置 XmlSchemaElement.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SchemaTypeGet">
            <summary>设置 XmlSchemaElement.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SchemaTypeNameGet">
            <summary>设置 XmlSchemaElement.get_SchemaTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SchemaTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_SchemaTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SchemaTypeSetXmlSchemaType">
            <summary>设置 XmlSchemaElement.set_SchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SetBlockResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.SetBlockResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SetElementTypeXmlSchemaType">
            <summary>设置 XmlSchemaElement.SetElementType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SetFinalResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.SetFinalResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaElement.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SubstitutionGroupGet">
            <summary>设置 XmlSchemaElement.get_SubstitutionGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.SubstitutionGroupSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_SubstitutionGroup(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.AllInstances.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaElement.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.BlockGet">
            <summary>设置 XmlSchemaElement.get_Block() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.BlockResolvedGet">
            <summary>设置 XmlSchemaElement.get_BlockResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.BlockSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.set_Block(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.Clone">
            <summary>设置 XmlSchemaElement.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.CloneXmlSchema">
            <summary>设置 XmlSchemaElement.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.ConstraintsGet">
            <summary>设置 XmlSchemaElement.get_Constraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.Constructor">
            <summary>设置 XmlSchemaElement.XmlSchemaElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.DefaultValueGet">
            <summary>设置 XmlSchemaElement.get_DefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.DefaultValueSetString">
            <summary>设置 XmlSchemaElement.set_DefaultValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.ElementSchemaTypeGet">
            <summary>设置 XmlSchemaElement.get_ElementSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.ElementTypeGet">
            <summary>设置 XmlSchemaElement.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FinalGet">
            <summary>设置 XmlSchemaElement.get_Final() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FinalResolvedGet">
            <summary>设置 XmlSchemaElement.get_FinalResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FinalSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.set_Final(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FixedValueGet">
            <summary>设置 XmlSchemaElement.get_FixedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FixedValueSetString">
            <summary>设置 XmlSchemaElement.set_FixedValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FormGet">
            <summary>设置 XmlSchemaElement.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.FormSetXmlSchemaForm">
            <summary>设置 XmlSchemaElement.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.HasAbstractAttributeGet">
            <summary>设置 XmlSchemaElement.get_HasAbstractAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.HasConstraintsGet">
            <summary>设置 XmlSchemaElement.get_HasConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.HasDefaultGet">
            <summary>设置 XmlSchemaElement.get_HasDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.HasNillableAttributeGet">
            <summary>设置 XmlSchemaElement.get_HasNillableAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsAbstractGet">
            <summary>设置 XmlSchemaElement.get_IsAbstract() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsAbstractSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsAbstract(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsLocalTypeDerivationCheckedGet">
            <summary>设置 XmlSchemaElement.get_IsLocalTypeDerivationChecked() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsLocalTypeDerivationCheckedSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsLocalTypeDerivationChecked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsNillableGet">
            <summary>设置 XmlSchemaElement.get_IsNillable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.IsNillableSetBoolean">
            <summary>设置 XmlSchemaElement.set_IsNillable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.NameAttributeGet">
            <summary>设置 XmlSchemaElement.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.NameAttributeSetString">
            <summary>设置 XmlSchemaElement.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.NameGet">
            <summary>设置 XmlSchemaElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.NameSetString">
            <summary>设置 XmlSchemaElement.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.NameStringGet">
            <summary>设置 XmlSchemaElement.get_NameString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.QualifiedNameGet">
            <summary>设置 XmlSchemaElement.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.RefNameGet">
            <summary>设置 XmlSchemaElement.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SchemaTypeGet">
            <summary>设置 XmlSchemaElement.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SchemaTypeNameGet">
            <summary>设置 XmlSchemaElement.get_SchemaTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SchemaTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_SchemaTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SchemaTypeSetXmlSchemaType">
            <summary>设置 XmlSchemaElement.set_SchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SetBlockResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.SetBlockResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SetElementTypeXmlSchemaType">
            <summary>设置 XmlSchemaElement.SetElementType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SetFinalResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaElement.SetFinalResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaElement.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SubstitutionGroupGet">
            <summary>设置 XmlSchemaElement.get_SubstitutionGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.SubstitutionGroupSetXmlQualifiedName">
            <summary>设置 XmlSchemaElement.set_SubstitutionGroup(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaElement.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaElement.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet">
            <summary>System.Xml.Schema.XmlSchemaEnumerationFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.#ctor(System.Xml.Schema.XmlSchemaEnumerationFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaEnumerationFacet.Constructor">
            <summary>设置 XmlSchemaEnumerationFacet.XmlSchemaEnumerationFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaException">
            <summary>System.Xml.Schema.XmlSchemaException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaException.#ctor(System.Xml.Schema.XmlSchemaException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.ArgsGet">
            <summary>设置 XmlSchemaException.get_Args() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.GetResGet">
            <summary>设置 XmlSchemaException.get_GetRes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.LineNumberGet">
            <summary>设置 XmlSchemaException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.LinePositionGet">
            <summary>设置 XmlSchemaException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.MessageGet">
            <summary>设置 XmlSchemaException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SetResourceIdString">
            <summary>设置 XmlSchemaException.SetResourceId(String resourceId) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SetSchemaObjectXmlSchemaObject">
            <summary>设置 XmlSchemaException.SetSchemaObject(XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SetSourceStringInt32Int32">
            <summary>设置 XmlSchemaException.SetSource(String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SetSourceXmlSchemaObject">
            <summary>设置 XmlSchemaException.SetSource(XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SourceSchemaObjectGet">
            <summary>设置 XmlSchemaException.get_SourceSchemaObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.AllInstances.SourceUriGet">
            <summary>设置 XmlSchemaException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ArgsGet">
            <summary>设置 XmlSchemaException.get_Args() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.Constructor">
            <summary>设置 XmlSchemaException.XmlSchemaException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaException.XmlSchemaException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorString">
            <summary>设置 XmlSchemaException.XmlSchemaException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringException">
            <summary>设置 XmlSchemaException.XmlSchemaException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringExceptionInt32Int32">
            <summary>设置 XmlSchemaException.XmlSchemaException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringString">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String arg) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringArray">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringArrayExceptionStringInt32Int32XmlSchemaObject">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String[] args, Exception innerException, String sourceUri, Int32 lineNumber, Int32 linePosition, XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringArrayStringInt32Int32">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String[] args, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringArrayXmlSchemaObject">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String[] args, XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringInt32Int32">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringStringInt32Int32">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String arg, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringStringXmlSchemaObject">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, String arg, XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.ConstructorStringXmlSchemaObject">
            <summary>设置 XmlSchemaException.XmlSchemaException(String res, XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.CreateMessageStringStringArray">
            <summary>设置 XmlSchemaException.CreateMessage(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.GetResGet">
            <summary>设置 XmlSchemaException.get_GetRes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.LineNumberGet">
            <summary>设置 XmlSchemaException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.LinePositionGet">
            <summary>设置 XmlSchemaException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.MessageGet">
            <summary>设置 XmlSchemaException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SetResourceIdString">
            <summary>设置 XmlSchemaException.SetResourceId(String resourceId) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SetSchemaObjectXmlSchemaObject">
            <summary>设置 XmlSchemaException.SetSchemaObject(XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SetSourceStringInt32Int32">
            <summary>设置 XmlSchemaException.SetSource(String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SetSourceXmlSchemaObject">
            <summary>设置 XmlSchemaException.SetSource(XmlSchemaObject source) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SourceSchemaObjectGet">
            <summary>设置 XmlSchemaException.get_SourceSchemaObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaException.SourceUriGet">
            <summary>设置 XmlSchemaException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaExternal">
            <summary>System.Xml.Schema.XmlSchemaExternal 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.#ctor(System.Xml.Schema.XmlSchemaExternal)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.BaseUriGet">
            <summary>设置 XmlSchemaExternal.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.BaseUriSetUri">
            <summary>设置 XmlSchemaExternal.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.IdAttributeGet">
            <summary>设置 XmlSchemaExternal.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.IdAttributeSetString">
            <summary>设置 XmlSchemaExternal.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.IdGet">
            <summary>设置 XmlSchemaExternal.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.IdSetString">
            <summary>设置 XmlSchemaExternal.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.SchemaGet">
            <summary>设置 XmlSchemaExternal.get_Schema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.SchemaLocationGet">
            <summary>设置 XmlSchemaExternal.get_SchemaLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.SchemaLocationSetString">
            <summary>设置 XmlSchemaExternal.set_SchemaLocation(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.SchemaSetXmlSchema">
            <summary>设置 XmlSchemaExternal.set_Schema(XmlSchema value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaExternal.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.UnhandledAttributesGet">
            <summary>设置 XmlSchemaExternal.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.AllInstances.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaExternal.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.BaseUriGet">
            <summary>设置 XmlSchemaExternal.get_BaseUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.BaseUriSetUri">
            <summary>设置 XmlSchemaExternal.set_BaseUri(Uri value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.Constructor">
            <summary>设置 XmlSchemaExternal.XmlSchemaExternal() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.IdAttributeGet">
            <summary>设置 XmlSchemaExternal.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.IdAttributeSetString">
            <summary>设置 XmlSchemaExternal.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.IdGet">
            <summary>设置 XmlSchemaExternal.get_Id() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.IdSetString">
            <summary>设置 XmlSchemaExternal.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.SchemaGet">
            <summary>设置 XmlSchemaExternal.get_Schema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.SchemaLocationGet">
            <summary>设置 XmlSchemaExternal.get_SchemaLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.SchemaLocationSetString">
            <summary>设置 XmlSchemaExternal.set_SchemaLocation(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.SchemaSetXmlSchema">
            <summary>设置 XmlSchemaExternal.set_Schema(XmlSchema value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaExternal.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.UnhandledAttributesGet">
            <summary>设置 XmlSchemaExternal.get_UnhandledAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaExternal.UnhandledAttributesSetXmlAttributeArray">
            <summary>设置 XmlSchemaExternal.set_UnhandledAttributes(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaFacet">
            <summary>System.Xml.Schema.XmlSchemaFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.#ctor(System.Xml.Schema.XmlSchemaFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.AllInstances.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.AllInstances.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.AllInstances.ValueGet">
            <summary>设置 XmlSchemaFacet.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.AllInstances.ValueSetString">
            <summary>设置 XmlSchemaFacet.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.Constructor">
            <summary>设置 XmlSchemaFacet.XmlSchemaFacet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.ValueGet">
            <summary>设置 XmlSchemaFacet.get_Value() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFacet.ValueSetString">
            <summary>设置 XmlSchemaFacet.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet">
            <summary>System.Xml.Schema.XmlSchemaFractionDigitsFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.#ctor(System.Xml.Schema.XmlSchemaFractionDigitsFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaFractionDigitsFacet.Constructor">
            <summary>设置 XmlSchemaFractionDigitsFacet.XmlSchemaFractionDigitsFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroup">
            <summary>System.Xml.Schema.XmlSchemaGroup 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.#ctor(System.Xml.Schema.XmlSchemaGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.CanonicalParticleGet">
            <summary>设置 XmlSchemaGroup.get_CanonicalParticle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.CanonicalParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaGroup.set_CanonicalParticle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.Clone">
            <summary>设置 XmlSchemaGroup.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.CloneXmlSchema">
            <summary>设置 XmlSchemaGroup.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaGroup.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaGroup.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.NameGet">
            <summary>设置 XmlSchemaGroup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.NameSetString">
            <summary>设置 XmlSchemaGroup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.ParticleGet">
            <summary>设置 XmlSchemaGroup.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.ParticleSetXmlSchemaGroupBase">
            <summary>设置 XmlSchemaGroup.set_Particle(XmlSchemaGroupBase value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaGroup.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.RedefinedGet">
            <summary>设置 XmlSchemaGroup.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.RedefinedSetXmlSchemaGroup">
            <summary>设置 XmlSchemaGroup.set_Redefined(XmlSchemaGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.SelfReferenceCountGet">
            <summary>设置 XmlSchemaGroup.get_SelfReferenceCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.SelfReferenceCountSetInt32">
            <summary>设置 XmlSchemaGroup.set_SelfReferenceCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaGroup.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.CanonicalParticleGet">
            <summary>设置 XmlSchemaGroup.get_CanonicalParticle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.CanonicalParticleSetXmlSchemaParticle">
            <summary>设置 XmlSchemaGroup.set_CanonicalParticle(XmlSchemaParticle value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.Clone">
            <summary>设置 XmlSchemaGroup.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.CloneXmlSchema">
            <summary>设置 XmlSchemaGroup.Clone(XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.Constructor">
            <summary>设置 XmlSchemaGroup.XmlSchemaGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.NameAttributeGet">
            <summary>设置 XmlSchemaGroup.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.NameAttributeSetString">
            <summary>设置 XmlSchemaGroup.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.NameGet">
            <summary>设置 XmlSchemaGroup.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.NameSetString">
            <summary>设置 XmlSchemaGroup.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.ParticleGet">
            <summary>设置 XmlSchemaGroup.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.ParticleSetXmlSchemaGroupBase">
            <summary>设置 XmlSchemaGroup.set_Particle(XmlSchemaGroupBase value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.QualifiedNameGet">
            <summary>设置 XmlSchemaGroup.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.RedefinedGet">
            <summary>设置 XmlSchemaGroup.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.RedefinedSetXmlSchemaGroup">
            <summary>设置 XmlSchemaGroup.set_Redefined(XmlSchemaGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.SelfReferenceCountGet">
            <summary>设置 XmlSchemaGroup.get_SelfReferenceCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.SelfReferenceCountSetInt32">
            <summary>设置 XmlSchemaGroup.set_SelfReferenceCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroup.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaGroup.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase">
            <summary>System.Xml.Schema.XmlSchemaGroupBase 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.#ctor(System.Xml.Schema.XmlSchemaGroupBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupBase.Constructor">
            <summary>设置 XmlSchemaGroupBase.XmlSchemaGroupBase() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef">
            <summary>System.Xml.Schema.XmlSchemaGroupRef 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.#ctor(System.Xml.Schema.XmlSchemaGroupRef)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.ParticleGet">
            <summary>设置 XmlSchemaGroupRef.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.RedefinedGet">
            <summary>设置 XmlSchemaGroupRef.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.RedefinedSetXmlSchemaGroup">
            <summary>设置 XmlSchemaGroupRef.set_Redefined(XmlSchemaGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.RefNameGet">
            <summary>设置 XmlSchemaGroupRef.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaGroupRef.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.AllInstances.SetParticleXmlSchemaGroupBase">
            <summary>设置 XmlSchemaGroupRef.SetParticle(XmlSchemaGroupBase value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.Constructor">
            <summary>设置 XmlSchemaGroupRef.XmlSchemaGroupRef() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.ParticleGet">
            <summary>设置 XmlSchemaGroupRef.get_Particle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.RedefinedGet">
            <summary>设置 XmlSchemaGroupRef.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.RedefinedSetXmlSchemaGroup">
            <summary>设置 XmlSchemaGroupRef.set_Redefined(XmlSchemaGroup value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.RefNameGet">
            <summary>设置 XmlSchemaGroupRef.get_RefName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.RefNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaGroupRef.set_RefName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaGroupRef.SetParticleXmlSchemaGroupBase">
            <summary>设置 XmlSchemaGroupRef.SetParticle(XmlSchemaGroupBase value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint">
            <summary>System.Xml.Schema.XmlSchemaIdentityConstraint 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.#ctor(System.Xml.Schema.XmlSchemaIdentityConstraint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.FieldsGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaIdentityConstraint.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.NameGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.NameSetString">
            <summary>设置 XmlSchemaIdentityConstraint.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.SelectorGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Selector() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.SelectorSetXmlSchemaXPath">
            <summary>设置 XmlSchemaIdentityConstraint.set_Selector(XmlSchemaXPath value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaIdentityConstraint.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.Constructor">
            <summary>设置 XmlSchemaIdentityConstraint.XmlSchemaIdentityConstraint() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.FieldsGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Fields() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.NameAttributeGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.NameAttributeSetString">
            <summary>设置 XmlSchemaIdentityConstraint.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.NameGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.NameSetString">
            <summary>设置 XmlSchemaIdentityConstraint.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.QualifiedNameGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.SelectorGet">
            <summary>设置 XmlSchemaIdentityConstraint.get_Selector() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.SelectorSetXmlSchemaXPath">
            <summary>设置 XmlSchemaIdentityConstraint.set_Selector(XmlSchemaXPath value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaIdentityConstraint.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaIdentityConstraint.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaImport">
            <summary>System.Xml.Schema.XmlSchemaImport 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaImport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaImport.#ctor(System.Xml.Schema.XmlSchemaImport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaImport.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaImport.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances.AnnotationGet">
            <summary>设置 XmlSchemaImport.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaImport.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances.NamespaceGet">
            <summary>设置 XmlSchemaImport.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AllInstances.NamespaceSetString">
            <summary>设置 XmlSchemaImport.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AnnotationGet">
            <summary>设置 XmlSchemaImport.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaImport.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaImport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaImport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.Constructor">
            <summary>设置 XmlSchemaImport.XmlSchemaImport() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.NamespaceGet">
            <summary>设置 XmlSchemaImport.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaImport.NamespaceSetString">
            <summary>设置 XmlSchemaImport.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInclude">
            <summary>System.Xml.Schema.XmlSchemaInclude 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.#ctor(System.Xml.Schema.XmlSchemaInclude)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaInclude.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaInclude.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AllInstances.AnnotationGet">
            <summary>设置 XmlSchemaInclude.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AllInstances.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaInclude.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AnnotationGet">
            <summary>设置 XmlSchemaInclude.get_Annotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.AnnotationSetXmlSchemaAnnotation">
            <summary>设置 XmlSchemaInclude.set_Annotation(XmlSchemaAnnotation value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInclude.Constructor">
            <summary>设置 XmlSchemaInclude.XmlSchemaInclude() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInference">
            <summary>System.Xml.Schema.XmlSchemaInference 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInference.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInference.#ctor(System.Xml.Schema.XmlSchemaInference)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindAttributeICollectionString">
            <summary>设置 XmlSchemaInference.FindAttribute(ICollection attributes, String attrName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindAttributeRefICollectionStringString">
            <summary>设置 XmlSchemaInference.FindAttributeRef(ICollection attributes, String attributeName, String nsURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindElementRefXmlSchemaObjectCollectionStringString">
            <summary>设置 XmlSchemaInference.FindElementRef(XmlSchemaObjectCollection elements, String elementName, String nsURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindElementXmlSchemaObjectCollectionString">
            <summary>设置 XmlSchemaInference.FindElement(XmlSchemaObjectCollection elements, String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindGlobalElementStringStringXmlSchemaOut">
            <summary>设置 XmlSchemaInference.FindGlobalElement(String namespaceURI, String localName, XmlSchema&amp; parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.FindMatchingElementBooleanXmlReaderXmlSchemaComplexTypeInt32RefBooleanRefXmlSchemaBoolean">
            <summary>设置 XmlSchemaInference.FindMatchingElement(Boolean bCreatingNewType, XmlReader xtr, XmlSchemaComplexType ct, Int32&amp; lastUsedSeqItem, Boolean&amp; bParticleChanged, XmlSchema parentSchema, Boolean setMaxoccurs) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.InferElementXmlSchemaElementBooleanXmlSchema">
            <summary>设置 XmlSchemaInference.InferElement(XmlSchemaElement xse, Boolean bCreatingNewType, XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.InferSchema1XmlReaderXmlSchemaSet">
            <summary>设置 XmlSchemaInference.InferSchema1(XmlReader instanceDocument, XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.InferSchemaXmlReader">
            <summary>设置 XmlSchemaInference.InferSchema(XmlReader instanceDocument) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.InferSchemaXmlReaderXmlSchemaSet">
            <summary>设置 XmlSchemaInference.InferSchema(XmlReader instanceDocument, XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.MakeExistingAttributesOptionalXmlSchemaComplexTypeXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaInference.MakeExistingAttributesOptional(XmlSchemaComplexType ct, XmlSchemaObjectCollection attributesInInstance) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.OccurrenceGet">
            <summary>设置 XmlSchemaInference.get_Occurrence() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.OccurrenceSetXmlSchemaInferenceInferenceOption">
            <summary>设置 XmlSchemaInference.set_Occurrence(InferenceOption value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.ProcessAttributesXmlSchemaElementRefXmlSchemaTypeBooleanXmlSchema">
            <summary>设置 XmlSchemaInference.ProcessAttributes(XmlSchemaElement&amp; xse, XmlSchemaType effectiveSchemaType, Boolean bCreatingNewType, XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.RefineSimpleTypeStringInt32Ref">
            <summary>设置 XmlSchemaInference.RefineSimpleType(String s, Int32&amp; iTypeFlags) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.SetMinMaxOccursXmlSchemaElementBoolean">
            <summary>设置 XmlSchemaInference.SetMinMaxOccurs(XmlSchemaElement el, Boolean setMaxOccurs) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.TypeInferenceGet">
            <summary>设置 XmlSchemaInference.get_TypeInference() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.AllInstances.TypeInferenceSetXmlSchemaInferenceInferenceOption">
            <summary>设置 XmlSchemaInference.set_TypeInference(InferenceOption value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInference.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInference.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.Constructor">
            <summary>设置 XmlSchemaInference.XmlSchemaInference() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.DateTimeStringBooleanBoolean">
            <summary>设置 XmlSchemaInference.DateTime(String s, Boolean bDate, Boolean bTime) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.FindAttributeICollectionString">
            <summary>设置 XmlSchemaInference.FindAttribute(ICollection attributes, String attrName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.FindAttributeRefICollectionStringString">
            <summary>设置 XmlSchemaInference.FindAttributeRef(ICollection attributes, String attributeName, String nsURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.FindElementRefXmlSchemaObjectCollectionStringString">
            <summary>设置 XmlSchemaInference.FindElementRef(XmlSchemaObjectCollection elements, String elementName, String nsURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.FindElementXmlSchemaObjectCollectionString">
            <summary>设置 XmlSchemaInference.FindElement(XmlSchemaObjectCollection elements, String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.FindGlobalElementStringStringXmlSchemaOut">
            <summary>设置 XmlSchemaInference.FindGlobalElement(String namespaceURI, String localName, XmlSchema&amp; parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.InferElementXmlSchemaElementBooleanXmlSchema">
            <summary>设置 XmlSchemaInference.InferElement(XmlSchemaElement xse, Boolean bCreatingNewType, XmlSchema parentSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.InferSchema1XmlReaderXmlSchemaSet">
            <summary>设置 XmlSchemaInference.InferSchema1(XmlReader instanceDocument, XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.InferSchemaXmlReader">
            <summary>设置 XmlSchemaInference.InferSchema(XmlReader instanceDocument) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.InferSchemaXmlReaderXmlSchemaSet">
            <summary>设置 XmlSchemaInference.InferSchema(XmlReader instanceDocument, XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.InferSimpleTypeStringBooleanRef">
            <summary>设置 XmlSchemaInference.InferSimpleType(String s, Boolean&amp; bNeedsRangeCheck) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.MakeExistingAttributesOptionalXmlSchemaComplexTypeXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaInference.MakeExistingAttributesOptional(XmlSchemaComplexType ct, XmlSchemaObjectCollection attributesInInstance) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.OccurrenceGet">
            <summary>设置 XmlSchemaInference.get_Occurrence() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.OccurrenceSetXmlSchemaInferenceInferenceOption">
            <summary>设置 XmlSchemaInference.set_Occurrence(InferenceOption value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.RefineSimpleTypeStringInt32Ref">
            <summary>设置 XmlSchemaInference.RefineSimpleType(String s, Int32&amp; iTypeFlags) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.SetMinMaxOccursXmlSchemaElementBoolean">
            <summary>设置 XmlSchemaInference.SetMinMaxOccurs(XmlSchemaElement el, Boolean setMaxOccurs) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.StaticConstructor">
            <summary>设置 XmlSchemaInference.XmlSchemaInference() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.TypeInferenceGet">
            <summary>设置 XmlSchemaInference.get_TypeInference() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInference.TypeInferenceSetXmlSchemaInferenceInferenceOption">
            <summary>设置 XmlSchemaInference.set_TypeInference(InferenceOption value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException">
            <summary>System.Xml.Schema.XmlSchemaInferenceException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.#ctor(System.Xml.Schema.XmlSchemaInferenceException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaInferenceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.Constructor">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorString">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringException">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringExceptionInt32Int32">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringInt32Int32">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringString">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, String arg) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringStringArray">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringStringArrayStringInt32Int32">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, String[] args, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringStringInt32Int32">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.ConstructorStringStringStringInt32Int32">
            <summary>设置 XmlSchemaInferenceException.XmlSchemaInferenceException(String res, String arg, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInferenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaInferenceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInfo">
            <summary>System.Xml.Schema.XmlSchemaInfo 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.#ctor(System.Xml.Schema.XmlSchemaInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.Clear">
            <summary>设置 XmlSchemaInfo.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.ContentTypeGet">
            <summary>设置 XmlSchemaInfo.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.ContentTypeSetXmlSchemaContentType">
            <summary>设置 XmlSchemaInfo.set_ContentType(XmlSchemaContentType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.HasDefaultValueGet">
            <summary>设置 XmlSchemaInfo.get_HasDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.IsDefaultGet">
            <summary>设置 XmlSchemaInfo.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.IsDefaultSetBoolean">
            <summary>设置 XmlSchemaInfo.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.IsNilGet">
            <summary>设置 XmlSchemaInfo.get_IsNil() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.IsNilSetBoolean">
            <summary>设置 XmlSchemaInfo.set_IsNil(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.IsUnionTypeGet">
            <summary>设置 XmlSchemaInfo.get_IsUnionType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.MemberTypeGet">
            <summary>设置 XmlSchemaInfo.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.MemberTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaInfo.set_MemberType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaAttributeGet">
            <summary>设置 XmlSchemaInfo.get_SchemaAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaAttributeSetXmlSchemaAttribute">
            <summary>设置 XmlSchemaInfo.set_SchemaAttribute(XmlSchemaAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaElementGet">
            <summary>设置 XmlSchemaInfo.get_SchemaElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaElementSetXmlSchemaElement">
            <summary>设置 XmlSchemaInfo.set_SchemaElement(XmlSchemaElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaTypeGet">
            <summary>设置 XmlSchemaInfo.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.SchemaTypeSetXmlSchemaType">
            <summary>设置 XmlSchemaInfo.set_SchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.ValidityGet">
            <summary>设置 XmlSchemaInfo.get_Validity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.ValiditySetXmlSchemaValidity">
            <summary>设置 XmlSchemaInfo.set_Validity(XmlSchemaValidity value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.AllInstances.XmlTypeGet">
            <summary>设置 XmlSchemaInfo.get_XmlType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.Bind(System.Xml.Schema.IXmlSchemaInfo)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.Clear">
            <summary>设置 XmlSchemaInfo.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.Constructor">
            <summary>设置 XmlSchemaInfo.XmlSchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.ConstructorXmlSchemaValidity">
            <summary>设置 XmlSchemaInfo.XmlSchemaInfo(XmlSchemaValidity validity) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.ContentTypeGet">
            <summary>设置 XmlSchemaInfo.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.ContentTypeSetXmlSchemaContentType">
            <summary>设置 XmlSchemaInfo.set_ContentType(XmlSchemaContentType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.HasDefaultValueGet">
            <summary>设置 XmlSchemaInfo.get_HasDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.IsDefaultGet">
            <summary>设置 XmlSchemaInfo.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.IsDefaultSetBoolean">
            <summary>设置 XmlSchemaInfo.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.IsNilGet">
            <summary>设置 XmlSchemaInfo.get_IsNil() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.IsNilSetBoolean">
            <summary>设置 XmlSchemaInfo.set_IsNil(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.IsUnionTypeGet">
            <summary>设置 XmlSchemaInfo.get_IsUnionType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.MemberTypeGet">
            <summary>设置 XmlSchemaInfo.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.MemberTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaInfo.set_MemberType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaAttributeGet">
            <summary>设置 XmlSchemaInfo.get_SchemaAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaAttributeSetXmlSchemaAttribute">
            <summary>设置 XmlSchemaInfo.set_SchemaAttribute(XmlSchemaAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaElementGet">
            <summary>设置 XmlSchemaInfo.get_SchemaElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaElementSetXmlSchemaElement">
            <summary>设置 XmlSchemaInfo.set_SchemaElement(XmlSchemaElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaTypeGet">
            <summary>设置 XmlSchemaInfo.get_SchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.SchemaTypeSetXmlSchemaType">
            <summary>设置 XmlSchemaInfo.set_SchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.ValidityGet">
            <summary>设置 XmlSchemaInfo.get_Validity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.ValiditySetXmlSchemaValidity">
            <summary>设置 XmlSchemaInfo.set_Validity(XmlSchemaValidity value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaInfo.XmlTypeGet">
            <summary>设置 XmlSchemaInfo.get_XmlType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaKey">
            <summary>System.Xml.Schema.XmlSchemaKey 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKey.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKey.#ctor(System.Xml.Schema.XmlSchemaKey)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaKey.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKey.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKey.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKey.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKey.Constructor">
            <summary>设置 XmlSchemaKey.XmlSchemaKey() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref">
            <summary>System.Xml.Schema.XmlSchemaKeyref 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.#ctor(System.Xml.Schema.XmlSchemaKeyref)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.AllInstances.ReferGet">
            <summary>设置 XmlSchemaKeyref.get_Refer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.AllInstances.ReferSetXmlQualifiedName">
            <summary>设置 XmlSchemaKeyref.set_Refer(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.Constructor">
            <summary>设置 XmlSchemaKeyref.XmlSchemaKeyref() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.ReferGet">
            <summary>设置 XmlSchemaKeyref.get_Refer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaKeyref.ReferSetXmlQualifiedName">
            <summary>设置 XmlSchemaKeyref.set_Refer(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaLengthFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.#ctor(System.Xml.Schema.XmlSchemaLengthFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaLengthFacet.Constructor">
            <summary>设置 XmlSchemaLengthFacet.XmlSchemaLengthFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxExclusiveFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.#ctor(System.Xml.Schema.XmlSchemaMaxExclusiveFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxExclusiveFacet.Constructor">
            <summary>设置 XmlSchemaMaxExclusiveFacet.XmlSchemaMaxExclusiveFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxInclusiveFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.#ctor(System.Xml.Schema.XmlSchemaMaxInclusiveFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxInclusiveFacet.Constructor">
            <summary>设置 XmlSchemaMaxInclusiveFacet.XmlSchemaMaxInclusiveFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxLengthFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.#ctor(System.Xml.Schema.XmlSchemaMaxLengthFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMaxLengthFacet.Constructor">
            <summary>设置 XmlSchemaMaxLengthFacet.XmlSchemaMaxLengthFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMinExclusiveFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.#ctor(System.Xml.Schema.XmlSchemaMinExclusiveFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinExclusiveFacet.Constructor">
            <summary>设置 XmlSchemaMinExclusiveFacet.XmlSchemaMinExclusiveFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMinInclusiveFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.#ctor(System.Xml.Schema.XmlSchemaMinInclusiveFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinInclusiveFacet.Constructor">
            <summary>设置 XmlSchemaMinInclusiveFacet.XmlSchemaMinInclusiveFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaMinLengthFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.#ctor(System.Xml.Schema.XmlSchemaMinLengthFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaMinLengthFacet.Constructor">
            <summary>设置 XmlSchemaMinLengthFacet.XmlSchemaMinLengthFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaNotation">
            <summary>System.Xml.Schema.XmlSchemaNotation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.#ctor(System.Xml.Schema.XmlSchemaNotation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaNotation.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaNotation.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.NameGet">
            <summary>设置 XmlSchemaNotation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.NameSetString">
            <summary>设置 XmlSchemaNotation.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.PublicGet">
            <summary>设置 XmlSchemaNotation.get_Public() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.PublicSetString">
            <summary>设置 XmlSchemaNotation.set_Public(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaNotation.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.QualifiedNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaNotation.set_QualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.SystemGet">
            <summary>设置 XmlSchemaNotation.get_System() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.AllInstances.SystemSetString">
            <summary>设置 XmlSchemaNotation.set_System(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.Constructor">
            <summary>设置 XmlSchemaNotation.XmlSchemaNotation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.NameAttributeGet">
            <summary>设置 XmlSchemaNotation.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.NameAttributeSetString">
            <summary>设置 XmlSchemaNotation.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.NameGet">
            <summary>设置 XmlSchemaNotation.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.NameSetString">
            <summary>设置 XmlSchemaNotation.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.PublicGet">
            <summary>设置 XmlSchemaNotation.get_Public() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.PublicSetString">
            <summary>设置 XmlSchemaNotation.set_Public(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.QualifiedNameGet">
            <summary>设置 XmlSchemaNotation.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.QualifiedNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaNotation.set_QualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.SystemGet">
            <summary>设置 XmlSchemaNotation.get_System() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNotation.SystemSetString">
            <summary>设置 XmlSchemaNotation.set_System(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet">
            <summary>System.Xml.Schema.XmlSchemaNumericFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.#ctor(System.Xml.Schema.XmlSchemaNumericFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaNumericFacet.Constructor">
            <summary>设置 XmlSchemaNumericFacet.XmlSchemaNumericFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObject">
            <summary>System.Xml.Schema.XmlSchemaObject 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObject.#ctor(System.Xml.Schema.XmlSchemaObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaObject.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaObject.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.Clone">
            <summary>设置 XmlSchemaObject.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.IdAttributeGet">
            <summary>设置 XmlSchemaObject.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.IdAttributeSetString">
            <summary>设置 XmlSchemaObject.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.IsProcessingGet">
            <summary>设置 XmlSchemaObject.get_IsProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.IsProcessingSetBoolean">
            <summary>设置 XmlSchemaObject.set_IsProcessing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.LineNumberGet">
            <summary>设置 XmlSchemaObject.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.LineNumberSetInt32">
            <summary>设置 XmlSchemaObject.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.LinePositionGet">
            <summary>设置 XmlSchemaObject.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.LinePositionSetInt32">
            <summary>设置 XmlSchemaObject.set_LinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaObject.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaObject.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.NamespacesGet">
            <summary>设置 XmlSchemaObject.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.NamespacesSetXmlSerializerNamespaces">
            <summary>设置 XmlSchemaObject.set_Namespaces(XmlSerializerNamespaces value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.OnAddXmlSchemaObjectCollectionObject">
            <summary>设置 XmlSchemaObject.OnAdd(XmlSchemaObjectCollection container, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.OnClearXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaObject.OnClear(XmlSchemaObjectCollection container) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.OnRemoveXmlSchemaObjectCollectionObject">
            <summary>设置 XmlSchemaObject.OnRemove(XmlSchemaObjectCollection container, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.ParentGet">
            <summary>设置 XmlSchemaObject.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.ParentSetXmlSchemaObject">
            <summary>设置 XmlSchemaObject.set_Parent(XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaObject.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.SourceUriGet">
            <summary>设置 XmlSchemaObject.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.AllInstances.SourceUriSetString">
            <summary>设置 XmlSchemaObject.set_SourceUri(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.Clone">
            <summary>设置 XmlSchemaObject.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.Constructor">
            <summary>设置 XmlSchemaObject.XmlSchemaObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.IdAttributeGet">
            <summary>设置 XmlSchemaObject.get_IdAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.IdAttributeSetString">
            <summary>设置 XmlSchemaObject.set_IdAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.IsProcessingGet">
            <summary>设置 XmlSchemaObject.get_IsProcessing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.IsProcessingSetBoolean">
            <summary>设置 XmlSchemaObject.set_IsProcessing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.LineNumberGet">
            <summary>设置 XmlSchemaObject.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.LineNumberSetInt32">
            <summary>设置 XmlSchemaObject.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.LinePositionGet">
            <summary>设置 XmlSchemaObject.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.LinePositionSetInt32">
            <summary>设置 XmlSchemaObject.set_LinePosition(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.NameAttributeGet">
            <summary>设置 XmlSchemaObject.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.NameAttributeSetString">
            <summary>设置 XmlSchemaObject.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.NamespacesGet">
            <summary>设置 XmlSchemaObject.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.NamespacesSetXmlSerializerNamespaces">
            <summary>设置 XmlSchemaObject.set_Namespaces(XmlSerializerNamespaces value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.OnAddXmlSchemaObjectCollectionObject">
            <summary>设置 XmlSchemaObject.OnAdd(XmlSchemaObjectCollection container, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.OnClearXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaObject.OnClear(XmlSchemaObjectCollection container) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.OnRemoveXmlSchemaObjectCollectionObject">
            <summary>设置 XmlSchemaObject.OnRemove(XmlSchemaObjectCollection container, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.ParentGet">
            <summary>设置 XmlSchemaObject.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.ParentSetXmlSchemaObject">
            <summary>设置 XmlSchemaObject.set_Parent(XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.SetUnhandledAttributesXmlAttributeArray">
            <summary>设置 XmlSchemaObject.SetUnhandledAttributes(XmlAttribute[] moreAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.SourceUriGet">
            <summary>设置 XmlSchemaObject.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObject.SourceUriSetString">
            <summary>设置 XmlSchemaObject.set_SourceUri(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection">
            <summary>System.Xml.Schema.XmlSchemaObjectCollection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObjectCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AddXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Add(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.AddXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Add(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.Clone">
            <summary>设置 XmlSchemaObjectCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.ContainsXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Contains(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.CopyToXmlSchemaObjectArrayInt32">
            <summary>设置 XmlSchemaObjectCollection.CopyTo(XmlSchemaObject[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.GetEnumerator">
            <summary>设置 XmlSchemaObjectCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.IndexOfXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.IndexOf(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.InsertInt32XmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Insert(Int32 index, XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.ItemGetInt32">
            <summary>设置 XmlSchemaObjectCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.ItemSetInt32XmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.set_Item(Int32 index, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.OnClear">
            <summary>设置 XmlSchemaObjectCollection.OnClear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.OnInsertInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnInsert(Int32 index, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.OnRemoveInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnRemove(Int32 index, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemaObjectCollection.OnSet(Int32 index, Object oldValue, Object newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.AllInstances.RemoveXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Remove(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Clone">
            <summary>设置 XmlSchemaObjectCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.Constructor">
            <summary>设置 XmlSchemaObjectCollection.XmlSchemaObjectCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.ConstructorXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.XmlSchemaObjectCollection(XmlSchemaObject parent) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.ContainsXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Contains(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.CopyToXmlSchemaObjectArrayInt32">
            <summary>设置 XmlSchemaObjectCollection.CopyTo(XmlSchemaObject[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.GetEnumerator">
            <summary>设置 XmlSchemaObjectCollection.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.IndexOfXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.IndexOf(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.InsertInt32XmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Insert(Int32 index, XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.ItemGetInt32">
            <summary>设置 XmlSchemaObjectCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.ItemSetInt32XmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.set_Item(Int32 index, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.OnClear">
            <summary>设置 XmlSchemaObjectCollection.OnClear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.OnInsertInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnInsert(Int32 index, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.OnRemoveInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnRemove(Int32 index, Object item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemaObjectCollection.OnSet(Int32 index, Object oldValue, Object newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectCollection.RemoveXmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.Remove(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator">
            <summary>System.Xml.Schema.XmlSchemaObjectEnumerator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.#ctor(System.Xml.Schema.XmlSchemaObjectEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.CurrentGet">
            <summary>设置 XmlSchemaObjectEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.MoveNext">
            <summary>设置 XmlSchemaObjectEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.Reset">
            <summary>设置 XmlSchemaObjectEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.AllInstances.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.ConstructorIEnumerator">
            <summary>设置 XmlSchemaObjectEnumerator.XmlSchemaObjectEnumerator(IEnumerator enumerator) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.CurrentGet">
            <summary>设置 XmlSchemaObjectEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.MoveNext">
            <summary>设置 XmlSchemaObjectEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.Reset">
            <summary>设置 XmlSchemaObjectEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.SystemCollectionsIEnumeratorMoveNext">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectEnumerator.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaObjectEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable">
            <summary>System.Xml.Schema.XmlSchemaObjectTable 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.#ctor(System.Xml.Schema.XmlSchemaObjectTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AddXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Add(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.AddXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Add(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.Clear">
            <summary>设置 XmlSchemaObjectTable.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.ContainsXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.Contains(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.CountGet">
            <summary>设置 XmlSchemaObjectTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.GetEnumerator">
            <summary>设置 XmlSchemaObjectTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.InsertXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Insert(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.ItemGetXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.get_Item(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.NamesGet">
            <summary>设置 XmlSchemaObjectTable.get_Names() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.RemoveXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.Remove(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.ReplaceXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Replace(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.AllInstances.ValuesGet">
            <summary>设置 XmlSchemaObjectTable.get_Values() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.Clear">
            <summary>设置 XmlSchemaObjectTable.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.Constructor">
            <summary>设置 XmlSchemaObjectTable.XmlSchemaObjectTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.ContainsXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.Contains(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.CountGet">
            <summary>设置 XmlSchemaObjectTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.GetEnumerator">
            <summary>设置 XmlSchemaObjectTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.InsertXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Insert(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.ItemGetXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.get_Item(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.NamesGet">
            <summary>设置 XmlSchemaObjectTable.get_Names() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.RemoveXmlQualifiedName">
            <summary>设置 XmlSchemaObjectTable.Remove(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.ReplaceXmlQualifiedNameXmlSchemaObject">
            <summary>设置 XmlSchemaObjectTable.Replace(XmlQualifiedName name, XmlSchemaObject value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaObjectTable.ValuesGet">
            <summary>设置 XmlSchemaObjectTable.get_Values() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaParticle">
            <summary>System.Xml.Schema.XmlSchemaParticle 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.#ctor(System.Xml.Schema.XmlSchemaParticle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.GetQualifiedName">
            <summary>设置 XmlSchemaParticle.GetQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.IsEmptyGet">
            <summary>设置 XmlSchemaParticle.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.IsMultipleOccurrenceGet">
            <summary>设置 XmlSchemaParticle.get_IsMultipleOccurrence() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MaxOccursGet">
            <summary>设置 XmlSchemaParticle.get_MaxOccurs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MaxOccursSetDecimal">
            <summary>设置 XmlSchemaParticle.set_MaxOccurs(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MaxOccursStringGet">
            <summary>设置 XmlSchemaParticle.get_MaxOccursString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MaxOccursStringSetString">
            <summary>设置 XmlSchemaParticle.set_MaxOccursString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MinOccursGet">
            <summary>设置 XmlSchemaParticle.get_MinOccurs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MinOccursSetDecimal">
            <summary>设置 XmlSchemaParticle.set_MinOccurs(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MinOccursStringGet">
            <summary>设置 XmlSchemaParticle.get_MinOccursString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.MinOccursStringSetString">
            <summary>设置 XmlSchemaParticle.set_MinOccursString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.AllInstances.NameStringGet">
            <summary>设置 XmlSchemaParticle.get_NameString() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.Constructor">
            <summary>设置 XmlSchemaParticle.XmlSchemaParticle() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.GetQualifiedName">
            <summary>设置 XmlSchemaParticle.GetQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.IsEmptyGet">
            <summary>设置 XmlSchemaParticle.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.IsMultipleOccurrenceGet">
            <summary>设置 XmlSchemaParticle.get_IsMultipleOccurrence() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MaxOccursGet">
            <summary>设置 XmlSchemaParticle.get_MaxOccurs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MaxOccursSetDecimal">
            <summary>设置 XmlSchemaParticle.set_MaxOccurs(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MaxOccursStringGet">
            <summary>设置 XmlSchemaParticle.get_MaxOccursString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MaxOccursStringSetString">
            <summary>设置 XmlSchemaParticle.set_MaxOccursString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MinOccursGet">
            <summary>设置 XmlSchemaParticle.get_MinOccurs() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MinOccursSetDecimal">
            <summary>设置 XmlSchemaParticle.set_MinOccurs(Decimal value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MinOccursStringGet">
            <summary>设置 XmlSchemaParticle.get_MinOccursString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.MinOccursStringSetString">
            <summary>设置 XmlSchemaParticle.set_MinOccursString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.NameStringGet">
            <summary>设置 XmlSchemaParticle.get_NameString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaParticle.StaticConstructor">
            <summary>设置 XmlSchemaParticle.XmlSchemaParticle() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet">
            <summary>System.Xml.Schema.XmlSchemaPatternFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.#ctor(System.Xml.Schema.XmlSchemaPatternFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaPatternFacet.Constructor">
            <summary>设置 XmlSchemaPatternFacet.XmlSchemaPatternFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine">
            <summary>System.Xml.Schema.XmlSchemaRedefine 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.#ctor(System.Xml.Schema.XmlSchemaRedefine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaRedefine.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances.AddAnnotationXmlSchemaAnnotation">
            <summary>设置 XmlSchemaRedefine.AddAnnotation(XmlSchemaAnnotation annotation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances.AttributeGroupsGet">
            <summary>设置 XmlSchemaRedefine.get_AttributeGroups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances.GroupsGet">
            <summary>设置 XmlSchemaRedefine.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances.ItemsGet">
            <summary>设置 XmlSchemaRedefine.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AllInstances.SchemaTypesGet">
            <summary>设置 XmlSchemaRedefine.get_SchemaTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.AttributeGroupsGet">
            <summary>设置 XmlSchemaRedefine.get_AttributeGroups() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.Constructor">
            <summary>设置 XmlSchemaRedefine.XmlSchemaRedefine() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.GroupsGet">
            <summary>设置 XmlSchemaRedefine.get_Groups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.ItemsGet">
            <summary>设置 XmlSchemaRedefine.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaRedefine.SchemaTypesGet">
            <summary>设置 XmlSchemaRedefine.get_SchemaTypes() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSequence">
            <summary>System.Xml.Schema.XmlSchemaSequence 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.#ctor(System.Xml.Schema.XmlSchemaSequence)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.AllInstances.IsEmptyGet">
            <summary>设置 XmlSchemaSequence.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.AllInstances.ItemsGet">
            <summary>设置 XmlSchemaSequence.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.AllInstances.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSequence.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.Constructor">
            <summary>设置 XmlSchemaSequence.XmlSchemaSequence() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.IsEmptyGet">
            <summary>设置 XmlSchemaSequence.get_IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.ItemsGet">
            <summary>设置 XmlSchemaSequence.get_Items() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSequence.SetItemsXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSequence.SetItems(XmlSchemaObjectCollection newItems) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSet">
            <summary>System.Xml.Schema.XmlSchemaSet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSet.#ctor(System.Xml.Schema.XmlSchemaSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AddStringString">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, String schemaUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AddStringXmlReader">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, XmlReader schemaDocument) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AddStringXmlReaderHashtable">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, XmlReader reader, Hashtable validatedNamespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AddXmlSchema">
            <summary>设置 XmlSchemaSet.Add(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AddXmlSchemaSet">
            <summary>设置 XmlSchemaSet.Add(XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.AddStringString">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, String schemaUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.AddStringXmlReader">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, XmlReader schemaDocument) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.AddStringXmlReaderHashtable">
            <summary>设置 XmlSchemaSet.Add(String targetNamespace, XmlReader reader, Hashtable validatedNamespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.AddXmlSchema">
            <summary>设置 XmlSchemaSet.Add(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.AddXmlSchemaSet">
            <summary>设置 XmlSchemaSet.Add(XmlSchemaSet schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CompilationSettingsGet">
            <summary>设置 XmlSchemaSet.get_CompilationSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CompilationSettingsSetXmlSchemaCompilationSettings">
            <summary>设置 XmlSchemaSet.set_CompilationSettings(XmlSchemaCompilationSettings value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.Compile">
            <summary>设置 XmlSchemaSet.Compile() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CompileAllGet">
            <summary>设置 XmlSchemaSet.get_CompileAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ContainsString">
            <summary>设置 XmlSchemaSet.Contains(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ContainsXmlSchema">
            <summary>设置 XmlSchemaSet.Contains(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CopyFromCompiledSetXmlSchemaSet">
            <summary>设置 XmlSchemaSet.CopyFromCompiledSet(XmlSchemaSet otherSet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CopyToXmlSchemaArrayInt32">
            <summary>设置 XmlSchemaSet.CopyTo(XmlSchema[] schemas, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.CountGet">
            <summary>设置 XmlSchemaSet.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.FindSchemaByNSAndUrlUriStringDictionaryEntryArray">
            <summary>设置 XmlSchemaSet.FindSchemaByNSAndUrl(Uri schemaUri, String ns, DictionaryEntry[] locationsTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GetEventHandler">
            <summary>设置 XmlSchemaSet.GetEventHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GetResolver">
            <summary>设置 XmlSchemaSet.GetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GetSchemaByUriUriXmlSchemaOut">
            <summary>设置 XmlSchemaSet.GetSchemaByUri(Uri schemaUri, XmlSchema&amp; schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GetTargetNamespaceXmlSchema">
            <summary>设置 XmlSchemaSet.GetTargetNamespace(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GlobalAttributesGet">
            <summary>设置 XmlSchemaSet.get_GlobalAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GlobalElementsGet">
            <summary>设置 XmlSchemaSet.get_GlobalElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.GlobalTypesGet">
            <summary>设置 XmlSchemaSet.get_GlobalTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.InternalSyncObjectGet">
            <summary>设置 XmlSchemaSet.get_InternalSyncObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.IsCompiledGet">
            <summary>设置 XmlSchemaSet.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.IsSchemaLoadedUriStringXmlSchemaOut">
            <summary>设置 XmlSchemaSet.IsSchemaLoaded(Uri schemaUri, String targetNamespace, XmlSchema&amp; schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.NameTableGet">
            <summary>设置 XmlSchemaSet.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ParseSchemaStringXmlReader">
            <summary>设置 XmlSchemaSet.ParseSchema(String targetNamespace, XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.PreprocessSchemaXmlSchemaRefString">
            <summary>设置 XmlSchemaSet.PreprocessSchema(XmlSchema&amp; schema, String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ReaderSettingsGet">
            <summary>设置 XmlSchemaSet.get_ReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.RemoveRecursiveXmlSchema">
            <summary>设置 XmlSchemaSet.RemoveRecursive(XmlSchema schemaToRemove) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.RemoveXmlSchema">
            <summary>设置 XmlSchemaSet.Remove(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.RemoveXmlSchemaBoolean">
            <summary>设置 XmlSchemaSet.Remove(XmlSchema schema, Boolean forceCompile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ReprocessXmlSchema">
            <summary>设置 XmlSchemaSet.Reprocess(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.SchemaLocationsGet">
            <summary>设置 XmlSchemaSet.get_SchemaLocations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.Schemas">
            <summary>设置 XmlSchemaSet.Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.SchemasString">
            <summary>设置 XmlSchemaSet.Schemas(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.SortedSchemasGet">
            <summary>设置 XmlSchemaSet.get_SortedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.SubstitutionGroupsGet">
            <summary>设置 XmlSchemaSet.get_SubstitutionGroups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.TypeExtensionsGet">
            <summary>设置 XmlSchemaSet.get_TypeExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlSchemaSet.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlSchemaSet.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.AllInstances.XmlResolverSetXmlResolver">
            <summary>设置 XmlSchemaSet.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CompilationSettingsGet">
            <summary>设置 XmlSchemaSet.get_CompilationSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CompilationSettingsSetXmlSchemaCompilationSettings">
            <summary>设置 XmlSchemaSet.set_CompilationSettings(XmlSchemaCompilationSettings value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.Compile">
            <summary>设置 XmlSchemaSet.Compile() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CompileAllGet">
            <summary>设置 XmlSchemaSet.get_CompileAll() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.Constructor">
            <summary>设置 XmlSchemaSet.XmlSchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ConstructorXmlNameTable">
            <summary>设置 XmlSchemaSet.XmlSchemaSet(XmlNameTable nameTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ContainsString">
            <summary>设置 XmlSchemaSet.Contains(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ContainsXmlSchema">
            <summary>设置 XmlSchemaSet.Contains(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CopyFromCompiledSetXmlSchemaSet">
            <summary>设置 XmlSchemaSet.CopyFromCompiledSet(XmlSchemaSet otherSet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CopyToXmlSchemaArrayInt32">
            <summary>设置 XmlSchemaSet.CopyTo(XmlSchema[] schemas, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.CountGet">
            <summary>设置 XmlSchemaSet.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.FindSchemaByNSAndUrlUriStringDictionaryEntryArray">
            <summary>设置 XmlSchemaSet.FindSchemaByNSAndUrl(Uri schemaUri, String ns, DictionaryEntry[] locationsTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GetEventHandler">
            <summary>设置 XmlSchemaSet.GetEventHandler() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GetResolver">
            <summary>设置 XmlSchemaSet.GetResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GetSchemaByUriUriXmlSchemaOut">
            <summary>设置 XmlSchemaSet.GetSchemaByUri(Uri schemaUri, XmlSchema&amp; schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GetTargetNamespaceXmlSchema">
            <summary>设置 XmlSchemaSet.GetTargetNamespace(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GlobalAttributesGet">
            <summary>设置 XmlSchemaSet.get_GlobalAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GlobalElementsGet">
            <summary>设置 XmlSchemaSet.get_GlobalElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.GlobalTypesGet">
            <summary>设置 XmlSchemaSet.get_GlobalTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.InternalSyncObjectGet">
            <summary>设置 XmlSchemaSet.get_InternalSyncObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.IsCompiledGet">
            <summary>设置 XmlSchemaSet.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.IsSchemaLoadedUriStringXmlSchemaOut">
            <summary>设置 XmlSchemaSet.IsSchemaLoaded(Uri schemaUri, String targetNamespace, XmlSchema&amp; schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.NameTableGet">
            <summary>设置 XmlSchemaSet.get_NameTable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ParseSchemaStringXmlReader">
            <summary>设置 XmlSchemaSet.ParseSchema(String targetNamespace, XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ReaderSettingsGet">
            <summary>设置 XmlSchemaSet.get_ReaderSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.RemoveRecursiveXmlSchema">
            <summary>设置 XmlSchemaSet.RemoveRecursive(XmlSchema schemaToRemove) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.RemoveXmlSchema">
            <summary>设置 XmlSchemaSet.Remove(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.RemoveXmlSchemaBoolean">
            <summary>设置 XmlSchemaSet.Remove(XmlSchema schema, Boolean forceCompile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ReprocessXmlSchema">
            <summary>设置 XmlSchemaSet.Reprocess(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.SchemaLocationsGet">
            <summary>设置 XmlSchemaSet.get_SchemaLocations() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.Schemas">
            <summary>设置 XmlSchemaSet.Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.SchemasString">
            <summary>设置 XmlSchemaSet.Schemas(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.SortedSchemasGet">
            <summary>设置 XmlSchemaSet.get_SortedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.SubstitutionGroupsGet">
            <summary>设置 XmlSchemaSet.get_SubstitutionGroups() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.TypeExtensionsGet">
            <summary>设置 XmlSchemaSet.get_TypeExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlSchemaSet.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlSchemaSet.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSet.XmlResolverSetXmlResolver">
            <summary>设置 XmlSchemaSet.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent">
            <summary>System.Xml.Schema.XmlSchemaSimpleContent 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.#ctor(System.Xml.Schema.XmlSchemaSimpleContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.AllInstances.ContentGet">
            <summary>设置 XmlSchemaSimpleContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.AllInstances.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaSimpleContent.set_Content(XmlSchemaContent value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.Constructor">
            <summary>设置 XmlSchemaSimpleContent.XmlSchemaSimpleContent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.ContentGet">
            <summary>设置 XmlSchemaSimpleContent.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContent.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaSimpleContent.set_Content(XmlSchemaContent value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension">
            <summary>System.Xml.Schema.XmlSchemaSimpleContentExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.#ctor(System.Xml.Schema.XmlSchemaSimpleContentExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaSimpleContentExtension.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleContentExtension.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AllInstances.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSimpleContentExtension.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AnyAttributeGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaSimpleContentExtension.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.AttributesGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleContentExtension.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleContentExtension.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.Constructor">
            <summary>设置 XmlSchemaSimpleContentExtension.XmlSchemaSimpleContentExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentExtension.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSimpleContentExtension.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction">
            <summary>System.Xml.Schema.XmlSchemaSimpleContentRestriction 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.#ctor(System.Xml.Schema.XmlSchemaSimpleContentRestriction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.AnyAttributeGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.AttributesGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.BaseTypeGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.BaseTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_BaseType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.FacetsGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_Facets() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AllInstances.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSimpleContentRestriction.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AnyAttributeGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_AnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AnyAttributeSetXmlSchemaAnyAttribute">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_AnyAttribute(XmlSchemaAnyAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.AttributesGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BaseTypeGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BaseTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleContentRestriction.set_BaseType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.Constructor">
            <summary>设置 XmlSchemaSimpleContentRestriction.XmlSchemaSimpleContentRestriction() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.FacetsGet">
            <summary>设置 XmlSchemaSimpleContentRestriction.get_Facets() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleContentRestriction.SetAttributesXmlSchemaObjectCollection">
            <summary>设置 XmlSchemaSimpleContentRestriction.SetAttributes(XmlSchemaObjectCollection newAttributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType">
            <summary>System.Xml.Schema.XmlSchemaSimpleType 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.#ctor(System.Xml.Schema.XmlSchemaSimpleType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.AllInstances.Clone">
            <summary>设置 XmlSchemaSimpleType.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.AllInstances.ContentGet">
            <summary>设置 XmlSchemaSimpleType.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.AllInstances.ContentSetXmlSchemaSimpleTypeContent">
            <summary>设置 XmlSchemaSimpleType.set_Content(XmlSchemaSimpleTypeContent value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.AllInstances.DerivedFromGet">
            <summary>设置 XmlSchemaSimpleType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.Clone">
            <summary>设置 XmlSchemaSimpleType.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.Constructor">
            <summary>设置 XmlSchemaSimpleType.XmlSchemaSimpleType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.ContentGet">
            <summary>设置 XmlSchemaSimpleType.get_Content() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.ContentSetXmlSchemaSimpleTypeContent">
            <summary>设置 XmlSchemaSimpleType.set_Content(XmlSchemaSimpleTypeContent value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleType.DerivedFromGet">
            <summary>设置 XmlSchemaSimpleType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeContent 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.#ctor(System.Xml.Schema.XmlSchemaSimpleTypeContent)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeContent.Constructor">
            <summary>设置 XmlSchemaSimpleTypeContent.XmlSchemaSimpleTypeContent() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeList 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.#ctor(System.Xml.Schema.XmlSchemaSimpleTypeList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.BaseItemTypeGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_BaseItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.BaseItemTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeList.set_BaseItemType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.Clone">
            <summary>设置 XmlSchemaSimpleTypeList.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.ItemTypeGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_ItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.ItemTypeNameGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_ItemTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.ItemTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleTypeList.set_ItemTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.AllInstances.ItemTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeList.set_ItemType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.BaseItemTypeGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_BaseItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.BaseItemTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeList.set_BaseItemType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.Clone">
            <summary>设置 XmlSchemaSimpleTypeList.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.Constructor">
            <summary>设置 XmlSchemaSimpleTypeList.XmlSchemaSimpleTypeList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.ItemTypeGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_ItemType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.ItemTypeNameGet">
            <summary>设置 XmlSchemaSimpleTypeList.get_ItemTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.ItemTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleTypeList.set_ItemTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeList.ItemTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeList.set_ItemType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeRestriction 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.#ctor(System.Xml.Schema.XmlSchemaSimpleTypeRestriction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.BaseTypeGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleTypeRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.BaseTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeRestriction.set_BaseType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.Clone">
            <summary>设置 XmlSchemaSimpleTypeRestriction.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.AllInstances.FacetsGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_Facets() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BaseTypeGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_BaseType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BaseTypeNameGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_BaseTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BaseTypeNameSetXmlQualifiedName">
            <summary>设置 XmlSchemaSimpleTypeRestriction.set_BaseTypeName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BaseTypeSetXmlSchemaSimpleType">
            <summary>设置 XmlSchemaSimpleTypeRestriction.set_BaseType(XmlSchemaSimpleType value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.Clone">
            <summary>设置 XmlSchemaSimpleTypeRestriction.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.Constructor">
            <summary>设置 XmlSchemaSimpleTypeRestriction.XmlSchemaSimpleTypeRestriction() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeRestriction.FacetsGet">
            <summary>设置 XmlSchemaSimpleTypeRestriction.get_Facets() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeUnion 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.#ctor(System.Xml.Schema.XmlSchemaSimpleTypeUnion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.BaseMemberTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_BaseMemberTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.BaseTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_BaseTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.Clone">
            <summary>设置 XmlSchemaSimpleTypeUnion.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.MemberTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_MemberTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.MemberTypesSetXmlQualifiedNameArray">
            <summary>设置 XmlSchemaSimpleTypeUnion.set_MemberTypes(XmlQualifiedName[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.AllInstances.SetBaseMemberTypesXmlSchemaSimpleTypeArray">
            <summary>设置 XmlSchemaSimpleTypeUnion.SetBaseMemberTypes(XmlSchemaSimpleType[] baseMemberTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.BaseMemberTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_BaseMemberTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.BaseTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_BaseTypes() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.Clone">
            <summary>设置 XmlSchemaSimpleTypeUnion.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.Constructor">
            <summary>设置 XmlSchemaSimpleTypeUnion.XmlSchemaSimpleTypeUnion() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.MemberTypesGet">
            <summary>设置 XmlSchemaSimpleTypeUnion.get_MemberTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.MemberTypesSetXmlQualifiedNameArray">
            <summary>设置 XmlSchemaSimpleTypeUnion.set_MemberTypes(XmlQualifiedName[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaSimpleTypeUnion.SetBaseMemberTypesXmlSchemaSimpleTypeArray">
            <summary>设置 XmlSchemaSimpleTypeUnion.SetBaseMemberTypes(XmlSchemaSimpleType[] baseMemberTypes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet">
            <summary>System.Xml.Schema.XmlSchemaTotalDigitsFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.#ctor(System.Xml.Schema.XmlSchemaTotalDigitsFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaTotalDigitsFacet.Constructor">
            <summary>设置 XmlSchemaTotalDigitsFacet.XmlSchemaTotalDigitsFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaType">
            <summary>System.Xml.Schema.XmlSchemaType 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaType.#ctor(System.Xml.Schema.XmlSchemaType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.BaseSchemaTypeGet">
            <summary>设置 XmlSchemaType.get_BaseSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.BaseXmlSchemaTypeGet">
            <summary>设置 XmlSchemaType.get_BaseXmlSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.DatatypeGet">
            <summary>设置 XmlSchemaType.get_Datatype() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.DerivedByGet">
            <summary>设置 XmlSchemaType.get_DerivedBy() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.DerivedFromGet">
            <summary>设置 XmlSchemaType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.FinalGet">
            <summary>设置 XmlSchemaType.get_Final() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.FinalResolvedGet">
            <summary>设置 XmlSchemaType.get_FinalResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.FinalSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.set_Final(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.IsMixedGet">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.IsMixedSetBoolean">
            <summary>设置 XmlSchemaType.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.NameAttributeGet">
            <summary>设置 XmlSchemaType.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.NameAttributeSetString">
            <summary>设置 XmlSchemaType.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.NameGet">
            <summary>设置 XmlSchemaType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.NameSetString">
            <summary>设置 XmlSchemaType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.QualifiedNameGet">
            <summary>设置 XmlSchemaType.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.RedefinedGet">
            <summary>设置 XmlSchemaType.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.RedefinedSetXmlSchemaType">
            <summary>设置 XmlSchemaType.set_Redefined(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SchemaContentTypeGet">
            <summary>设置 XmlSchemaType.get_SchemaContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetBaseSchemaTypeXmlSchemaType">
            <summary>设置 XmlSchemaType.SetBaseSchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetContentTypeXmlSchemaContentType">
            <summary>设置 XmlSchemaType.SetContentType(XmlSchemaContentType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetDatatypeXmlSchemaDatatype">
            <summary>设置 XmlSchemaType.SetDatatype(XmlSchemaDatatype value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetDerivedByXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.SetDerivedBy(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetFinalResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.SetFinalResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaType.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.TypeCodeGet">
            <summary>设置 XmlSchemaType.get_TypeCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.AllInstances.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaType.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.BaseSchemaTypeGet">
            <summary>设置 XmlSchemaType.get_BaseSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.BaseXmlSchemaTypeGet">
            <summary>设置 XmlSchemaType.get_BaseXmlSchemaType() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.Constructor">
            <summary>设置 XmlSchemaType.XmlSchemaType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.DatatypeGet">
            <summary>设置 XmlSchemaType.get_Datatype() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.DerivedByGet">
            <summary>设置 XmlSchemaType.get_DerivedBy() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.DerivedFromGet">
            <summary>设置 XmlSchemaType.get_DerivedFrom() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.FinalGet">
            <summary>设置 XmlSchemaType.get_Final() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.FinalResolvedGet">
            <summary>设置 XmlSchemaType.get_FinalResolved() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.FinalSetXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.set_Final(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.GetBuiltInComplexTypeXmlQualifiedName">
            <summary>设置 XmlSchemaType.GetBuiltInComplexType(XmlQualifiedName qualifiedName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.GetBuiltInComplexTypeXmlTypeCode">
            <summary>设置 XmlSchemaType.GetBuiltInComplexType(XmlTypeCode typeCode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.GetBuiltInSimpleTypeXmlQualifiedName">
            <summary>设置 XmlSchemaType.GetBuiltInSimpleType(XmlQualifiedName qualifiedName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.GetBuiltInSimpleTypeXmlTypeCode">
            <summary>设置 XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode typeCode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.IsDerivedFromDatatypeXmlSchemaDatatypeXmlSchemaDatatypeXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.IsDerivedFromDatatype(XmlSchemaDatatype derivedDataType, XmlSchemaDatatype baseDataType, XmlSchemaDerivationMethod except) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.IsDerivedFromXmlSchemaTypeXmlSchemaTypeXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.IsDerivedFrom(XmlSchemaType derivedType, XmlSchemaType baseType, XmlSchemaDerivationMethod except) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.IsMixedGet">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.IsMixedSetBoolean">
            <summary>设置 XmlSchemaType.set_IsMixed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.NameAttributeGet">
            <summary>设置 XmlSchemaType.get_NameAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.NameAttributeSetString">
            <summary>设置 XmlSchemaType.set_NameAttribute(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.NameGet">
            <summary>设置 XmlSchemaType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.NameSetString">
            <summary>设置 XmlSchemaType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.QualifiedNameGet">
            <summary>设置 XmlSchemaType.get_QualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.RedefinedGet">
            <summary>设置 XmlSchemaType.get_Redefined() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.RedefinedSetXmlSchemaType">
            <summary>设置 XmlSchemaType.set_Redefined(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SchemaContentTypeGet">
            <summary>设置 XmlSchemaType.get_SchemaContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetBaseSchemaTypeXmlSchemaType">
            <summary>设置 XmlSchemaType.SetBaseSchemaType(XmlSchemaType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetContentTypeXmlSchemaContentType">
            <summary>设置 XmlSchemaType.SetContentType(XmlSchemaContentType value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetDatatypeXmlSchemaDatatype">
            <summary>设置 XmlSchemaType.SetDatatype(XmlSchemaDatatype value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetDerivedByXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.SetDerivedBy(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetFinalResolvedXmlSchemaDerivationMethod">
            <summary>设置 XmlSchemaType.SetFinalResolved(XmlSchemaDerivationMethod value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.SetQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSchemaType.SetQualifiedName(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.TypeCodeGet">
            <summary>设置 XmlSchemaType.get_TypeCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaType.ValidateXmlReaderXmlResolverXmlSchemaSetValidationEventHandler">
            <summary>设置 XmlSchemaType.Validate(XmlReader reader, XmlResolver resolver, XmlSchemaSet schemaSet, ValidationEventHandler valEventHandler) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaUnique">
            <summary>System.Xml.Schema.XmlSchemaUnique 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.#ctor(System.Xml.Schema.XmlSchemaUnique)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaUnique.Constructor">
            <summary>设置 XmlSchemaUnique.XmlSchemaUnique() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException">
            <summary>System.Xml.Schema.XmlSchemaValidationException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.#ctor(System.Xml.Schema.XmlSchemaValidationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaValidationException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.AllInstances.SetSourceObjectObject">
            <summary>设置 XmlSchemaValidationException.SetSourceObject(Object sourceObject) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.AllInstances.SourceObjectGet">
            <summary>设置 XmlSchemaValidationException.get_SourceObject() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.Constructor">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorString">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringException">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringExceptionInt32Int32">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String message, Exception innerException, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringString">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String arg) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArray">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArrayExceptionStringInt32Int32">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args, Exception innerException, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArrayObject">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args, Object sourceNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArrayStringInt32Int32">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArrayStringInt32Int32XmlSchemaObjectObject">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args, String sourceUri, Int32 lineNumber, Int32 linePosition, XmlSchemaObject source, Object sourceNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringArrayStringObject">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String[] args, String sourceUri, Object sourceNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringInt32Int32">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.ConstructorStringStringStringInt32Int32">
            <summary>设置 XmlSchemaValidationException.XmlSchemaValidationException(String res, String arg, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaValidationException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.SetSourceObjectObject">
            <summary>设置 XmlSchemaValidationException.SetSourceObject(Object sourceObject) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidationException.SourceObjectGet">
            <summary>设置 XmlSchemaValidationException.get_SourceObject() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaValidator">
            <summary>System.Xml.Schema.XmlSchemaValidator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.#ctor(System.Xml.Schema.XmlSchemaValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AddSchemaXmlSchema">
            <summary>设置 XmlSchemaValidator.AddSchema(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.AddSchemaXmlSchema">
            <summary>设置 XmlSchemaValidator.AddSchema(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.CheckMixedValueConstraintString">
            <summary>设置 XmlSchemaValidator.CheckMixedValueConstraint(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.CurrentContentTypeGet">
            <summary>设置 XmlSchemaValidator.get_CurrentContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.CurrentProcessContentsGet">
            <summary>设置 XmlSchemaValidator.get_CurrentProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.EndValidation">
            <summary>设置 XmlSchemaValidator.EndValidation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetConcatenatedValue">
            <summary>设置 XmlSchemaValidator.GetConcatenatedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetDefaultAttributePrefixString">
            <summary>设置 XmlSchemaValidator.GetDefaultAttributePrefix(String attributeNS) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetExpectedAttributes">
            <summary>设置 XmlSchemaValidator.GetExpectedAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetExpectedParticles">
            <summary>设置 XmlSchemaValidator.GetExpectedParticles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetUnspecifiedDefaultAttributesArrayList">
            <summary>设置 XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList defaultAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.GetUnspecifiedDefaultAttributesArrayListBoolean">
            <summary>设置 XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList defaultAttributes, Boolean createNodeData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.Initialize">
            <summary>设置 XmlSchemaValidator.Initialize() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.InitializeXmlSchemaObject">
            <summary>设置 XmlSchemaValidator.Initialize(XmlSchemaObject partialValidationType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.LineInfoProviderGet">
            <summary>设置 XmlSchemaValidator.get_LineInfoProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.LineInfoProviderSetIXmlLineInfo">
            <summary>设置 XmlSchemaValidator.set_LineInfoProvider(IXmlLineInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ProcessIdentityConstraintsGet">
            <summary>设置 XmlSchemaValidator.get_ProcessIdentityConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ProcessInlineSchemaGet">
            <summary>设置 XmlSchemaValidator.get_ProcessInlineSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ProcessSchemaHintsGet">
            <summary>设置 XmlSchemaValidator.get_ProcessSchemaHints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ProcessSchemaLocationGet">
            <summary>设置 XmlSchemaValidator.get_ProcessSchemaLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.RecompileSchemaSet">
            <summary>设置 XmlSchemaValidator.RecompileSchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ReportValidationWarningsGet">
            <summary>设置 XmlSchemaValidator.get_ReportValidationWarnings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.SchemaSetGet">
            <summary>设置 XmlSchemaValidator.get_SchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.SkipToEndElementXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.SourceUriGet">
            <summary>设置 XmlSchemaValidator.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.SourceUriSetUri">
            <summary>设置 XmlSchemaValidator.set_SourceUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateAttributeStringStringStringXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateAttribute(String localName, String namespaceUri, String attributeValue, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateAttributeStringStringXmlValueGetterXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateAttribute(String localName, String namespaceUri, XmlValueGetter attributeValue, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateElementStringStringXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateElement(String localName, String namespaceUri, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateElementStringStringXmlSchemaInfoStringStringStringString">
            <summary>设置 XmlSchemaValidator.ValidateElement(String localName, String namespaceUri, XmlSchemaInfo schemaInfo, String xsiType, String xsiNil, String xsiSchemaLocation, String xsiNoNamespaceSchemaLocation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateEndElementXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateEndElementXmlSchemaInfoObject">
            <summary>设置 XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo schemaInfo, Object typedValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateEndOfAttributesXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateTextString">
            <summary>设置 XmlSchemaValidator.ValidateText(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateTextXmlValueGetter">
            <summary>设置 XmlSchemaValidator.ValidateText(XmlValueGetter elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateWhitespaceString">
            <summary>设置 XmlSchemaValidator.ValidateWhitespace(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidateWhitespaceXmlValueGetter">
            <summary>设置 XmlSchemaValidator.ValidateWhitespace(XmlValueGetter elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlSchemaValidator.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlSchemaValidator.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidationEventSenderGet">
            <summary>设置 XmlSchemaValidator.get_ValidationEventSender() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidationEventSenderSetObject">
            <summary>设置 XmlSchemaValidator.set_ValidationEventSender(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.ValidationFlagsGet">
            <summary>设置 XmlSchemaValidator.get_ValidationFlags() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.AllInstances.XmlResolverSetXmlResolver">
            <summary>设置 XmlSchemaValidator.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.BuildElementNameStringString">
            <summary>设置 XmlSchemaValidator.BuildElementName(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.BuildElementNameXmlQualifiedName">
            <summary>设置 XmlSchemaValidator.BuildElementName(XmlQualifiedName qname) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.CheckMixedValueConstraintString">
            <summary>设置 XmlSchemaValidator.CheckMixedValueConstraint(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ConstructorXmlNameTableXmlSchemaSetIXmlNamespaceResolverXmlSchemaValidationFlags">
            <summary>设置 XmlSchemaValidator.XmlSchemaValidator(XmlNameTable nameTable, XmlSchemaSet schemas, IXmlNamespaceResolver namespaceResolver, XmlSchemaValidationFlags validationFlags) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.CurrentContentTypeGet">
            <summary>设置 XmlSchemaValidator.get_CurrentContentType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.CurrentProcessContentsGet">
            <summary>设置 XmlSchemaValidator.get_CurrentProcessContents() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.EndValidation">
            <summary>设置 XmlSchemaValidator.EndValidation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetConcatenatedValue">
            <summary>设置 XmlSchemaValidator.GetConcatenatedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetDefaultAttributePrefixString">
            <summary>设置 XmlSchemaValidator.GetDefaultAttributePrefix(String attributeNS) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetExpectedAttributes">
            <summary>设置 XmlSchemaValidator.GetExpectedAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetExpectedParticles">
            <summary>设置 XmlSchemaValidator.GetExpectedParticles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetUnspecifiedDefaultAttributesArrayList">
            <summary>设置 XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList defaultAttributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.GetUnspecifiedDefaultAttributesArrayListBoolean">
            <summary>设置 XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList defaultAttributes, Boolean createNodeData) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.Initialize">
            <summary>设置 XmlSchemaValidator.Initialize() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.InitializeXmlSchemaObject">
            <summary>设置 XmlSchemaValidator.Initialize(XmlSchemaObject partialValidationType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.LineInfoProviderGet">
            <summary>设置 XmlSchemaValidator.get_LineInfoProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.LineInfoProviderSetIXmlLineInfo">
            <summary>设置 XmlSchemaValidator.set_LineInfoProvider(IXmlLineInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.PrintExpectedElementsArrayListBoolean">
            <summary>设置 XmlSchemaValidator.PrintExpectedElements(ArrayList expected, Boolean getParticles) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ProcessIdentityConstraintsGet">
            <summary>设置 XmlSchemaValidator.get_ProcessIdentityConstraints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ProcessInlineSchemaGet">
            <summary>设置 XmlSchemaValidator.get_ProcessInlineSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ProcessSchemaHintsGet">
            <summary>设置 XmlSchemaValidator.get_ProcessSchemaHints() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ProcessSchemaLocationGet">
            <summary>设置 XmlSchemaValidator.get_ProcessSchemaLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.QNameStringStringString">
            <summary>设置 XmlSchemaValidator.QNameString(String localName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.RecompileSchemaSet">
            <summary>设置 XmlSchemaValidator.RecompileSchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ReportValidationWarningsGet">
            <summary>设置 XmlSchemaValidator.get_ReportValidationWarnings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.SchemaSetGet">
            <summary>设置 XmlSchemaValidator.get_SchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.SendValidationEventValidationEventHandlerObjectXmlSchemaValidationExceptionXmlSeverityType">
            <summary>设置 XmlSchemaValidator.SendValidationEvent(ValidationEventHandler eventHandler, Object sender, XmlSchemaValidationException e, XmlSeverityType severity) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.SkipToEndElementXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.SourceUriGet">
            <summary>设置 XmlSchemaValidator.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.SourceUriSetUri">
            <summary>设置 XmlSchemaValidator.set_SourceUri(Uri value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.StaticConstructor">
            <summary>设置 XmlSchemaValidator.XmlSchemaValidator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateAttributeStringStringStringXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateAttribute(String localName, String namespaceUri, String attributeValue, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateAttributeStringStringXmlValueGetterXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateAttribute(String localName, String namespaceUri, XmlValueGetter attributeValue, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateElementStringStringXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateElement(String localName, String namespaceUri, XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateElementStringStringXmlSchemaInfoStringStringStringString">
            <summary>设置 XmlSchemaValidator.ValidateElement(String localName, String namespaceUri, XmlSchemaInfo schemaInfo, String xsiType, String xsiNil, String xsiSchemaLocation, String xsiNoNamespaceSchemaLocation) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateEndElementXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateEndElementXmlSchemaInfoObject">
            <summary>设置 XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo schemaInfo, Object typedValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateEndOfAttributesXmlSchemaInfo">
            <summary>设置 XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo schemaInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateTextString">
            <summary>设置 XmlSchemaValidator.ValidateText(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateTextXmlValueGetter">
            <summary>设置 XmlSchemaValidator.ValidateText(XmlValueGetter elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateWhitespaceString">
            <summary>设置 XmlSchemaValidator.ValidateWhitespace(String elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidateWhitespaceXmlValueGetter">
            <summary>设置 XmlSchemaValidator.ValidateWhitespace(XmlValueGetter elementValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidationEventHandlerAddValidationEventHandler">
            <summary>设置 XmlSchemaValidator.add_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidationEventHandlerRemoveValidationEventHandler">
            <summary>设置 XmlSchemaValidator.remove_ValidationEventHandler(ValidationEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidationEventSenderGet">
            <summary>设置 XmlSchemaValidator.get_ValidationEventSender() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidationEventSenderSetObject">
            <summary>设置 XmlSchemaValidator.set_ValidationEventSender(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.ValidationFlagsGet">
            <summary>设置 XmlSchemaValidator.get_ValidationFlags() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaValidator.XmlResolverSetXmlResolver">
            <summary>设置 XmlSchemaValidator.set_XmlResolver(XmlResolver value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet">
            <summary>System.Xml.Schema.XmlSchemaWhiteSpaceFacet 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.#ctor(System.Xml.Schema.XmlSchemaWhiteSpaceFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaWhiteSpaceFacet.Constructor">
            <summary>设置 XmlSchemaWhiteSpaceFacet.XmlSchemaWhiteSpaceFacet() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaXPath">
            <summary>System.Xml.Schema.XmlSchemaXPath 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.#ctor(System.Xml.Schema.XmlSchemaXPath)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.AllInstances.XPathGet">
            <summary>设置 XmlSchemaXPath.get_XPath() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.AllInstances.XPathSetString">
            <summary>设置 XmlSchemaXPath.set_XPath(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.Constructor">
            <summary>设置 XmlSchemaXPath.XmlSchemaXPath() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.XPathGet">
            <summary>设置 XmlSchemaXPath.get_XPath() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.ShimXmlSchemaXPath.XPathSetString">
            <summary>设置 XmlSchemaXPath.set_XPath(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubIXmlSchemaInfo">
            <summary>System.Xml.Schema.IXmlSchemaInfo 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.#ctor">
            <summary>初始化 type StubIXmlSchemaInfo 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#IsDefault">
            <summary>设置 IXmlSchemaInfo.get_IsDefault() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.IsDefaultGet">
            <summary>设置 IXmlSchemaInfo.get_IsDefault() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#IsNil">
            <summary>设置 IXmlSchemaInfo.get_IsNil() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.IsNilGet">
            <summary>设置 IXmlSchemaInfo.get_IsNil() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#MemberType">
            <summary>设置 IXmlSchemaInfo.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.MemberTypeGet">
            <summary>设置 IXmlSchemaInfo.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#SchemaAttribute">
            <summary>设置 IXmlSchemaInfo.get_SchemaAttribute() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.SchemaAttributeGet">
            <summary>设置 IXmlSchemaInfo.get_SchemaAttribute() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#SchemaElement">
            <summary>设置 IXmlSchemaInfo.get_SchemaElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.SchemaElementGet">
            <summary>设置 IXmlSchemaInfo.get_SchemaElement() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#SchemaType">
            <summary>设置 IXmlSchemaInfo.get_SchemaType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.SchemaTypeGet">
            <summary>设置 IXmlSchemaInfo.get_SchemaType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.System#Xml#Schema#IXmlSchemaInfo#Validity">
            <summary>设置 IXmlSchemaInfo.get_Validity() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubIXmlSchemaInfo.ValidityGet">
            <summary>设置 IXmlSchemaInfo.get_Validity() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchema">
            <summary>System.Xml.Schema.XmlSchema 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchema.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchema.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchema.InitializeStub">
            <summary>初始化 type StubXmlSchema 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchema.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchema.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated">
            <summary>System.Xml.Schema.XmlSchemaAnnotated 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated.InitializeStub">
            <summary>初始化 type StubXmlSchemaAnnotated 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotated.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation">
            <summary>System.Xml.Schema.XmlSchemaAnnotation 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation.InitializeStub">
            <summary>初始化 type StubXmlSchemaAnnotation 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnnotation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAny">
            <summary>System.Xml.Schema.XmlSchemaAny 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAny.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAny.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAny.InitializeStub">
            <summary>初始化 type StubXmlSchemaAny 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAny.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAny.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute">
            <summary>System.Xml.Schema.XmlSchemaAnyAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute.InitializeStub">
            <summary>初始化 type StubXmlSchemaAnyAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAnyAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo">
            <summary>System.Xml.Schema.XmlSchemaAppInfo 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo.InitializeStub">
            <summary>初始化 type StubXmlSchemaAppInfo 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAppInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAttribute">
            <summary>System.Xml.Schema.XmlSchemaAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttribute.InitializeStub">
            <summary>初始化 type StubXmlSchemaAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup">
            <summary>System.Xml.Schema.XmlSchemaAttributeGroup 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup.InitializeStub">
            <summary>初始化 type StubXmlSchemaAttributeGroup 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef">
            <summary>System.Xml.Schema.XmlSchemaAttributeGroupRef 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef.InitializeStub">
            <summary>初始化 type StubXmlSchemaAttributeGroupRef 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaAttributeGroupRef.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent">
            <summary>System.Xml.Schema.XmlSchemaComplexContent 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.AttachBackingFieldToContent">
            <summary>附加委托以将 StubXmlSchemaComplexContent.Content 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.Content">
            <summary>设置 XmlSchemaComplexContent.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.ContentGet">
            <summary>设置 XmlSchemaComplexContent.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaComplexContent.set_Content(XmlSchemaContent value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.InitializeStub">
            <summary>初始化 type StubXmlSchemaComplexContent 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension">
            <summary>System.Xml.Schema.XmlSchemaComplexContentExtension 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension.InitializeStub">
            <summary>初始化 type StubXmlSchemaComplexContentExtension 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction">
            <summary>System.Xml.Schema.XmlSchemaComplexContentRestriction 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction.InitializeStub">
            <summary>初始化 type StubXmlSchemaComplexContentRestriction 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexContentRestriction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaComplexType">
            <summary>System.Xml.Schema.XmlSchemaComplexType 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.AttachBackingFieldToIsMixed">
            <summary>附加委托以将 StubXmlSchemaComplexType.IsMixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.InitializeStub">
            <summary>初始化 type StubXmlSchemaComplexType 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.IsMixed">
            <summary>设置 XmlSchemaComplexType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.IsMixedGet">
            <summary>设置 XmlSchemaComplexType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaComplexType.IsMixedSetBoolean">
            <summary>设置 XmlSchemaComplexType.set_IsMixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaContent">
            <summary>System.Xml.Schema.XmlSchemaContent 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaContent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaContent.InitializeStub">
            <summary>初始化 type StubXmlSchemaContent 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaContentModel">
            <summary>System.Xml.Schema.XmlSchemaContentModel 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.AttachBackingFieldToContent">
            <summary>附加委托以将 StubXmlSchemaContentModel.Content 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.Content">
            <summary>设置 XmlSchemaContentModel.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.ContentGet">
            <summary>设置 XmlSchemaContentModel.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaContentModel.set_Content(XmlSchemaContent value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.InitializeStub">
            <summary>初始化 type StubXmlSchemaContentModel 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaContentModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation">
            <summary>System.Xml.Schema.XmlSchemaDocumentation 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation.InitializeStub">
            <summary>初始化 type StubXmlSchemaDocumentation 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaDocumentation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaElement">
            <summary>System.Xml.Schema.XmlSchemaElement 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaElement.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaElement.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaElement.InitializeStub">
            <summary>初始化 type StubXmlSchemaElement 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaElement.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaElement.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet">
            <summary>System.Xml.Schema.XmlSchemaEnumerationFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaEnumerationFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaEnumerationFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaEnumerationFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaException">
            <summary>System.Xml.Schema.XmlSchemaException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXmlSchemaException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXmlSchemaException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XmlSchemaException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.InitializeStub">
            <summary>初始化 type StubXmlSchemaException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.Message">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.MessageGet">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaExternal">
            <summary>System.Xml.Schema.XmlSchemaExternal 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaExternal.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaExternal.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaExternal.InitializeStub">
            <summary>初始化 type StubXmlSchemaExternal 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaExternal.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaExternal.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaFacet">
            <summary>System.Xml.Schema.XmlSchemaFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet">
            <summary>System.Xml.Schema.XmlSchemaFractionDigitsFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaFractionDigitsFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaFractionDigitsFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaFractionDigitsFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaGroup">
            <summary>System.Xml.Schema.XmlSchemaGroup 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaGroup.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroup.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaGroup.InitializeStub">
            <summary>初始化 type StubXmlSchemaGroup 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroup.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroup.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef">
            <summary>System.Xml.Schema.XmlSchemaGroupRef 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef.InitializeStub">
            <summary>初始化 type StubXmlSchemaGroupRef 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaGroupRef.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint">
            <summary>System.Xml.Schema.XmlSchemaIdentityConstraint 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint.InitializeStub">
            <summary>初始化 type StubXmlSchemaIdentityConstraint 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaIdentityConstraint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaImport">
            <summary>System.Xml.Schema.XmlSchemaImport 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaImport.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaImport.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaImport.InitializeStub">
            <summary>初始化 type StubXmlSchemaImport 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaImport.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaImport.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaInclude">
            <summary>System.Xml.Schema.XmlSchemaInclude 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInclude.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInclude.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInclude.InitializeStub">
            <summary>初始化 type StubXmlSchemaInclude 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInclude.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInclude.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException">
            <summary>System.Xml.Schema.XmlSchemaInferenceException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXmlSchemaInferenceException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXmlSchemaInferenceException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XmlSchemaInferenceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaInferenceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.InitializeStub">
            <summary>初始化 type StubXmlSchemaInferenceException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.Message">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.MessageGet">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaInferenceException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaInfo">
            <summary>System.Xml.Schema.XmlSchemaInfo 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaInfo.InitializeStub">
            <summary>初始化 type StubXmlSchemaInfo 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaKey">
            <summary>System.Xml.Schema.XmlSchemaKey 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaKey.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKey.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaKey.InitializeStub">
            <summary>初始化 type StubXmlSchemaKey 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKey.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKey.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaKeyref">
            <summary>System.Xml.Schema.XmlSchemaKeyref 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaKeyref.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKeyref.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaKeyref.InitializeStub">
            <summary>初始化 type StubXmlSchemaKeyref 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKeyref.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaKeyref.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaLengthFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaLengthFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaLengthFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaLengthFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxExclusiveFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMaxExclusiveFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMaxExclusiveFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxExclusiveFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxInclusiveFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMaxInclusiveFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMaxInclusiveFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxInclusiveFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaMaxLengthFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMaxLengthFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMaxLengthFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMaxLengthFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMinExclusiveFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMinExclusiveFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMinExclusiveFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinExclusiveFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet">
            <summary>System.Xml.Schema.XmlSchemaMinInclusiveFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMinInclusiveFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMinInclusiveFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinInclusiveFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet">
            <summary>System.Xml.Schema.XmlSchemaMinLengthFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaMinLengthFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaMinLengthFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaMinLengthFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaNotation">
            <summary>System.Xml.Schema.XmlSchemaNotation 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaNotation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNotation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaNotation.InitializeStub">
            <summary>初始化 type StubXmlSchemaNotation 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNotation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNotation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet">
            <summary>System.Xml.Schema.XmlSchemaNumericFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaNumericFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaNumericFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaNumericFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaObject">
            <summary>System.Xml.Schema.XmlSchemaObject 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObject.InitializeStub">
            <summary>初始化 type StubXmlSchemaObject 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection">
            <summary>System.Xml.Schema.XmlSchemaObjectCollection 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.InitializeStub">
            <summary>初始化 type StubXmlSchemaObjectCollection 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.Item(System.Int32)">
            <summary>设置 XmlSchemaObjectCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.ItemGetInt32">
            <summary>设置 XmlSchemaObjectCollection.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.ItemSetInt32XmlSchemaObject">
            <summary>设置 XmlSchemaObjectCollection.set_Item(Int32 index, XmlSchemaObject value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnClear">
            <summary>设置 XmlSchemaObjectCollection.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnClear01">
            <summary>设置 XmlSchemaObjectCollection.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
            <summary>设置 XmlSchemaObjectCollection.OnInsert(Int32 index, Object item) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnInsertInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnInsert(Int32 index, Object item) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
            <summary>设置 XmlSchemaObjectCollection.OnRemove(Int32 index, Object item) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnRemoveInt32Object">
            <summary>设置 XmlSchemaObjectCollection.OnRemove(Int32 index, Object item) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 XmlSchemaObjectCollection.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemaObjectCollection.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaObjectCollection.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaParticle">
            <summary>System.Xml.Schema.XmlSchemaParticle 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaParticle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaParticle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaParticle.InitializeStub">
            <summary>初始化 type StubXmlSchemaParticle 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaParticle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaParticle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet">
            <summary>System.Xml.Schema.XmlSchemaPatternFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaPatternFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaPatternFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaPatternFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaRedefine">
            <summary>System.Xml.Schema.XmlSchemaRedefine 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaRedefine.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaRedefine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaRedefine.InitializeStub">
            <summary>初始化 type StubXmlSchemaRedefine 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaRedefine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaRedefine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSet">
            <summary>System.Xml.Schema.XmlSchemaSet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSet.InitializeStub">
            <summary>初始化 type StubXmlSchemaSet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent">
            <summary>System.Xml.Schema.XmlSchemaSimpleContent 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.AttachBackingFieldToContent">
            <summary>附加委托以将 StubXmlSchemaSimpleContent.Content 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.Content">
            <summary>设置 XmlSchemaSimpleContent.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.ContentGet">
            <summary>设置 XmlSchemaSimpleContent.get_Content() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.ContentSetXmlSchemaContent">
            <summary>设置 XmlSchemaSimpleContent.set_Content(XmlSchemaContent value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleContent 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension">
            <summary>System.Xml.Schema.XmlSchemaSimpleContentExtension 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleContentExtension 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction">
            <summary>System.Xml.Schema.XmlSchemaSimpleContentRestriction 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleContentRestriction 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleContentRestriction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType">
            <summary>System.Xml.Schema.XmlSchemaSimpleType 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.AttachBackingFieldToIsMixed">
            <summary>附加委托以将 StubXmlSchemaSimpleType.IsMixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleType 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.IsMixed">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.IsMixedGet">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaSimpleType.IsMixedSetBoolean">
            <summary>设置 XmlSchemaType.set_IsMixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeContent 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleTypeContent 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeContent.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeList 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleTypeList 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeRestriction 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleTypeRestriction 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeRestriction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion">
            <summary>System.Xml.Schema.XmlSchemaSimpleTypeUnion 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion.InitializeStub">
            <summary>初始化 type StubXmlSchemaSimpleTypeUnion 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaSimpleTypeUnion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet">
            <summary>System.Xml.Schema.XmlSchemaTotalDigitsFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaTotalDigitsFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaTotalDigitsFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaTotalDigitsFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaType">
            <summary>System.Xml.Schema.XmlSchemaType 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaType.AttachBackingFieldToIsMixed">
            <summary>附加委托以将 StubXmlSchemaType.IsMixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaType.InitializeStub">
            <summary>初始化 type StubXmlSchemaType 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaType.IsMixed">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaType.IsMixedGet">
            <summary>设置 XmlSchemaType.get_IsMixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaType.IsMixedSetBoolean">
            <summary>设置 XmlSchemaType.set_IsMixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaUnique">
            <summary>System.Xml.Schema.XmlSchemaUnique 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaUnique.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaUnique.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaUnique.InitializeStub">
            <summary>初始化 type StubXmlSchemaUnique 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaUnique.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaUnique.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaValidationException">
            <summary>System.Xml.Schema.XmlSchemaValidationException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXmlSchemaValidationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXmlSchemaValidationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XmlSchemaValidationException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XmlSchemaValidationException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.InitializeStub">
            <summary>初始化 type StubXmlSchemaValidationException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.Message">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.MessageGet">
            <summary>设置 XmlSchemaException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaValidationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet">
            <summary>System.Xml.Schema.XmlSchemaWhiteSpaceFacet 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.AttachBackingFieldToIsFixed">
            <summary>附加委托以将 StubXmlSchemaWhiteSpaceFacet.IsFixed 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.InitializeStub">
            <summary>初始化 type StubXmlSchemaWhiteSpaceFacet 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.IsFixed">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.IsFixedGet">
            <summary>设置 XmlSchemaFacet.get_IsFixed() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Schema.Fakes.StubXmlSchemaWhiteSpaceFacet.IsFixedSetBoolean">
            <summary>设置 XmlSchemaFacet.set_IsFixed(Boolean value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Schema.Fakes.StubXmlSchemaXPath">
            <summary>System.Xml.Schema.XmlSchemaXPath 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaXPath.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaXPath.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Schema.Fakes.StubXmlSchemaXPath.InitializeStub">
            <summary>初始化 type StubXmlSchemaXPath 的新实例</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaXPath.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Schema.Fakes.StubXmlSchemaXPath.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension">
            <summary>System.Xml.Serialization.Advanced.SchemaImporterExtension 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.#ctor(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.AllInstances.ImportAnyElementXmlSchemaAnyBooleanXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportAnyElement(XmlSchemaAny any, Boolean mixed, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.AllInstances.ImportDefaultValueStringString">
            <summary>设置 SchemaImporterExtension.ImportDefaultValue(String value, String type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.AllInstances.ImportSchemaTypeStringStringXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(String name, String ns, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.AllInstances.ImportSchemaTypeXmlSchemaTypeXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.Constructor">
            <summary>设置 SchemaImporterExtension.SchemaImporterExtension() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.ImportAnyElementXmlSchemaAnyBooleanXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportAnyElement(XmlSchemaAny any, Boolean mixed, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.ImportDefaultValueStringString">
            <summary>设置 SchemaImporterExtension.ImportDefaultValue(String value, String type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.ImportSchemaTypeStringStringXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(String name, String ns, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtension.ImportSchemaTypeXmlSchemaTypeXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection">
            <summary>System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.#ctor(System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AddSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Add(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AddStringSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Add(String name, SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AddStringType">
            <summary>设置 SchemaImporterExtensionCollection.Add(String name, Type type) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.AddSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Add(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.AddStringSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Add(String name, SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.AddStringType">
            <summary>设置 SchemaImporterExtensionCollection.Add(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.Clear">
            <summary>设置 SchemaImporterExtensionCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.Clone">
            <summary>设置 SchemaImporterExtensionCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.ContainsSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Contains(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.CopyToSchemaImporterExtensionArrayInt32">
            <summary>设置 SchemaImporterExtensionCollection.CopyTo(SchemaImporterExtension[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.IndexOfSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.IndexOf(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.InsertInt32SchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Insert(Int32 index, SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.ItemGetInt32">
            <summary>设置 SchemaImporterExtensionCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.ItemSetInt32SchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.set_Item(Int32 index, SchemaImporterExtension value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.NamesGet">
            <summary>设置 SchemaImporterExtensionCollection.get_Names() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.RemoveSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Remove(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.AllInstances.RemoveString">
            <summary>设置 SchemaImporterExtensionCollection.Remove(String name) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Clear">
            <summary>设置 SchemaImporterExtensionCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Clone">
            <summary>设置 SchemaImporterExtensionCollection.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.Constructor">
            <summary>设置 SchemaImporterExtensionCollection.SchemaImporterExtensionCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.ContainsSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Contains(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.CopyToSchemaImporterExtensionArrayInt32">
            <summary>设置 SchemaImporterExtensionCollection.CopyTo(SchemaImporterExtension[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.IndexOfSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.IndexOf(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.InsertInt32SchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Insert(Int32 index, SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.ItemGetInt32">
            <summary>设置 SchemaImporterExtensionCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.ItemSetInt32SchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.set_Item(Int32 index, SchemaImporterExtension value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.NamesGet">
            <summary>设置 SchemaImporterExtensionCollection.get_Names() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.RemoveSchemaImporterExtension">
            <summary>设置 SchemaImporterExtensionCollection.Remove(SchemaImporterExtension extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.ShimSchemaImporterExtensionCollection.RemoveString">
            <summary>设置 SchemaImporterExtensionCollection.Remove(String name) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension">
            <summary>System.Xml.Serialization.Advanced.SchemaImporterExtension 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
            <summary>设置 SchemaImporterExtension.ImportAnyElement(XmlSchemaAny any, Boolean mixed, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportAnyElementXmlSchemaAnyBooleanXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportAnyElement(XmlSchemaAny any, Boolean mixed, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportDefaultValue(System.String,System.String)">
            <summary>设置 SchemaImporterExtension.ImportDefaultValue(String value, String type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportDefaultValueStringString">
            <summary>设置 SchemaImporterExtension.ImportDefaultValue(String value, String type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(String name, String ns, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportSchemaTypeStringStringXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(String name, String ns, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.ImportSchemaTypeXmlSchemaTypeXmlSchemaObjectXmlSchemasXmlSchemaImporterCodeCompileUnitCodeNamespaceCodeGenerationOptionsCodeDomProvider">
            <summary>设置 SchemaImporterExtension.ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.InitializeStub">
            <summary>初始化 type StubSchemaImporterExtension 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtension.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection">
            <summary>System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.InitializeStub">
            <summary>初始化 type StubSchemaImporterExtensionCollection 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Advanced.Fakes.StubSchemaImporterExtensionCollection.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection">
            <summary>System.Xml.Serialization.Configuration.DateTimeSerializationSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.#ctor(System.Xml.Serialization.Configuration.DateTimeSerializationSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.AllInstances.ModeGet">
            <summary>设置 DateTimeSerializationSection.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.AllInstances.ModeSetDateTimeSerializationSectionDateTimeSerializationMode">
            <summary>设置 DateTimeSerializationSection.set_Mode(DateTimeSerializationMode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.AllInstances.PropertiesGet">
            <summary>设置 DateTimeSerializationSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.Constructor">
            <summary>设置 DateTimeSerializationSection.DateTimeSerializationSection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.ModeGet">
            <summary>设置 DateTimeSerializationSection.get_Mode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.ModeSetDateTimeSerializationSectionDateTimeSerializationMode">
            <summary>设置 DateTimeSerializationSection.set_Mode(DateTimeSerializationMode value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimDateTimeSerializationSection.PropertiesGet">
            <summary>设置 DateTimeSerializationSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator">
            <summary>System.Xml.Serialization.Configuration.RootedPathValidator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.#ctor(System.Xml.Serialization.Configuration.RootedPathValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.AllInstances.CanValidateType">
            <summary>设置 RootedPathValidator.CanValidate(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.AllInstances.ValidateObject">
            <summary>设置 RootedPathValidator.Validate(Object value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.CanValidateType">
            <summary>设置 RootedPathValidator.CanValidate(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.Constructor">
            <summary>设置 RootedPathValidator.RootedPathValidator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimRootedPathValidator.ValidateObject">
            <summary>设置 RootedPathValidator.Validate(Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement">
            <summary>System.Xml.Serialization.Configuration.SchemaImporterExtensionElement 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.#ctor(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.KeyGet">
            <summary>设置 SchemaImporterExtensionElement.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.NameGet">
            <summary>设置 SchemaImporterExtensionElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.NameSetString">
            <summary>设置 SchemaImporterExtensionElement.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.PropertiesGet">
            <summary>设置 SchemaImporterExtensionElement.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.TypeGet">
            <summary>设置 SchemaImporterExtensionElement.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.AllInstances.TypeSetType">
            <summary>设置 SchemaImporterExtensionElement.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.Constructor">
            <summary>设置 SchemaImporterExtensionElement.SchemaImporterExtensionElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.ConstructorStringString">
            <summary>设置 SchemaImporterExtensionElement.SchemaImporterExtensionElement(String name, String type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.ConstructorStringType">
            <summary>设置 SchemaImporterExtensionElement.SchemaImporterExtensionElement(String name, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.KeyGet">
            <summary>设置 SchemaImporterExtensionElement.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.NameGet">
            <summary>设置 SchemaImporterExtensionElement.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.NameSetString">
            <summary>设置 SchemaImporterExtensionElement.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.PropertiesGet">
            <summary>设置 SchemaImporterExtensionElement.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.TypeGet">
            <summary>设置 SchemaImporterExtensionElement.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElement.TypeSetType">
            <summary>设置 SchemaImporterExtensionElement.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection">
            <summary>System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.#ctor(System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AddSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.Add(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.AddSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.Add(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.Clear">
            <summary>设置 SchemaImporterExtensionElementCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.CreateNewElement">
            <summary>设置 SchemaImporterExtensionElementCollection.CreateNewElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>设置 SchemaImporterExtensionElementCollection.GetElementKey(ConfigurationElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.IndexOfSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.IndexOf(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.ItemGetInt32">
            <summary>设置 SchemaImporterExtensionElementCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.ItemGetString">
            <summary>设置 SchemaImporterExtensionElementCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.ItemSetInt32SchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.set_Item(Int32 index, SchemaImporterExtensionElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.ItemSetStringSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.set_Item(String name, SchemaImporterExtensionElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.RemoveAtInt32">
            <summary>设置 SchemaImporterExtensionElementCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.RemoveSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.Remove(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.AllInstances.RemoveString">
            <summary>设置 SchemaImporterExtensionElementCollection.Remove(String name) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.Clear">
            <summary>设置 SchemaImporterExtensionElementCollection.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.Constructor">
            <summary>设置 SchemaImporterExtensionElementCollection.SchemaImporterExtensionElementCollection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.CreateNewElement">
            <summary>设置 SchemaImporterExtensionElementCollection.CreateNewElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.GetElementKeyConfigurationElement">
            <summary>设置 SchemaImporterExtensionElementCollection.GetElementKey(ConfigurationElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.IndexOfSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.IndexOf(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.ItemGetInt32">
            <summary>设置 SchemaImporterExtensionElementCollection.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.ItemGetString">
            <summary>设置 SchemaImporterExtensionElementCollection.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.ItemSetInt32SchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.set_Item(Int32 index, SchemaImporterExtensionElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.ItemSetStringSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.set_Item(String name, SchemaImporterExtensionElement value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.RemoveAtInt32">
            <summary>设置 SchemaImporterExtensionElementCollection.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.RemoveSchemaImporterExtensionElement">
            <summary>设置 SchemaImporterExtensionElementCollection.Remove(SchemaImporterExtensionElement element) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionElementCollection.RemoveString">
            <summary>设置 SchemaImporterExtensionElementCollection.Remove(String name) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection">
            <summary>System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.#ctor(System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.AllInstances.InitializeDefault">
            <summary>设置 SchemaImporterExtensionsSection.InitializeDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.AllInstances.PropertiesGet">
            <summary>设置 SchemaImporterExtensionsSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.AllInstances.SchemaImporterExtensionsGet">
            <summary>设置 SchemaImporterExtensionsSection.get_SchemaImporterExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.AllInstances.SchemaImporterExtensionsInternalGet">
            <summary>设置 SchemaImporterExtensionsSection.get_SchemaImporterExtensionsInternal() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.Constructor">
            <summary>设置 SchemaImporterExtensionsSection.SchemaImporterExtensionsSection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.InitializeDefault">
            <summary>设置 SchemaImporterExtensionsSection.InitializeDefault() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.PropertiesGet">
            <summary>设置 SchemaImporterExtensionsSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.SchemaImporterExtensionsGet">
            <summary>设置 SchemaImporterExtensionsSection.get_SchemaImporterExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSchemaImporterExtensionsSection.SchemaImporterExtensionsInternalGet">
            <summary>设置 SchemaImporterExtensionsSection.get_SchemaImporterExtensionsInternal() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup">
            <summary>System.Xml.Serialization.Configuration.SerializationSectionGroup 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.#ctor(System.Xml.Serialization.Configuration.SerializationSectionGroup)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.AllInstances.DateTimeSerializationGet">
            <summary>设置 SerializationSectionGroup.get_DateTimeSerialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.AllInstances.SchemaImporterExtensionsGet">
            <summary>设置 SerializationSectionGroup.get_SchemaImporterExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.AllInstances.XmlSerializerGet">
            <summary>设置 SerializationSectionGroup.get_XmlSerializer() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.Constructor">
            <summary>设置 SerializationSectionGroup.SerializationSectionGroup() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.DateTimeSerializationGet">
            <summary>设置 SerializationSectionGroup.get_DateTimeSerialization() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.SchemaImporterExtensionsGet">
            <summary>设置 SerializationSectionGroup.get_SchemaImporterExtensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimSerializationSectionGroup.XmlSerializerGet">
            <summary>设置 SerializationSectionGroup.get_XmlSerializer() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection">
            <summary>System.Xml.Serialization.Configuration.XmlSerializerSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.#ctor(System.Xml.Serialization.Configuration.XmlSerializerSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.CheckDeserializeAdvancesGet">
            <summary>设置 XmlSerializerSection.get_CheckDeserializeAdvances() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.CheckDeserializeAdvancesSetBoolean">
            <summary>设置 XmlSerializerSection.set_CheckDeserializeAdvances(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.PropertiesGet">
            <summary>设置 XmlSerializerSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.TempFilesLocationGet">
            <summary>设置 XmlSerializerSection.get_TempFilesLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.TempFilesLocationSetString">
            <summary>设置 XmlSerializerSection.set_TempFilesLocation(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.UseLegacySerializerGenerationGet">
            <summary>设置 XmlSerializerSection.get_UseLegacySerializerGeneration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.AllInstances.UseLegacySerializerGenerationSetBoolean">
            <summary>设置 XmlSerializerSection.set_UseLegacySerializerGeneration(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.CheckDeserializeAdvancesGet">
            <summary>设置 XmlSerializerSection.get_CheckDeserializeAdvances() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.CheckDeserializeAdvancesSetBoolean">
            <summary>设置 XmlSerializerSection.set_CheckDeserializeAdvances(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.Constructor">
            <summary>设置 XmlSerializerSection.XmlSerializerSection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.PropertiesGet">
            <summary>设置 XmlSerializerSection.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.TempFilesLocationGet">
            <summary>设置 XmlSerializerSection.get_TempFilesLocation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.TempFilesLocationSetString">
            <summary>设置 XmlSerializerSection.set_TempFilesLocation(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.UseLegacySerializerGenerationGet">
            <summary>设置 XmlSerializerSection.get_UseLegacySerializerGeneration() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.ShimXmlSerializerSection.UseLegacySerializerGenerationSetBoolean">
            <summary>设置 XmlSerializerSection.set_UseLegacySerializerGeneration(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator">
            <summary>System.Xml.Serialization.Configuration.RootedPathValidator 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.CanValidate(System.Type)">
            <summary>设置 RootedPathValidator.CanValidate(Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.CanValidateType">
            <summary>设置 RootedPathValidator.CanValidate(Type type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.InitializeStub">
            <summary>初始化 type StubRootedPathValidator 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.Validate(System.Object)">
            <summary>设置 RootedPathValidator.Validate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Configuration.Fakes.StubRootedPathValidator.ValidateObject">
            <summary>设置 RootedPathValidator.Validate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeExporter">
            <summary>System.Xml.Serialization.CodeExporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeExporter.#ctor(System.Xml.Serialization.CodeExporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AddPropertyChangedNotifierCodeTypeDeclaration">
            <summary>设置 CodeExporter.AddPropertyChangedNotifier(CodeTypeDeclaration codeClass) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AddTypeMetadataCodeAttributeDeclarationCollectionTypeStringStringStringBoolean">
            <summary>设置 CodeExporter.AddTypeMetadata(CodeAttributeDeclarationCollection metadata, Type type, String defaultName, String name, String ns, Boolean includeInSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AddWarningCommentCodeCommentStatementCollectionString">
            <summary>设置 CodeExporter.AddWarningComment(CodeCommentStatementCollection comments, String text) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.AddPropertyChangedNotifierCodeTypeDeclaration">
            <summary>设置 CodeExporter.AddPropertyChangedNotifier(CodeTypeDeclaration codeClass) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.AddTypeMetadataCodeAttributeDeclarationCollectionTypeStringStringStringBoolean">
            <summary>设置 CodeExporter.AddTypeMetadata(CodeAttributeDeclarationCollection metadata, Type type, String defaultName, String name, String ns, Boolean includeInSchema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.CodeCompileUnitGet">
            <summary>设置 CodeExporter.get_CodeCompileUnit() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.CodeNamespaceGet">
            <summary>设置 CodeExporter.get_CodeNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.CodeProviderGet">
            <summary>设置 CodeExporter.get_CodeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.CreatePropertyDeclarationCodeMemberFieldStringString">
            <summary>设置 CodeExporter.CreatePropertyDeclaration(CodeMemberField field, String name, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.ExportedClassesGet">
            <summary>设置 CodeExporter.get_ExportedClasses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.ExportedMappingsGet">
            <summary>设置 CodeExporter.get_ExportedMappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.GeneratePropertiesGet">
            <summary>设置 CodeExporter.get_GenerateProperties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.GeneratedCodeAttributeGet">
            <summary>设置 CodeExporter.get_GeneratedCodeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.AllInstances.IncludeMetadataGet">
            <summary>设置 CodeExporter.get_IncludeMetadata() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeExporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeExporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.CodeCompileUnitGet">
            <summary>设置 CodeExporter.get_CodeCompileUnit() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.CodeNamespaceGet">
            <summary>设置 CodeExporter.get_CodeNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.CodeProviderGet">
            <summary>设置 CodeExporter.get_CodeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeDomProviderCodeGenerationOptionsHashtable">
            <summary>设置 CodeExporter.CodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeDomProvider codeProvider, CodeGenerationOptions options, Hashtable exportedMappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.CreatePropertyDeclarationCodeMemberFieldStringString">
            <summary>设置 CodeExporter.CreatePropertyDeclaration(CodeMemberField field, String name, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.ExportedClassesGet">
            <summary>设置 CodeExporter.get_ExportedClasses() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.ExportedMappingsGet">
            <summary>设置 CodeExporter.get_ExportedMappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.FindAttributeDeclarationTypeCodeAttributeDeclarationCollection">
            <summary>设置 CodeExporter.FindAttributeDeclaration(Type type, CodeAttributeDeclarationCollection metadata) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.GeneratePropertiesGet">
            <summary>设置 CodeExporter.get_GenerateProperties() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.GeneratedCodeAttributeGet">
            <summary>设置 CodeExporter.get_GeneratedCodeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.IncludeMetadataGet">
            <summary>设置 CodeExporter.get_IncludeMetadata() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.MakeFieldNameString">
            <summary>设置 CodeExporter.MakeFieldName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.PromoteTypeTypeObject">
            <summary>设置 CodeExporter.PromoteType(Type type, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.PropertyChangedEventGet">
            <summary>设置 CodeExporter.get_PropertyChangedEvent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeExporter.RaisePropertyChangedEventMethodGet">
            <summary>设置 CodeExporter.get_RaisePropertyChangedEventMethod() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeIdentifier">
            <summary>System.Xml.Serialization.CodeIdentifier 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifier.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifier.#ctor(System.Xml.Serialization.CodeIdentifier)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeIdentifier.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifier.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifier.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.CheckValidIdentifierString">
            <summary>设置 CodeIdentifier.CheckValidIdentifier(String ident) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.Constructor">
            <summary>设置 CodeIdentifier.CodeIdentifier() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.GetCSharpNameString">
            <summary>设置 CodeIdentifier.GetCSharpName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.GetCSharpNameType">
            <summary>设置 CodeIdentifier.GetCSharpName(Type t) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.MakeCamelString">
            <summary>设置 CodeIdentifier.MakeCamel(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.MakePascalString">
            <summary>设置 CodeIdentifier.MakePascal(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.MakeValidInternalString">
            <summary>设置 CodeIdentifier.MakeValidInternal(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.MakeValidString">
            <summary>设置 CodeIdentifier.MakeValid(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifier.StaticConstructor">
            <summary>设置 CodeIdentifier.CodeIdentifier() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeIdentifiers">
            <summary>System.Xml.Serialization.CodeIdentifiers 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.#ctor(System.Xml.Serialization.CodeIdentifiers)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AddReservedString">
            <summary>设置 CodeIdentifiers.AddReserved(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AddStringObject">
            <summary>设置 CodeIdentifiers.Add(String identifier, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AddUniqueStringObject">
            <summary>设置 CodeIdentifiers.AddUnique(String identifier, Object value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.AddReservedString">
            <summary>设置 CodeIdentifiers.AddReserved(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.AddStringObject">
            <summary>设置 CodeIdentifiers.Add(String identifier, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.AddUniqueStringObject">
            <summary>设置 CodeIdentifiers.AddUnique(String identifier, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.Clear">
            <summary>设置 CodeIdentifiers.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.Clone">
            <summary>设置 CodeIdentifiers.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.IsInUseString">
            <summary>设置 CodeIdentifiers.IsInUse(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.MakeRightCaseString">
            <summary>设置 CodeIdentifiers.MakeRightCase(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.MakeUniqueString">
            <summary>设置 CodeIdentifiers.MakeUnique(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.RemoveReservedString">
            <summary>设置 CodeIdentifiers.RemoveReserved(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.RemoveString">
            <summary>设置 CodeIdentifiers.Remove(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.ToArrayType">
            <summary>设置 CodeIdentifiers.ToArray(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.UseCamelCasingGet">
            <summary>设置 CodeIdentifiers.get_UseCamelCasing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.AllInstances.UseCamelCasingSetBoolean">
            <summary>设置 CodeIdentifiers.set_UseCamelCasing(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.Clear">
            <summary>设置 CodeIdentifiers.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.Clone">
            <summary>设置 CodeIdentifiers.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.Constructor">
            <summary>设置 CodeIdentifiers.CodeIdentifiers() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.ConstructorBoolean">
            <summary>设置 CodeIdentifiers.CodeIdentifiers(Boolean caseSensitive) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.IsInUseString">
            <summary>设置 CodeIdentifiers.IsInUse(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.MakeRightCaseString">
            <summary>设置 CodeIdentifiers.MakeRightCase(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.MakeUniqueString">
            <summary>设置 CodeIdentifiers.MakeUnique(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.RemoveReservedString">
            <summary>设置 CodeIdentifiers.RemoveReserved(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.RemoveString">
            <summary>设置 CodeIdentifiers.Remove(String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.ToArrayType">
            <summary>设置 CodeIdentifiers.ToArray(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.UseCamelCasingGet">
            <summary>设置 CodeIdentifiers.get_UseCamelCasing() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimCodeIdentifiers.UseCamelCasingSetBoolean">
            <summary>设置 CodeIdentifiers.set_UseCamelCasing(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimImportContext">
            <summary>System.Xml.Serialization.ImportContext 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimImportContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimImportContext.#ctor(System.Xml.Serialization.ImportContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances.ElementsGet">
            <summary>设置 ImportContext.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances.MappingsGet">
            <summary>设置 ImportContext.get_Mappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances.ShareTypesGet">
            <summary>设置 ImportContext.get_ShareTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances.TypeIdentifiersGet">
            <summary>设置 ImportContext.get_TypeIdentifiers() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.AllInstances.WarningsGet">
            <summary>设置 ImportContext.get_Warnings() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimImportContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimImportContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.Constructor">
            <summary>设置 ImportContext.ImportContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.ConstructorCodeIdentifiersBoolean">
            <summary>设置 ImportContext.ImportContext(CodeIdentifiers identifiers, Boolean shareTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.ElementsGet">
            <summary>设置 ImportContext.get_Elements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.MappingsGet">
            <summary>设置 ImportContext.get_Mappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.ShareTypesGet">
            <summary>设置 ImportContext.get_ShareTypes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.TypeIdentifiersGet">
            <summary>设置 ImportContext.get_TypeIdentifiers() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimImportContext.WarningsGet">
            <summary>设置 ImportContext.get_Warnings() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSchemaImporter">
            <summary>System.Xml.Serialization.SchemaImporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSchemaImporter.#ctor(System.Xml.Serialization.SchemaImporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AddReservedIdentifiersForDataBindingCodeIdentifiers">
            <summary>设置 SchemaImporter.AddReservedIdentifiersForDataBinding(CodeIdentifiers scope) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.AddReservedIdentifiersForDataBindingCodeIdentifiers">
            <summary>设置 SchemaImporter.AddReservedIdentifiersForDataBinding(CodeIdentifiers scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.CodeProviderGet">
            <summary>设置 SchemaImporter.get_CodeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.ContextGet">
            <summary>设置 SchemaImporter.get_Context() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.ExtensionsGet">
            <summary>设置 SchemaImporter.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.GenerateUniqueTypeNameString">
            <summary>设置 SchemaImporter.GenerateUniqueTypeName(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.ImportedElementsGet">
            <summary>设置 SchemaImporter.get_ImportedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.ImportedMappingsGet">
            <summary>设置 SchemaImporter.get_ImportedMappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.OptionsGet">
            <summary>设置 SchemaImporter.get_Options() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.SchemasGet">
            <summary>设置 SchemaImporter.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.AllInstances.TypeIdentifiersGet">
            <summary>设置 SchemaImporter.get_TypeIdentifiers() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSchemaImporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSchemaImporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.CodeProviderGet">
            <summary>设置 SchemaImporter.get_CodeProvider() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.ConstructorXmlSchemasCodeGenerationOptionsCodeDomProviderImportContext">
            <summary>设置 SchemaImporter.SchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, CodeDomProvider codeProvider, ImportContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.ContextGet">
            <summary>设置 SchemaImporter.get_Context() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.ExtensionsGet">
            <summary>设置 SchemaImporter.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.GenerateUniqueTypeNameString">
            <summary>设置 SchemaImporter.GenerateUniqueTypeName(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.ImportedElementsGet">
            <summary>设置 SchemaImporter.get_ImportedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.ImportedMappingsGet">
            <summary>设置 SchemaImporter.get_ImportedMappings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.OptionsGet">
            <summary>设置 SchemaImporter.get_Options() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.SchemasGet">
            <summary>设置 SchemaImporter.get_Schemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSchemaImporter.TypeIdentifiersGet">
            <summary>设置 SchemaImporter.get_TypeIdentifiers() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute">
            <summary>System.Xml.Serialization.SoapAttributeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.#ctor(System.Xml.Serialization.SoapAttributeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.AttributeNameGet">
            <summary>设置 SoapAttributeAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.AttributeNameSetString">
            <summary>设置 SoapAttributeAttribute.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.DataTypeGet">
            <summary>设置 SoapAttributeAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.DataTypeSetString">
            <summary>设置 SoapAttributeAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.NamespaceGet">
            <summary>设置 SoapAttributeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AllInstances.NamespaceSetString">
            <summary>设置 SoapAttributeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AttributeNameGet">
            <summary>设置 SoapAttributeAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.AttributeNameSetString">
            <summary>设置 SoapAttributeAttribute.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.Constructor">
            <summary>设置 SoapAttributeAttribute.SoapAttributeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.ConstructorString">
            <summary>设置 SoapAttributeAttribute.SoapAttributeAttribute(String attributeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.DataTypeGet">
            <summary>设置 SoapAttributeAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.DataTypeSetString">
            <summary>设置 SoapAttributeAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.NamespaceGet">
            <summary>设置 SoapAttributeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeAttribute.NamespaceSetString">
            <summary>设置 SoapAttributeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides">
            <summary>System.Xml.Serialization.SoapAttributeOverrides 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AddTypeSoapAttributes">
            <summary>设置 SoapAttributeOverrides.Add(Type type, SoapAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AddTypeStringSoapAttributes">
            <summary>设置 SoapAttributeOverrides.Add(Type type, String member, SoapAttributes attributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AllInstances.AddTypeSoapAttributes">
            <summary>设置 SoapAttributeOverrides.Add(Type type, SoapAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AllInstances.AddTypeStringSoapAttributes">
            <summary>设置 SoapAttributeOverrides.Add(Type type, String member, SoapAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AllInstances.ItemGetType">
            <summary>设置 SoapAttributeOverrides.get_Item(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.AllInstances.ItemGetTypeString">
            <summary>设置 SoapAttributeOverrides.get_Item(Type type, String member) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.Constructor">
            <summary>设置 SoapAttributeOverrides.SoapAttributeOverrides() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.ItemGetType">
            <summary>设置 SoapAttributeOverrides.get_Item(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributeOverrides.ItemGetTypeString">
            <summary>设置 SoapAttributeOverrides.get_Item(Type type, String member) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributes">
            <summary>System.Xml.Serialization.SoapAttributes 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributes.#ctor(System.Xml.Serialization.SoapAttributes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapAttributeGet">
            <summary>设置 SoapAttributes.get_SoapAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapAttributeSetSoapAttributeAttribute">
            <summary>设置 SoapAttributes.set_SoapAttribute(SoapAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapDefaultValueGet">
            <summary>设置 SoapAttributes.get_SoapDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapDefaultValueSetObject">
            <summary>设置 SoapAttributes.set_SoapDefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapElementGet">
            <summary>设置 SoapAttributes.get_SoapElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapElementSetSoapElementAttribute">
            <summary>设置 SoapAttributes.set_SoapElement(SoapElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapEnumGet">
            <summary>设置 SoapAttributes.get_SoapEnum() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapEnumSetSoapEnumAttribute">
            <summary>设置 SoapAttributes.set_SoapEnum(SoapEnumAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapIgnoreGet">
            <summary>设置 SoapAttributes.get_SoapIgnore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapIgnoreSetBoolean">
            <summary>设置 SoapAttributes.set_SoapIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapTypeGet">
            <summary>设置 SoapAttributes.get_SoapType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.AllInstances.SoapTypeSetSoapTypeAttribute">
            <summary>设置 SoapAttributes.set_SoapType(SoapTypeAttribute value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapAttributes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.Constructor">
            <summary>设置 SoapAttributes.SoapAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.ConstructorICustomAttributeProvider">
            <summary>设置 SoapAttributes.SoapAttributes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapAttributeGet">
            <summary>设置 SoapAttributes.get_SoapAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapAttributeSetSoapAttributeAttribute">
            <summary>设置 SoapAttributes.set_SoapAttribute(SoapAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapDefaultValueGet">
            <summary>设置 SoapAttributes.get_SoapDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapDefaultValueSetObject">
            <summary>设置 SoapAttributes.set_SoapDefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapElementGet">
            <summary>设置 SoapAttributes.get_SoapElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapElementSetSoapElementAttribute">
            <summary>设置 SoapAttributes.set_SoapElement(SoapElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapEnumGet">
            <summary>设置 SoapAttributes.get_SoapEnum() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapEnumSetSoapEnumAttribute">
            <summary>设置 SoapAttributes.set_SoapEnum(SoapEnumAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapIgnoreGet">
            <summary>设置 SoapAttributes.get_SoapIgnore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapIgnoreSetBoolean">
            <summary>设置 SoapAttributes.set_SoapIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapTypeGet">
            <summary>设置 SoapAttributes.get_SoapType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapAttributes.SoapTypeSetSoapTypeAttribute">
            <summary>设置 SoapAttributes.set_SoapType(SoapTypeAttribute value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapCodeExporter">
            <summary>System.Xml.Serialization.SoapCodeExporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.#ctor(System.Xml.Serialization.SoapCodeExporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMapping">
            <summary>设置 SoapCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingBoolean">
            <summary>设置 SoapCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, Boolean forceUseMemberName) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AllInstances.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMapping">
            <summary>设置 SoapCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AllInstances.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingBoolean">
            <summary>设置 SoapCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, Boolean forceUseMemberName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AllInstances.ExportMembersMappingXmlMembersMapping">
            <summary>设置 SoapCodeExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.AllInstances.ExportTypeMappingXmlTypeMapping">
            <summary>设置 SoapCodeExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ConstructorCodeNamespace">
            <summary>设置 SoapCodeExporter.SoapCodeExporter(CodeNamespace codeNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ConstructorCodeNamespaceCodeCompileUnit">
            <summary>设置 SoapCodeExporter.SoapCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeDomProviderCodeGenerationOptionsHashtable">
            <summary>设置 SoapCodeExporter.SoapCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeDomProvider codeProvider, CodeGenerationOptions options, Hashtable mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeGenerationOptions">
            <summary>设置 SoapCodeExporter.SoapCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeGenerationOptions options) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeGenerationOptionsHashtable">
            <summary>设置 SoapCodeExporter.SoapCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeGenerationOptions options, Hashtable mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ExportMembersMappingXmlMembersMapping">
            <summary>设置 SoapCodeExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapCodeExporter.ExportTypeMappingXmlTypeMapping">
            <summary>设置 SoapCodeExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapElementAttribute">
            <summary>System.Xml.Serialization.SoapElementAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.#ctor(System.Xml.Serialization.SoapElementAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.DataTypeGet">
            <summary>设置 SoapElementAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.DataTypeSetString">
            <summary>设置 SoapElementAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.ElementNameGet">
            <summary>设置 SoapElementAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.ElementNameSetString">
            <summary>设置 SoapElementAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.IsNullableGet">
            <summary>设置 SoapElementAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.AllInstances.IsNullableSetBoolean">
            <summary>设置 SoapElementAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.Constructor">
            <summary>设置 SoapElementAttribute.SoapElementAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.ConstructorString">
            <summary>设置 SoapElementAttribute.SoapElementAttribute(String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.DataTypeGet">
            <summary>设置 SoapElementAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.DataTypeSetString">
            <summary>设置 SoapElementAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.ElementNameGet">
            <summary>设置 SoapElementAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.ElementNameSetString">
            <summary>设置 SoapElementAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.IsNullableGet">
            <summary>设置 SoapElementAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapElementAttribute.IsNullableSetBoolean">
            <summary>设置 SoapElementAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute">
            <summary>System.Xml.Serialization.SoapEnumAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.#ctor(System.Xml.Serialization.SoapEnumAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.AllInstances.NameGet">
            <summary>设置 SoapEnumAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.AllInstances.NameSetString">
            <summary>设置 SoapEnumAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.Constructor">
            <summary>设置 SoapEnumAttribute.SoapEnumAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.ConstructorString">
            <summary>设置 SoapEnumAttribute.SoapEnumAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.NameGet">
            <summary>设置 SoapEnumAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapEnumAttribute.NameSetString">
            <summary>设置 SoapEnumAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute">
            <summary>System.Xml.Serialization.SoapIgnoreAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.#ctor(System.Xml.Serialization.SoapIgnoreAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIgnoreAttribute.Constructor">
            <summary>设置 SoapIgnoreAttribute.SoapIgnoreAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute">
            <summary>System.Xml.Serialization.SoapIncludeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.#ctor(System.Xml.Serialization.SoapIncludeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.AllInstances.TypeGet">
            <summary>设置 SoapIncludeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.AllInstances.TypeSetType">
            <summary>设置 SoapIncludeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.ConstructorType">
            <summary>设置 SoapIncludeAttribute.SoapIncludeAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.TypeGet">
            <summary>设置 SoapIncludeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapIncludeAttribute.TypeSetType">
            <summary>设置 SoapIncludeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter">
            <summary>System.Xml.Serialization.SoapReflectionImporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.#ctor(System.Xml.Serialization.SoapReflectionImporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArray">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBoolean">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBoolean">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors, Boolean validate) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBooleanXmlMappingAccess">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors, Boolean validate, XmlMappingAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportTypeMappingType">
            <summary>设置 SoapReflectionImporter.ImportTypeMapping(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.ImportTypeMappingTypeString">
            <summary>设置 SoapReflectionImporter.ImportTypeMapping(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.IncludeTypeType">
            <summary>设置 SoapReflectionImporter.IncludeType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.IncludeTypesICustomAttributeProvider">
            <summary>设置 SoapReflectionImporter.IncludeTypes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.XsdTypeNameType">
            <summary>设置 SoapReflectionImporter.XsdTypeName(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.AllInstances.XsdTypeNameTypeSoapAttributesString">
            <summary>设置 SoapReflectionImporter.XsdTypeName(Type type, SoapAttributes a, String name) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.Constructor">
            <summary>设置 SoapReflectionImporter.SoapReflectionImporter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ConstructorSoapAttributeOverrides">
            <summary>设置 SoapReflectionImporter.SoapReflectionImporter(SoapAttributeOverrides attributeOverrides) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ConstructorSoapAttributeOverridesString">
            <summary>设置 SoapReflectionImporter.SoapReflectionImporter(SoapAttributeOverrides attributeOverrides, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ConstructorString">
            <summary>设置 SoapReflectionImporter.SoapReflectionImporter(String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArray">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBoolean">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBoolean">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors, Boolean validate) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBooleanXmlMappingAccess">
            <summary>设置 SoapReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean writeAccessors, Boolean validate, XmlMappingAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportTypeMappingType">
            <summary>设置 SoapReflectionImporter.ImportTypeMapping(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.ImportTypeMappingTypeString">
            <summary>设置 SoapReflectionImporter.ImportTypeMapping(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.IncludeTypeType">
            <summary>设置 SoapReflectionImporter.IncludeType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.IncludeTypesICustomAttributeProvider">
            <summary>设置 SoapReflectionImporter.IncludeTypes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.XsdTypeNameType">
            <summary>设置 SoapReflectionImporter.XsdTypeName(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapReflectionImporter.XsdTypeNameTypeSoapAttributesString">
            <summary>设置 SoapReflectionImporter.XsdTypeName(Type type, SoapAttributes a, String name) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter">
            <summary>System.Xml.Serialization.SoapSchemaExporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.#ctor(System.Xml.Serialization.SoapSchemaExporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.AllInstances.DocumentGet">
            <summary>设置 SoapSchemaExporter.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.AllInstances.ExportMembersMappingXmlMembersMapping">
            <summary>设置 SoapSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.AllInstances.ExportMembersMappingXmlMembersMappingBoolean">
            <summary>设置 SoapSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping, Boolean exportEnclosingType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.AllInstances.ExportTypeMappingXmlTypeMapping">
            <summary>设置 SoapSchemaExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.ConstructorXmlSchemas">
            <summary>设置 SoapSchemaExporter.SoapSchemaExporter(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.DocumentGet">
            <summary>设置 SoapSchemaExporter.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.ExportMembersMappingXmlMembersMapping">
            <summary>设置 SoapSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.ExportMembersMappingXmlMembersMappingBoolean">
            <summary>设置 SoapSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping, Boolean exportEnclosingType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.ExportTypeMappingXmlTypeMapping">
            <summary>设置 SoapSchemaExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaExporter.StaticConstructor">
            <summary>设置 SoapSchemaExporter.SoapSchemaExporter() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter">
            <summary>System.Xml.Serialization.SoapSchemaImporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.#ctor(System.Xml.Serialization.SoapSchemaImporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportDerivedTypeMappingXmlQualifiedNameTypeBoolean">
            <summary>设置 SoapSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportDerivedTypesXmlQualifiedName">
            <summary>设置 SoapSchemaImporter.ImportDerivedTypes(XmlQualifiedName baseName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportMembersMappingStringStringSoapSchemaMember">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember member) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportMembersMappingStringStringSoapSchemaMemberArray">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportMembersMappingStringStringSoapSchemaMemberArrayBoolean">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members, Boolean hasWrapperElement) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.AllInstances.ImportMembersMappingStringStringSoapSchemaMemberArrayBooleanTypeBoolean">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members, Boolean hasWrapperElement, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ConstructorXmlSchemas">
            <summary>设置 SoapSchemaImporter.SoapSchemaImporter(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ConstructorXmlSchemasCodeGenerationOptionsCodeDomProviderImportContext">
            <summary>设置 SoapSchemaImporter.SoapSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, CodeDomProvider codeProvider, ImportContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ConstructorXmlSchemasCodeGenerationOptionsImportContext">
            <summary>设置 SoapSchemaImporter.SoapSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, ImportContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ConstructorXmlSchemasCodeIdentifiers">
            <summary>设置 SoapSchemaImporter.SoapSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ConstructorXmlSchemasCodeIdentifiersCodeGenerationOptions">
            <summary>设置 SoapSchemaImporter.SoapSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers, CodeGenerationOptions options) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportDerivedTypeMappingXmlQualifiedNameTypeBoolean">
            <summary>设置 SoapSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportDerivedTypesXmlQualifiedName">
            <summary>设置 SoapSchemaImporter.ImportDerivedTypes(XmlQualifiedName baseName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportMembersMappingStringStringSoapSchemaMember">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember member) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportMembersMappingStringStringSoapSchemaMemberArray">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportMembersMappingStringStringSoapSchemaMemberArrayBoolean">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members, Boolean hasWrapperElement) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaImporter.ImportMembersMappingStringStringSoapSchemaMemberArrayBooleanTypeBoolean">
            <summary>设置 SoapSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members, Boolean hasWrapperElement, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaMember">
            <summary>System.Xml.Serialization.SoapSchemaMember 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.#ctor(System.Xml.Serialization.SoapSchemaMember)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.AllInstances.MemberNameGet">
            <summary>设置 SoapSchemaMember.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.AllInstances.MemberNameSetString">
            <summary>设置 SoapSchemaMember.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.AllInstances.MemberTypeGet">
            <summary>设置 SoapSchemaMember.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.AllInstances.MemberTypeSetXmlQualifiedName">
            <summary>设置 SoapSchemaMember.set_MemberType(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.Constructor">
            <summary>设置 SoapSchemaMember.SoapSchemaMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.MemberNameGet">
            <summary>设置 SoapSchemaMember.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.MemberNameSetString">
            <summary>设置 SoapSchemaMember.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.MemberTypeGet">
            <summary>设置 SoapSchemaMember.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapSchemaMember.MemberTypeSetXmlQualifiedName">
            <summary>设置 SoapSchemaMember.set_MemberType(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute">
            <summary>System.Xml.Serialization.SoapTypeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.#ctor(System.Xml.Serialization.SoapTypeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.IncludeInSchemaGet">
            <summary>设置 SoapTypeAttribute.get_IncludeInSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.IncludeInSchemaSetBoolean">
            <summary>设置 SoapTypeAttribute.set_IncludeInSchema(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.NamespaceGet">
            <summary>设置 SoapTypeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.NamespaceSetString">
            <summary>设置 SoapTypeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.TypeNameGet">
            <summary>设置 SoapTypeAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.AllInstances.TypeNameSetString">
            <summary>设置 SoapTypeAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.Constructor">
            <summary>设置 SoapTypeAttribute.SoapTypeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.ConstructorString">
            <summary>设置 SoapTypeAttribute.SoapTypeAttribute(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.ConstructorStringString">
            <summary>设置 SoapTypeAttribute.SoapTypeAttribute(String typeName, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.IncludeInSchemaGet">
            <summary>设置 SoapTypeAttribute.get_IncludeInSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.IncludeInSchemaSetBoolean">
            <summary>设置 SoapTypeAttribute.set_IncludeInSchema(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.NamespaceGet">
            <summary>设置 SoapTypeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.NamespaceSetString">
            <summary>设置 SoapTypeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.TypeNameGet">
            <summary>设置 SoapTypeAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimSoapTypeAttribute.TypeNameSetString">
            <summary>设置 SoapTypeAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs">
            <summary>System.Xml.Serialization.UnreferencedObjectEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.#ctor(System.Xml.Serialization.UnreferencedObjectEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.AllInstances.UnreferencedIdGet">
            <summary>设置 UnreferencedObjectEventArgs.get_UnreferencedId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.AllInstances.UnreferencedObjectGet">
            <summary>设置 UnreferencedObjectEventArgs.get_UnreferencedObject() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.ConstructorObjectString">
            <summary>设置 UnreferencedObjectEventArgs.UnreferencedObjectEventArgs(Object o, String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.UnreferencedIdGet">
            <summary>设置 UnreferencedObjectEventArgs.get_UnreferencedId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimUnreferencedObjectEventArgs.UnreferencedObjectGet">
            <summary>设置 UnreferencedObjectEventArgs.get_UnreferencedObject() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute">
            <summary>System.Xml.Serialization.XmlAnyAttributeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.#ctor(System.Xml.Serialization.XmlAnyAttributeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyAttributeAttribute.Constructor">
            <summary>设置 XmlAnyAttributeAttribute.XmlAnyAttributeAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute">
            <summary>System.Xml.Serialization.XmlAnyElementAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.#ctor(System.Xml.Serialization.XmlAnyElementAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.NameGet">
            <summary>设置 XmlAnyElementAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.NameSetString">
            <summary>设置 XmlAnyElementAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlAnyElementAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlAnyElementAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.NamespaceSpecifiedGet">
            <summary>设置 XmlAnyElementAttribute.get_NamespaceSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.OrderGet">
            <summary>设置 XmlAnyElementAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.AllInstances.OrderSetInt32">
            <summary>设置 XmlAnyElementAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.Constructor">
            <summary>设置 XmlAnyElementAttribute.XmlAnyElementAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.ConstructorString">
            <summary>设置 XmlAnyElementAttribute.XmlAnyElementAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.ConstructorStringString">
            <summary>设置 XmlAnyElementAttribute.XmlAnyElementAttribute(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.NameGet">
            <summary>设置 XmlAnyElementAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.NameSetString">
            <summary>设置 XmlAnyElementAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.NamespaceGet">
            <summary>设置 XmlAnyElementAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.NamespaceSetString">
            <summary>设置 XmlAnyElementAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.NamespaceSpecifiedGet">
            <summary>设置 XmlAnyElementAttribute.get_NamespaceSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.OrderGet">
            <summary>设置 XmlAnyElementAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttribute.OrderSetInt32">
            <summary>设置 XmlAnyElementAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes">
            <summary>System.Xml.Serialization.XmlAnyElementAttributes 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.#ctor(System.Xml.Serialization.XmlAnyElementAttributes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AddXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Add(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.AddXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Add(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.ContainsXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Contains(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.CopyToXmlAnyElementAttributeArrayInt32">
            <summary>设置 XmlAnyElementAttributes.CopyTo(XmlAnyElementAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.IndexOfXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.IndexOf(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.InsertInt32XmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Insert(Int32 index, XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.ItemGetInt32">
            <summary>设置 XmlAnyElementAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.ItemSetInt32XmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.set_Item(Int32 index, XmlAnyElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.AllInstances.RemoveXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Remove(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.Constructor">
            <summary>设置 XmlAnyElementAttributes.XmlAnyElementAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.ContainsXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Contains(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.CopyToXmlAnyElementAttributeArrayInt32">
            <summary>设置 XmlAnyElementAttributes.CopyTo(XmlAnyElementAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.IndexOfXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.IndexOf(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.InsertInt32XmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Insert(Int32 index, XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.ItemGetInt32">
            <summary>设置 XmlAnyElementAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.ItemSetInt32XmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.set_Item(Int32 index, XmlAnyElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAnyElementAttributes.RemoveXmlAnyElementAttribute">
            <summary>设置 XmlAnyElementAttributes.Remove(XmlAnyElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute">
            <summary>System.Xml.Serialization.XmlArrayAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.#ctor(System.Xml.Serialization.XmlArrayAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.ElementNameGet">
            <summary>设置 XmlArrayAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.ElementNameSetString">
            <summary>设置 XmlArrayAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.FormGet">
            <summary>设置 XmlArrayAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlArrayAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.IsNullableGet">
            <summary>设置 XmlArrayAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.IsNullableSetBoolean">
            <summary>设置 XmlArrayAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlArrayAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlArrayAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.OrderGet">
            <summary>设置 XmlArrayAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.AllInstances.OrderSetInt32">
            <summary>设置 XmlArrayAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.Constructor">
            <summary>设置 XmlArrayAttribute.XmlArrayAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.ConstructorString">
            <summary>设置 XmlArrayAttribute.XmlArrayAttribute(String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.ElementNameGet">
            <summary>设置 XmlArrayAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.ElementNameSetString">
            <summary>设置 XmlArrayAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.FormGet">
            <summary>设置 XmlArrayAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.FormSetXmlSchemaForm">
            <summary>设置 XmlArrayAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.IsNullableGet">
            <summary>设置 XmlArrayAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.IsNullableSetBoolean">
            <summary>设置 XmlArrayAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.NamespaceGet">
            <summary>设置 XmlArrayAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.NamespaceSetString">
            <summary>设置 XmlArrayAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.OrderGet">
            <summary>设置 XmlArrayAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayAttribute.OrderSetInt32">
            <summary>设置 XmlArrayAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute">
            <summary>System.Xml.Serialization.XmlArrayItemAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.#ctor(System.Xml.Serialization.XmlArrayItemAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.DataTypeGet">
            <summary>设置 XmlArrayItemAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.DataTypeSetString">
            <summary>设置 XmlArrayItemAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.ElementNameGet">
            <summary>设置 XmlArrayItemAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.ElementNameSetString">
            <summary>设置 XmlArrayItemAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.FormGet">
            <summary>设置 XmlArrayItemAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlArrayItemAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.IsNullableGet">
            <summary>设置 XmlArrayItemAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.IsNullableSetBoolean">
            <summary>设置 XmlArrayItemAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.IsNullableSpecifiedGet">
            <summary>设置 XmlArrayItemAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlArrayItemAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlArrayItemAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.NestingLevelGet">
            <summary>设置 XmlArrayItemAttribute.get_NestingLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.NestingLevelSetInt32">
            <summary>设置 XmlArrayItemAttribute.set_NestingLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.TypeGet">
            <summary>设置 XmlArrayItemAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlArrayItemAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.Constructor">
            <summary>设置 XmlArrayItemAttribute.XmlArrayItemAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.ConstructorString">
            <summary>设置 XmlArrayItemAttribute.XmlArrayItemAttribute(String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.ConstructorStringType">
            <summary>设置 XmlArrayItemAttribute.XmlArrayItemAttribute(String elementName, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.ConstructorType">
            <summary>设置 XmlArrayItemAttribute.XmlArrayItemAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.DataTypeGet">
            <summary>设置 XmlArrayItemAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.DataTypeSetString">
            <summary>设置 XmlArrayItemAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.ElementNameGet">
            <summary>设置 XmlArrayItemAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.ElementNameSetString">
            <summary>设置 XmlArrayItemAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.FormGet">
            <summary>设置 XmlArrayItemAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.FormSetXmlSchemaForm">
            <summary>设置 XmlArrayItemAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.IsNullableGet">
            <summary>设置 XmlArrayItemAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.IsNullableSetBoolean">
            <summary>设置 XmlArrayItemAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.IsNullableSpecifiedGet">
            <summary>设置 XmlArrayItemAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.NamespaceGet">
            <summary>设置 XmlArrayItemAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.NamespaceSetString">
            <summary>设置 XmlArrayItemAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.NestingLevelGet">
            <summary>设置 XmlArrayItemAttribute.get_NestingLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.NestingLevelSetInt32">
            <summary>设置 XmlArrayItemAttribute.set_NestingLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.TypeGet">
            <summary>设置 XmlArrayItemAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttribute.TypeSetType">
            <summary>设置 XmlArrayItemAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes">
            <summary>System.Xml.Serialization.XmlArrayItemAttributes 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.#ctor(System.Xml.Serialization.XmlArrayItemAttributes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AddXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Add(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.AddXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Add(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.ContainsXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Contains(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.CopyToXmlArrayItemAttributeArrayInt32">
            <summary>设置 XmlArrayItemAttributes.CopyTo(XmlArrayItemAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.IndexOfXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.IndexOf(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.InsertInt32XmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Insert(Int32 index, XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.ItemGetInt32">
            <summary>设置 XmlArrayItemAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.ItemSetInt32XmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.set_Item(Int32 index, XmlArrayItemAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.AllInstances.RemoveXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Remove(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.Constructor">
            <summary>设置 XmlArrayItemAttributes.XmlArrayItemAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.ContainsXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Contains(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.CopyToXmlArrayItemAttributeArrayInt32">
            <summary>设置 XmlArrayItemAttributes.CopyTo(XmlArrayItemAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.IndexOfXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.IndexOf(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.InsertInt32XmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Insert(Int32 index, XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.ItemGetInt32">
            <summary>设置 XmlArrayItemAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.ItemSetInt32XmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.set_Item(Int32 index, XmlArrayItemAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlArrayItemAttributes.RemoveXmlArrayItemAttribute">
            <summary>设置 XmlArrayItemAttributes.Remove(XmlArrayItemAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute">
            <summary>System.Xml.Serialization.XmlAttributeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.#ctor(System.Xml.Serialization.XmlAttributeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.AttributeNameGet">
            <summary>设置 XmlAttributeAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.AttributeNameSetString">
            <summary>设置 XmlAttributeAttribute.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.DataTypeGet">
            <summary>设置 XmlAttributeAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.DataTypeSetString">
            <summary>设置 XmlAttributeAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.FormGet">
            <summary>设置 XmlAttributeAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlAttributeAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlAttributeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlAttributeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.TypeGet">
            <summary>设置 XmlAttributeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlAttributeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AttributeNameGet">
            <summary>设置 XmlAttributeAttribute.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.AttributeNameSetString">
            <summary>设置 XmlAttributeAttribute.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.Constructor">
            <summary>设置 XmlAttributeAttribute.XmlAttributeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.ConstructorString">
            <summary>设置 XmlAttributeAttribute.XmlAttributeAttribute(String attributeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.ConstructorStringType">
            <summary>设置 XmlAttributeAttribute.XmlAttributeAttribute(String attributeName, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.ConstructorType">
            <summary>设置 XmlAttributeAttribute.XmlAttributeAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.DataTypeGet">
            <summary>设置 XmlAttributeAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.DataTypeSetString">
            <summary>设置 XmlAttributeAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.FormGet">
            <summary>设置 XmlAttributeAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.FormSetXmlSchemaForm">
            <summary>设置 XmlAttributeAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.NamespaceGet">
            <summary>设置 XmlAttributeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.NamespaceSetString">
            <summary>设置 XmlAttributeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.TypeGet">
            <summary>设置 XmlAttributeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeAttribute.TypeSetType">
            <summary>设置 XmlAttributeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs">
            <summary>System.Xml.Serialization.XmlAttributeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.#ctor(System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances.AttrGet">
            <summary>设置 XmlAttributeEventArgs.get_Attr() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances.ExpectedAttributesGet">
            <summary>设置 XmlAttributeEventArgs.get_ExpectedAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances.LineNumberGet">
            <summary>设置 XmlAttributeEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances.LinePositionGet">
            <summary>设置 XmlAttributeEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AllInstances.ObjectBeingDeserializedGet">
            <summary>设置 XmlAttributeEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.AttrGet">
            <summary>设置 XmlAttributeEventArgs.get_Attr() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.ConstructorXmlAttributeInt32Int32ObjectString">
            <summary>设置 XmlAttributeEventArgs.XmlAttributeEventArgs(XmlAttribute attr, Int32 lineNumber, Int32 linePosition, Object o, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.ExpectedAttributesGet">
            <summary>设置 XmlAttributeEventArgs.get_ExpectedAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.LineNumberGet">
            <summary>设置 XmlAttributeEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.LinePositionGet">
            <summary>设置 XmlAttributeEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeEventArgs.ObjectBeingDeserializedGet">
            <summary>设置 XmlAttributeEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides">
            <summary>System.Xml.Serialization.XmlAttributeOverrides 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AddTypeStringXmlAttributes">
            <summary>设置 XmlAttributeOverrides.Add(Type type, String member, XmlAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AddTypeXmlAttributes">
            <summary>设置 XmlAttributeOverrides.Add(Type type, XmlAttributes attributes) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AllInstances.AddTypeStringXmlAttributes">
            <summary>设置 XmlAttributeOverrides.Add(Type type, String member, XmlAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AllInstances.AddTypeXmlAttributes">
            <summary>设置 XmlAttributeOverrides.Add(Type type, XmlAttributes attributes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AllInstances.ItemGetType">
            <summary>设置 XmlAttributeOverrides.get_Item(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.AllInstances.ItemGetTypeString">
            <summary>设置 XmlAttributeOverrides.get_Item(Type type, String member) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.Constructor">
            <summary>设置 XmlAttributeOverrides.XmlAttributeOverrides() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.ItemGetType">
            <summary>设置 XmlAttributeOverrides.get_Item(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributeOverrides.ItemGetTypeString">
            <summary>设置 XmlAttributeOverrides.get_Item(Type type, String member) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributes">
            <summary>System.Xml.Serialization.XmlAttributes 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributes.#ctor(System.Xml.Serialization.XmlAttributes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlAnyAttributeGet">
            <summary>设置 XmlAttributes.get_XmlAnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlAnyAttributeSetXmlAnyAttributeAttribute">
            <summary>设置 XmlAttributes.set_XmlAnyAttribute(XmlAnyAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlAnyElementsGet">
            <summary>设置 XmlAttributes.get_XmlAnyElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlArrayGet">
            <summary>设置 XmlAttributes.get_XmlArray() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlArrayItemsGet">
            <summary>设置 XmlAttributes.get_XmlArrayItems() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlArraySetXmlArrayAttribute">
            <summary>设置 XmlAttributes.set_XmlArray(XmlArrayAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlAttributeGet">
            <summary>设置 XmlAttributes.get_XmlAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlAttributeSetXmlAttributeAttribute">
            <summary>设置 XmlAttributes.set_XmlAttribute(XmlAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlChoiceIdentifierGet">
            <summary>设置 XmlAttributes.get_XmlChoiceIdentifier() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlDefaultValueGet">
            <summary>设置 XmlAttributes.get_XmlDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlDefaultValueSetObject">
            <summary>设置 XmlAttributes.set_XmlDefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlElementsGet">
            <summary>设置 XmlAttributes.get_XmlElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlEnumGet">
            <summary>设置 XmlAttributes.get_XmlEnum() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlEnumSetXmlEnumAttribute">
            <summary>设置 XmlAttributes.set_XmlEnum(XmlEnumAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlIgnoreGet">
            <summary>设置 XmlAttributes.get_XmlIgnore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlIgnoreSetBoolean">
            <summary>设置 XmlAttributes.set_XmlIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlRootGet">
            <summary>设置 XmlAttributes.get_XmlRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlRootSetXmlRootAttribute">
            <summary>设置 XmlAttributes.set_XmlRoot(XmlRootAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlTextGet">
            <summary>设置 XmlAttributes.get_XmlText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlTextSetXmlTextAttribute">
            <summary>设置 XmlAttributes.set_XmlText(XmlTextAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlTypeGet">
            <summary>设置 XmlAttributes.get_XmlType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlTypeSetXmlTypeAttribute">
            <summary>设置 XmlAttributes.set_XmlType(XmlTypeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlnsGet">
            <summary>设置 XmlAttributes.get_Xmlns() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.AllInstances.XmlnsSetBoolean">
            <summary>设置 XmlAttributes.set_Xmlns(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlAttributes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.Constructor">
            <summary>设置 XmlAttributes.XmlAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.ConstructorICustomAttributeProvider">
            <summary>设置 XmlAttributes.XmlAttributes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.GetAttrICustomAttributeProviderType">
            <summary>设置 XmlAttributes.GetAttr(ICustomAttributeProvider provider, Type attrType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlAnyAttributeGet">
            <summary>设置 XmlAttributes.get_XmlAnyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlAnyAttributeSetXmlAnyAttributeAttribute">
            <summary>设置 XmlAttributes.set_XmlAnyAttribute(XmlAnyAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlAnyElementsGet">
            <summary>设置 XmlAttributes.get_XmlAnyElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlArrayGet">
            <summary>设置 XmlAttributes.get_XmlArray() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlArrayItemsGet">
            <summary>设置 XmlAttributes.get_XmlArrayItems() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlArraySetXmlArrayAttribute">
            <summary>设置 XmlAttributes.set_XmlArray(XmlArrayAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlAttributeGet">
            <summary>设置 XmlAttributes.get_XmlAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlAttributeSetXmlAttributeAttribute">
            <summary>设置 XmlAttributes.set_XmlAttribute(XmlAttributeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlChoiceIdentifierGet">
            <summary>设置 XmlAttributes.get_XmlChoiceIdentifier() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlDefaultValueGet">
            <summary>设置 XmlAttributes.get_XmlDefaultValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlDefaultValueSetObject">
            <summary>设置 XmlAttributes.set_XmlDefaultValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlElementsGet">
            <summary>设置 XmlAttributes.get_XmlElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlEnumGet">
            <summary>设置 XmlAttributes.get_XmlEnum() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlEnumSetXmlEnumAttribute">
            <summary>设置 XmlAttributes.set_XmlEnum(XmlEnumAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlIgnoreGet">
            <summary>设置 XmlAttributes.get_XmlIgnore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlIgnoreSetBoolean">
            <summary>设置 XmlAttributes.set_XmlIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlRootGet">
            <summary>设置 XmlAttributes.get_XmlRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlRootSetXmlRootAttribute">
            <summary>设置 XmlAttributes.set_XmlRoot(XmlRootAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlTextGet">
            <summary>设置 XmlAttributes.get_XmlText() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlTextSetXmlTextAttribute">
            <summary>设置 XmlAttributes.set_XmlText(XmlTextAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlTypeGet">
            <summary>设置 XmlAttributes.get_XmlType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlTypeSetXmlTypeAttribute">
            <summary>设置 XmlAttributes.set_XmlType(XmlTypeAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlnsGet">
            <summary>设置 XmlAttributes.get_Xmlns() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlAttributes.XmlnsSetBoolean">
            <summary>设置 XmlAttributes.set_Xmlns(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute">
            <summary>System.Xml.Serialization.XmlChoiceIdentifierAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.#ctor(System.Xml.Serialization.XmlChoiceIdentifierAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.AllInstances.MemberInfoGet">
            <summary>设置 XmlChoiceIdentifierAttribute.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.AllInstances.MemberInfoSetMemberInfo">
            <summary>设置 XmlChoiceIdentifierAttribute.set_MemberInfo(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.AllInstances.MemberNameGet">
            <summary>设置 XmlChoiceIdentifierAttribute.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.AllInstances.MemberNameSetString">
            <summary>设置 XmlChoiceIdentifierAttribute.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.Constructor">
            <summary>设置 XmlChoiceIdentifierAttribute.XmlChoiceIdentifierAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.ConstructorString">
            <summary>设置 XmlChoiceIdentifierAttribute.XmlChoiceIdentifierAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.MemberInfoGet">
            <summary>设置 XmlChoiceIdentifierAttribute.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.MemberInfoSetMemberInfo">
            <summary>设置 XmlChoiceIdentifierAttribute.set_MemberInfo(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.MemberNameGet">
            <summary>设置 XmlChoiceIdentifierAttribute.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlChoiceIdentifierAttribute.MemberNameSetString">
            <summary>设置 XmlChoiceIdentifierAttribute.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlCodeExporter">
            <summary>System.Xml.Serialization.XmlCodeExporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.#ctor(System.Xml.Serialization.XmlCodeExporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingString">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingStringBoolean">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, String ns, Boolean forceUseMemberName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AddMappingMetadataCodeAttributeDeclarationCollectionXmlTypeMappingString">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlTypeMapping mapping, String ns) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingString">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances.AddMappingMetadataCodeAttributeDeclarationCollectionXmlMemberMappingStringBoolean">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlMemberMapping member, String ns, Boolean forceUseMemberName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances.AddMappingMetadataCodeAttributeDeclarationCollectionXmlTypeMappingString">
            <summary>设置 XmlCodeExporter.AddMappingMetadata(CodeAttributeDeclarationCollection metadata, XmlTypeMapping mapping, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances.ExportMembersMappingXmlMembersMapping">
            <summary>设置 XmlCodeExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.AllInstances.ExportTypeMappingXmlTypeMapping">
            <summary>设置 XmlCodeExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ConstructorCodeNamespace">
            <summary>设置 XmlCodeExporter.XmlCodeExporter(CodeNamespace codeNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ConstructorCodeNamespaceCodeCompileUnit">
            <summary>设置 XmlCodeExporter.XmlCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeDomProviderCodeGenerationOptionsHashtable">
            <summary>设置 XmlCodeExporter.XmlCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeDomProvider codeProvider, CodeGenerationOptions options, Hashtable mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeGenerationOptions">
            <summary>设置 XmlCodeExporter.XmlCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeGenerationOptions options) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ConstructorCodeNamespaceCodeCompileUnitCodeGenerationOptionsHashtable">
            <summary>设置 XmlCodeExporter.XmlCodeExporter(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit, CodeGenerationOptions options, Hashtable mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ExportMembersMappingXmlMembersMapping">
            <summary>设置 XmlCodeExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlCodeExporter.ExportTypeMappingXmlTypeMapping">
            <summary>设置 XmlCodeExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents">
            <summary>System.Xml.Serialization.XmlDeserializationEvents 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlDeserializationEvents.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementAttribute">
            <summary>System.Xml.Serialization.XmlElementAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.#ctor(System.Xml.Serialization.XmlElementAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.DataTypeGet">
            <summary>设置 XmlElementAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.DataTypeSetString">
            <summary>设置 XmlElementAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.ElementNameGet">
            <summary>设置 XmlElementAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.ElementNameSetString">
            <summary>设置 XmlElementAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.FormGet">
            <summary>设置 XmlElementAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.FormSetXmlSchemaForm">
            <summary>设置 XmlElementAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.IsNullableGet">
            <summary>设置 XmlElementAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.IsNullableSetBoolean">
            <summary>设置 XmlElementAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.IsNullableSpecifiedGet">
            <summary>设置 XmlElementAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlElementAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlElementAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.OrderGet">
            <summary>设置 XmlElementAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.OrderSetInt32">
            <summary>设置 XmlElementAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.TypeGet">
            <summary>设置 XmlElementAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlElementAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.Constructor">
            <summary>设置 XmlElementAttribute.XmlElementAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.ConstructorString">
            <summary>设置 XmlElementAttribute.XmlElementAttribute(String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.ConstructorStringType">
            <summary>设置 XmlElementAttribute.XmlElementAttribute(String elementName, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.ConstructorType">
            <summary>设置 XmlElementAttribute.XmlElementAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.DataTypeGet">
            <summary>设置 XmlElementAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.DataTypeSetString">
            <summary>设置 XmlElementAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.ElementNameGet">
            <summary>设置 XmlElementAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.ElementNameSetString">
            <summary>设置 XmlElementAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.FormGet">
            <summary>设置 XmlElementAttribute.get_Form() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.FormSetXmlSchemaForm">
            <summary>设置 XmlElementAttribute.set_Form(XmlSchemaForm value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.IsNullableGet">
            <summary>设置 XmlElementAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.IsNullableSetBoolean">
            <summary>设置 XmlElementAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.IsNullableSpecifiedGet">
            <summary>设置 XmlElementAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.NamespaceGet">
            <summary>设置 XmlElementAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.NamespaceSetString">
            <summary>设置 XmlElementAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.OrderGet">
            <summary>设置 XmlElementAttribute.get_Order() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.OrderSetInt32">
            <summary>设置 XmlElementAttribute.set_Order(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.TypeGet">
            <summary>设置 XmlElementAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttribute.TypeSetType">
            <summary>设置 XmlElementAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementAttributes">
            <summary>System.Xml.Serialization.XmlElementAttributes 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.#ctor(System.Xml.Serialization.XmlElementAttributes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AddXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Add(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.AddXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Add(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.ContainsXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Contains(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.CopyToXmlElementAttributeArrayInt32">
            <summary>设置 XmlElementAttributes.CopyTo(XmlElementAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.IndexOfXmlElementAttribute">
            <summary>设置 XmlElementAttributes.IndexOf(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.InsertInt32XmlElementAttribute">
            <summary>设置 XmlElementAttributes.Insert(Int32 index, XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.ItemGetInt32">
            <summary>设置 XmlElementAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.ItemSetInt32XmlElementAttribute">
            <summary>设置 XmlElementAttributes.set_Item(Int32 index, XmlElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.AllInstances.RemoveXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Remove(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.Constructor">
            <summary>设置 XmlElementAttributes.XmlElementAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.ContainsXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Contains(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.CopyToXmlElementAttributeArrayInt32">
            <summary>设置 XmlElementAttributes.CopyTo(XmlElementAttribute[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.IndexOfXmlElementAttribute">
            <summary>设置 XmlElementAttributes.IndexOf(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.InsertInt32XmlElementAttribute">
            <summary>设置 XmlElementAttributes.Insert(Int32 index, XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.ItemGetInt32">
            <summary>设置 XmlElementAttributes.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.ItemSetInt32XmlElementAttribute">
            <summary>设置 XmlElementAttributes.set_Item(Int32 index, XmlElementAttribute value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementAttributes.RemoveXmlElementAttribute">
            <summary>设置 XmlElementAttributes.Remove(XmlElementAttribute attribute) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs">
            <summary>System.Xml.Serialization.XmlElementEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.#ctor(System.Xml.Serialization.XmlElementEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances.ElementGet">
            <summary>设置 XmlElementEventArgs.get_Element() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances.ExpectedElementsGet">
            <summary>设置 XmlElementEventArgs.get_ExpectedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances.LineNumberGet">
            <summary>设置 XmlElementEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances.LinePositionGet">
            <summary>设置 XmlElementEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.AllInstances.ObjectBeingDeserializedGet">
            <summary>设置 XmlElementEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.ConstructorXmlElementInt32Int32ObjectString">
            <summary>设置 XmlElementEventArgs.XmlElementEventArgs(XmlElement elem, Int32 lineNumber, Int32 linePosition, Object o, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.ElementGet">
            <summary>设置 XmlElementEventArgs.get_Element() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.ExpectedElementsGet">
            <summary>设置 XmlElementEventArgs.get_ExpectedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.LineNumberGet">
            <summary>设置 XmlElementEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.LinePositionGet">
            <summary>设置 XmlElementEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlElementEventArgs.ObjectBeingDeserializedGet">
            <summary>设置 XmlElementEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute">
            <summary>System.Xml.Serialization.XmlEnumAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.#ctor(System.Xml.Serialization.XmlEnumAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.AllInstances.NameGet">
            <summary>设置 XmlEnumAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.AllInstances.NameSetString">
            <summary>设置 XmlEnumAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.Constructor">
            <summary>设置 XmlEnumAttribute.XmlEnumAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.ConstructorString">
            <summary>设置 XmlEnumAttribute.XmlEnumAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.NameGet">
            <summary>设置 XmlEnumAttribute.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlEnumAttribute.NameSetString">
            <summary>设置 XmlEnumAttribute.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute">
            <summary>System.Xml.Serialization.XmlIgnoreAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.#ctor(System.Xml.Serialization.XmlIgnoreAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIgnoreAttribute.Constructor">
            <summary>设置 XmlIgnoreAttribute.XmlIgnoreAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute">
            <summary>System.Xml.Serialization.XmlIncludeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.#ctor(System.Xml.Serialization.XmlIncludeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.AllInstances.TypeGet">
            <summary>设置 XmlIncludeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlIncludeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.ConstructorType">
            <summary>设置 XmlIncludeAttribute.XmlIncludeAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.TypeGet">
            <summary>设置 XmlIncludeAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlIncludeAttribute.TypeSetType">
            <summary>设置 XmlIncludeAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMapping">
            <summary>System.Xml.Serialization.XmlMapping 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMapping.#ctor(System.Xml.Serialization.XmlMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.CheckShallow">
            <summary>设置 XmlMapping.CheckShallow() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.ElementNameGet">
            <summary>设置 XmlMapping.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.GenerateSerializerGet">
            <summary>设置 XmlMapping.get_GenerateSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.GenerateSerializerSetBoolean">
            <summary>设置 XmlMapping.set_GenerateSerializer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.IsReadableGet">
            <summary>设置 XmlMapping.get_IsReadable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.IsSoapGet">
            <summary>设置 XmlMapping.get_IsSoap() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.IsSoapSetBoolean">
            <summary>设置 XmlMapping.set_IsSoap(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.IsWriteableGet">
            <summary>设置 XmlMapping.get_IsWriteable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.KeyGet">
            <summary>设置 XmlMapping.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.NamespaceGet">
            <summary>设置 XmlMapping.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.SetKeyInternalString">
            <summary>设置 XmlMapping.SetKeyInternal(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.SetKeyString">
            <summary>设置 XmlMapping.SetKey(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.AllInstances.XsdElementNameGet">
            <summary>设置 XmlMapping.get_XsdElementName() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.CheckShallow">
            <summary>设置 XmlMapping.CheckShallow() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.ElementNameGet">
            <summary>设置 XmlMapping.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.GenerateKeyTypeXmlRootAttributeString">
            <summary>设置 XmlMapping.GenerateKey(Type type, XmlRootAttribute root, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.GenerateSerializerGet">
            <summary>设置 XmlMapping.get_GenerateSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.GenerateSerializerSetBoolean">
            <summary>设置 XmlMapping.set_GenerateSerializer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.IsReadableGet">
            <summary>设置 XmlMapping.get_IsReadable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.IsShallowXmlMappingArray">
            <summary>设置 XmlMapping.IsShallow(XmlMapping[] mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.IsSoapGet">
            <summary>设置 XmlMapping.get_IsSoap() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.IsSoapSetBoolean">
            <summary>设置 XmlMapping.set_IsSoap(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.IsWriteableGet">
            <summary>设置 XmlMapping.get_IsWriteable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.KeyGet">
            <summary>设置 XmlMapping.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.NamespaceGet">
            <summary>设置 XmlMapping.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.SetKeyInternalString">
            <summary>设置 XmlMapping.SetKeyInternal(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.SetKeyString">
            <summary>设置 XmlMapping.SetKey(String key) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMapping.XsdElementNameGet">
            <summary>设置 XmlMapping.get_XsdElementName() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMemberMapping">
            <summary>System.Xml.Serialization.XmlMemberMapping 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.#ctor(System.Xml.Serialization.XmlMemberMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.AnyGet">
            <summary>设置 XmlMemberMapping.get_Any() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.CheckSpecifiedGet">
            <summary>设置 XmlMemberMapping.get_CheckSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.ElementNameGet">
            <summary>设置 XmlMemberMapping.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.GenerateTypeNameCodeDomProvider">
            <summary>设置 XmlMemberMapping.GenerateTypeName(CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.IsNullableGet">
            <summary>设置 XmlMemberMapping.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.MemberNameGet">
            <summary>设置 XmlMemberMapping.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.NamespaceGet">
            <summary>设置 XmlMemberMapping.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.TypeFullNameGet">
            <summary>设置 XmlMemberMapping.get_TypeFullName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.TypeNameGet">
            <summary>设置 XmlMemberMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.TypeNamespaceGet">
            <summary>设置 XmlMemberMapping.get_TypeNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AllInstances.XsdElementNameGet">
            <summary>设置 XmlMemberMapping.get_XsdElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.AnyGet">
            <summary>设置 XmlMemberMapping.get_Any() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.CheckSpecifiedGet">
            <summary>设置 XmlMemberMapping.get_CheckSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.ElementNameGet">
            <summary>设置 XmlMemberMapping.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.GenerateTypeNameCodeDomProvider">
            <summary>设置 XmlMemberMapping.GenerateTypeName(CodeDomProvider codeProvider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.IsNullableGet">
            <summary>设置 XmlMemberMapping.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.MemberNameGet">
            <summary>设置 XmlMemberMapping.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.NamespaceGet">
            <summary>设置 XmlMemberMapping.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.TypeFullNameGet">
            <summary>设置 XmlMemberMapping.get_TypeFullName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.TypeNameGet">
            <summary>设置 XmlMemberMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.TypeNamespaceGet">
            <summary>设置 XmlMemberMapping.get_TypeNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMemberMapping.XsdElementNameGet">
            <summary>设置 XmlMemberMapping.get_XsdElementName() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMembersMapping">
            <summary>System.Xml.Serialization.XmlMembersMapping 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.#ctor(System.Xml.Serialization.XmlMembersMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.AllInstances.CountGet">
            <summary>设置 XmlMembersMapping.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.AllInstances.ItemGetInt32">
            <summary>设置 XmlMembersMapping.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.AllInstances.TypeNameGet">
            <summary>设置 XmlMembersMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.AllInstances.TypeNamespaceGet">
            <summary>设置 XmlMembersMapping.get_TypeNamespace() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.CountGet">
            <summary>设置 XmlMembersMapping.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.ItemGetInt32">
            <summary>设置 XmlMembersMapping.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.TypeNameGet">
            <summary>设置 XmlMembersMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlMembersMapping.TypeNamespaceGet">
            <summary>设置 XmlMembersMapping.get_TypeNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute">
            <summary>System.Xml.Serialization.XmlNamespaceDeclarationsAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.#ctor(System.Xml.Serialization.XmlNamespaceDeclarationsAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNamespaceDeclarationsAttribute.Constructor">
            <summary>设置 XmlNamespaceDeclarationsAttribute.XmlNamespaceDeclarationsAttribute() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs">
            <summary>System.Xml.Serialization.XmlNodeEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.#ctor(System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.LineNumberGet">
            <summary>设置 XmlNodeEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.LinePositionGet">
            <summary>设置 XmlNodeEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.LocalNameGet">
            <summary>设置 XmlNodeEventArgs.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.NameGet">
            <summary>设置 XmlNodeEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.NamespaceURIGet">
            <summary>设置 XmlNodeEventArgs.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.NodeTypeGet">
            <summary>设置 XmlNodeEventArgs.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.ObjectBeingDeserializedGet">
            <summary>设置 XmlNodeEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.AllInstances.TextGet">
            <summary>设置 XmlNodeEventArgs.get_Text() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.ConstructorXmlNodeInt32Int32Object">
            <summary>设置 XmlNodeEventArgs.XmlNodeEventArgs(XmlNode xmlNode, Int32 lineNumber, Int32 linePosition, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.LineNumberGet">
            <summary>设置 XmlNodeEventArgs.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.LinePositionGet">
            <summary>设置 XmlNodeEventArgs.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.LocalNameGet">
            <summary>设置 XmlNodeEventArgs.get_LocalName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.NameGet">
            <summary>设置 XmlNodeEventArgs.get_Name() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.NamespaceURIGet">
            <summary>设置 XmlNodeEventArgs.get_NamespaceURI() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.NodeTypeGet">
            <summary>设置 XmlNodeEventArgs.get_NodeType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.ObjectBeingDeserializedGet">
            <summary>设置 XmlNodeEventArgs.get_ObjectBeingDeserialized() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlNodeEventArgs.TextGet">
            <summary>设置 XmlNodeEventArgs.get_Text() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter">
            <summary>System.Xml.Serialization.XmlReflectionImporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.#ctor(System.Xml.Serialization.XmlReflectionImporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc, Boolean openModel) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBooleanXmlMappingAccess">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc, Boolean openModel, XmlMappingAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportTypeMappingType">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportTypeMappingTypeString">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportTypeMappingTypeXmlRootAttribute">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.ImportTypeMappingTypeXmlRootAttributeString">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.IncludeTypeType">
            <summary>设置 XmlReflectionImporter.IncludeType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.IncludeTypesICustomAttributeProvider">
            <summary>设置 XmlReflectionImporter.IncludeTypes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.XsdTypeNameType">
            <summary>设置 XmlReflectionImporter.XsdTypeName(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.AllInstances.XsdTypeNameTypeXmlAttributesString">
            <summary>设置 XmlReflectionImporter.XsdTypeName(Type type, XmlAttributes a, String name) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.Constructor">
            <summary>设置 XmlReflectionImporter.XmlReflectionImporter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ConstructorString">
            <summary>设置 XmlReflectionImporter.XmlReflectionImporter(String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ConstructorXmlAttributeOverrides">
            <summary>设置 XmlReflectionImporter.XmlReflectionImporter(XmlAttributeOverrides attributeOverrides) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ConstructorXmlAttributeOverridesString">
            <summary>设置 XmlReflectionImporter.XmlReflectionImporter(XmlAttributeOverrides attributeOverrides, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.FindSpecifiedMemberStringXmlReflectionMemberArray">
            <summary>设置 XmlReflectionImporter.FindSpecifiedMember(String memberName, XmlReflectionMember[] reflectionMembers) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.GetMethodFromSchemaProviderXmlSchemaProviderAttributeType">
            <summary>设置 XmlReflectionImporter.GetMethodFromSchemaProvider(XmlSchemaProviderAttribute provider, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.GetTopLevelMappingTypeString">
            <summary>设置 XmlReflectionImporter.GetTopLevelMapping(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBoolean">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc, Boolean openModel) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportMembersMappingStringStringXmlReflectionMemberArrayBooleanBooleanBooleanXmlMappingAccess">
            <summary>设置 XmlReflectionImporter.ImportMembersMapping(String elementName, String ns, XmlReflectionMember[] members, Boolean hasWrapperElement, Boolean rpc, Boolean openModel, XmlMappingAccess access) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportTypeMappingType">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportTypeMappingTypeString">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportTypeMappingTypeXmlRootAttribute">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ImportTypeMappingTypeXmlRootAttributeString">
            <summary>设置 XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.IncludeTypeType">
            <summary>设置 XmlReflectionImporter.IncludeType(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.IncludeTypesICustomAttributeProvider">
            <summary>设置 XmlReflectionImporter.IncludeTypes(ICustomAttributeProvider provider) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.ValidationCallbackWithErrorCodeObjectValidationEventArgs">
            <summary>设置 XmlReflectionImporter.ValidationCallbackWithErrorCode(Object sender, ValidationEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.XsdTypeNameType">
            <summary>设置 XmlReflectionImporter.XsdTypeName(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionImporter.XsdTypeNameTypeXmlAttributesString">
            <summary>设置 XmlReflectionImporter.XsdTypeName(Type type, XmlAttributes a, String name) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlReflectionMember">
            <summary>System.Xml.Serialization.XmlReflectionMember 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.#ctor(System.Xml.Serialization.XmlReflectionMember)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.IsReturnValueGet">
            <summary>设置 XmlReflectionMember.get_IsReturnValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.IsReturnValueSetBoolean">
            <summary>设置 XmlReflectionMember.set_IsReturnValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.MemberNameGet">
            <summary>设置 XmlReflectionMember.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.MemberNameSetString">
            <summary>设置 XmlReflectionMember.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.MemberTypeGet">
            <summary>设置 XmlReflectionMember.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.MemberTypeSetType">
            <summary>设置 XmlReflectionMember.set_MemberType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.OverrideIsNullableGet">
            <summary>设置 XmlReflectionMember.get_OverrideIsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.OverrideIsNullableSetBoolean">
            <summary>设置 XmlReflectionMember.set_OverrideIsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.SoapAttributesGet">
            <summary>设置 XmlReflectionMember.get_SoapAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.SoapAttributesSetSoapAttributes">
            <summary>设置 XmlReflectionMember.set_SoapAttributes(SoapAttributes value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.XmlAttributesGet">
            <summary>设置 XmlReflectionMember.get_XmlAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.AllInstances.XmlAttributesSetXmlAttributes">
            <summary>设置 XmlReflectionMember.set_XmlAttributes(XmlAttributes value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.Constructor">
            <summary>设置 XmlReflectionMember.XmlReflectionMember() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.IsReturnValueGet">
            <summary>设置 XmlReflectionMember.get_IsReturnValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.IsReturnValueSetBoolean">
            <summary>设置 XmlReflectionMember.set_IsReturnValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.MemberNameGet">
            <summary>设置 XmlReflectionMember.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.MemberNameSetString">
            <summary>设置 XmlReflectionMember.set_MemberName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.MemberTypeGet">
            <summary>设置 XmlReflectionMember.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.MemberTypeSetType">
            <summary>设置 XmlReflectionMember.set_MemberType(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.OverrideIsNullableGet">
            <summary>设置 XmlReflectionMember.get_OverrideIsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.OverrideIsNullableSetBoolean">
            <summary>设置 XmlReflectionMember.set_OverrideIsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.SoapAttributesGet">
            <summary>设置 XmlReflectionMember.get_SoapAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.SoapAttributesSetSoapAttributes">
            <summary>设置 XmlReflectionMember.set_SoapAttributes(SoapAttributes value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.XmlAttributesGet">
            <summary>设置 XmlReflectionMember.get_XmlAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlReflectionMember.XmlAttributesSetXmlAttributes">
            <summary>设置 XmlReflectionMember.set_XmlAttributes(XmlAttributes value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlRootAttribute">
            <summary>System.Xml.Serialization.XmlRootAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.#ctor(System.Xml.Serialization.XmlRootAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.DataTypeGet">
            <summary>设置 XmlRootAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.DataTypeSetString">
            <summary>设置 XmlRootAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.ElementNameGet">
            <summary>设置 XmlRootAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.ElementNameSetString">
            <summary>设置 XmlRootAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.IsNullableGet">
            <summary>设置 XmlRootAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.IsNullableSetBoolean">
            <summary>设置 XmlRootAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.IsNullableSpecifiedGet">
            <summary>设置 XmlRootAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.KeyGet">
            <summary>设置 XmlRootAttribute.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlRootAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlRootAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.Constructor">
            <summary>设置 XmlRootAttribute.XmlRootAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.ConstructorString">
            <summary>设置 XmlRootAttribute.XmlRootAttribute(String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.DataTypeGet">
            <summary>设置 XmlRootAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.DataTypeSetString">
            <summary>设置 XmlRootAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.ElementNameGet">
            <summary>设置 XmlRootAttribute.get_ElementName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.ElementNameSetString">
            <summary>设置 XmlRootAttribute.set_ElementName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.IsNullableGet">
            <summary>设置 XmlRootAttribute.get_IsNullable() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.IsNullableSetBoolean">
            <summary>设置 XmlRootAttribute.set_IsNullable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.IsNullableSpecifiedGet">
            <summary>设置 XmlRootAttribute.get_IsNullableSpecified() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.KeyGet">
            <summary>设置 XmlRootAttribute.get_Key() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.NamespaceGet">
            <summary>设置 XmlRootAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlRootAttribute.NamespaceSetString">
            <summary>设置 XmlRootAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator">
            <summary>System.Xml.Serialization.XmlSchemaEnumerator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemaEnumerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances.CurrentGet">
            <summary>设置 XmlSchemaEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances.Dispose">
            <summary>设置 XmlSchemaEnumerator.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances.MoveNext">
            <summary>设置 XmlSchemaEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.AllInstances.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.Bind(System.Collections.Generic.IEnumerator{System.Xml.Schema.XmlSchema})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.ConstructorXmlSchemas">
            <summary>设置 XmlSchemaEnumerator.XmlSchemaEnumerator(XmlSchemas list) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.CurrentGet">
            <summary>设置 XmlSchemaEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.CurrentSystemCollectionsIEnumeratorget">
            <summary>设置 XmlSchemaEnumerator.System.Collections.IEnumerator.get_Current() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.Dispose">
            <summary>设置 XmlSchemaEnumerator.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.MoveNext">
            <summary>设置 XmlSchemaEnumerator.MoveNext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaEnumerator.SystemCollectionsIEnumeratorReset">
            <summary>设置 XmlSchemaEnumerator.System.Collections.IEnumerator.Reset() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter">
            <summary>System.Xml.Serialization.XmlSchemaExporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemaExporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportAnyTypeString">
            <summary>设置 XmlSchemaExporter.ExportAnyType(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportAnyTypeXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportAnyType(XmlMembersMapping members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportMembersMappingXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportMembersMappingXmlMembersMappingBoolean">
            <summary>设置 XmlSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping, Boolean exportEnclosingType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportTypeMappingXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportTypeMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.AllInstances.ExportTypeMappingXmlTypeMapping">
            <summary>设置 XmlSchemaExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ConstructorXmlSchemas">
            <summary>设置 XmlSchemaExporter.XmlSchemaExporter(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportAnyTypeString">
            <summary>设置 XmlSchemaExporter.ExportAnyType(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportAnyTypeXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportAnyType(XmlMembersMapping members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportMembersMappingXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportMembersMappingXmlMembersMappingBoolean">
            <summary>设置 XmlSchemaExporter.ExportMembersMapping(XmlMembersMapping xmlMembersMapping, Boolean exportEnclosingType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportTypeMappingXmlMembersMapping">
            <summary>设置 XmlSchemaExporter.ExportTypeMapping(XmlMembersMapping xmlMembersMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaExporter.ExportTypeMappingXmlTypeMapping">
            <summary>设置 XmlSchemaExporter.ExportTypeMapping(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter">
            <summary>System.Xml.Serialization.XmlSchemaImporter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemaImporter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.FindExtendedAnyElementXmlSchemaAnyBooleanCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedAnyElement(XmlSchemaAny any, Boolean mixed, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.FindExtendedTypeStringStringXmlSchemaObjectCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedType(String name, String ns, XmlSchemaObject context, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.FindExtendedTypeXmlSchemaTypeXmlSchemaObjectCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedType(XmlSchemaType type, XmlSchemaObject context, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.GenerateOrderGet">
            <summary>设置 XmlSchemaImporter.get_GenerateOrder() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportAnyTypeXmlQualifiedNameString">
            <summary>设置 XmlSchemaImporter.ImportAnyType(XmlQualifiedName typeName, String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportDerivedTypeMappingXmlQualifiedNameType">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportDerivedTypeMappingXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportDerivedTypesXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypes(XmlQualifiedName baseName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportMembersMappingStringStringSoapSchemaMemberArray">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportMembersMappingXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportMembersMappingXmlQualifiedNameArray">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName[] names) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportMembersMappingXmlQualifiedNameArrayTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName[] names, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportSchemaTypeXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportSchemaTypeXmlQualifiedNameType">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName, Type baseType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportSchemaTypeXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.AllInstances.ImportTypeMappingXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportTypeMapping(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.BaseTypeNameXmlSchemaSimpleType">
            <summary>设置 XmlSchemaImporter.BaseTypeName(XmlSchemaSimpleType dataType) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ConstructorXmlSchemas">
            <summary>设置 XmlSchemaImporter.XmlSchemaImporter(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ConstructorXmlSchemasCodeGenerationOptionsCodeDomProviderImportContext">
            <summary>设置 XmlSchemaImporter.XmlSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, CodeDomProvider codeProvider, ImportContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ConstructorXmlSchemasCodeGenerationOptionsImportContext">
            <summary>设置 XmlSchemaImporter.XmlSchemaImporter(XmlSchemas schemas, CodeGenerationOptions options, ImportContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ConstructorXmlSchemasCodeIdentifiers">
            <summary>设置 XmlSchemaImporter.XmlSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ConstructorXmlSchemasCodeIdentifiersCodeGenerationOptions">
            <summary>设置 XmlSchemaImporter.XmlSchemaImporter(XmlSchemas schemas, CodeIdentifiers typeIdentifiers, CodeGenerationOptions options) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.FindExtendedAnyElementXmlSchemaAnyBooleanCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedAnyElement(XmlSchemaAny any, Boolean mixed, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.FindExtendedTypeStringStringXmlSchemaObjectCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedType(String name, String ns, XmlSchemaObject context, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.FindExtendedTypeXmlSchemaTypeXmlSchemaObjectCodeCompileUnitCodeNamespaceSchemaImporterExtensionOut">
            <summary>设置 XmlSchemaImporter.FindExtendedType(XmlSchemaType type, XmlSchemaObject context, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, SchemaImporterExtension&amp; extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.GenerateOrderGet">
            <summary>设置 XmlSchemaImporter.get_GenerateOrder() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportAnyTypeXmlQualifiedNameString">
            <summary>设置 XmlSchemaImporter.ImportAnyType(XmlQualifiedName typeName, String elementName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportDerivedTypeMappingXmlQualifiedNameType">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportDerivedTypeMappingXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypeMapping(XmlQualifiedName name, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportDerivedTypesXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportDerivedTypes(XmlQualifiedName baseName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportMembersMappingStringStringSoapSchemaMemberArray">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(String name, String ns, SoapSchemaMember[] members) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportMembersMappingXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportMembersMappingXmlQualifiedNameArray">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName[] names) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportMembersMappingXmlQualifiedNameArrayTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportMembersMapping(XmlQualifiedName[] names, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportSchemaTypeXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportSchemaTypeXmlQualifiedNameType">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName, Type baseType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportSchemaTypeXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemaImporter.ImportSchemaType(XmlQualifiedName typeName, Type baseType, Boolean baseTypeCanBeIndirect) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.ImportTypeMappingXmlQualifiedName">
            <summary>设置 XmlSchemaImporter.ImportTypeMapping(XmlQualifiedName name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaImporter.IsMixedXmlSchemaType">
            <summary>设置 XmlSchemaImporter.IsMixed(XmlSchemaType type) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute">
            <summary>System.Xml.Serialization.XmlSchemaProviderAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.#ctor(System.Xml.Serialization.XmlSchemaProviderAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.AllInstances.IsAnyGet">
            <summary>设置 XmlSchemaProviderAttribute.get_IsAny() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.AllInstances.IsAnySetBoolean">
            <summary>设置 XmlSchemaProviderAttribute.set_IsAny(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.AllInstances.MethodNameGet">
            <summary>设置 XmlSchemaProviderAttribute.get_MethodName() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.ConstructorString">
            <summary>设置 XmlSchemaProviderAttribute.XmlSchemaProviderAttribute(String methodName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.IsAnyGet">
            <summary>设置 XmlSchemaProviderAttribute.get_IsAny() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.IsAnySetBoolean">
            <summary>设置 XmlSchemaProviderAttribute.set_IsAny(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemaProviderAttribute.MethodNameGet">
            <summary>设置 XmlSchemaProviderAttribute.get_MethodName() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemas">
            <summary>System.Xml.Serialization.XmlSchemas 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.#ctor(System.Xml.Serialization.XmlSchemas)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AddReferenceXmlSchema">
            <summary>设置 XmlSchemas.AddReference(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AddXmlSchema">
            <summary>设置 XmlSchemas.Add(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AddXmlSchemaBoolean">
            <summary>设置 XmlSchemas.Add(XmlSchema schema, Boolean delay) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AddXmlSchemaUri">
            <summary>设置 XmlSchemas.Add(XmlSchema schema, Uri baseUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AddXmlSchemas">
            <summary>设置 XmlSchemas.Add(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.AddReferenceXmlSchema">
            <summary>设置 XmlSchemas.AddReference(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.AddXmlSchema">
            <summary>设置 XmlSchemas.Add(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.AddXmlSchemaBoolean">
            <summary>设置 XmlSchemas.Add(XmlSchema schema, Boolean delay) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.AddXmlSchemaUri">
            <summary>设置 XmlSchemas.Add(XmlSchema schema, Uri baseUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.AddXmlSchemas">
            <summary>设置 XmlSchemas.Add(XmlSchemas schemas) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.CompileValidationEventHandlerBoolean">
            <summary>设置 XmlSchemas.Compile(ValidationEventHandler handler, Boolean fullCompile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ContainsString">
            <summary>设置 XmlSchemas.Contains(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ContainsXmlSchema">
            <summary>设置 XmlSchemas.Contains(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.CopyToXmlSchemaArrayInt32">
            <summary>设置 XmlSchemas.CopyTo(XmlSchema[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.FindXmlQualifiedNameType">
            <summary>设置 XmlSchemas.Find(XmlQualifiedName name, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.FindXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemas.Find(XmlQualifiedName name, Type type, Boolean checkCache) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.FindXmlSchemaObjectIList">
            <summary>设置 XmlSchemas.Find(XmlSchemaObject o, IList originals) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.GetSchemasString">
            <summary>设置 XmlSchemas.GetSchemas(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.IndexOfXmlSchema">
            <summary>设置 XmlSchemas.IndexOf(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.InsertInt32XmlSchema">
            <summary>设置 XmlSchemas.Insert(Int32 index, XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.IsCompiledGet">
            <summary>设置 XmlSchemas.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.IsReferenceXmlSchemaObject">
            <summary>设置 XmlSchemas.IsReference(XmlSchemaObject type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ItemGetInt32">
            <summary>设置 XmlSchemas.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ItemGetString">
            <summary>设置 XmlSchemas.get_Item(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ItemSetInt32XmlSchema">
            <summary>设置 XmlSchemas.set_Item(Int32 index, XmlSchema value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.MergedSchemasGet">
            <summary>设置 XmlSchemas.get_MergedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.OnClear">
            <summary>设置 XmlSchemas.OnClear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.OnInsertInt32Object">
            <summary>设置 XmlSchemas.OnInsert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.OnRemoveInt32Object">
            <summary>设置 XmlSchemas.OnRemove(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemas.OnSet(Int32 index, Object oldValue, Object newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.ReferencesGet">
            <summary>设置 XmlSchemas.get_References() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.RemoveXmlSchema">
            <summary>设置 XmlSchemas.Remove(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.SchemaSetGet">
            <summary>设置 XmlSchemas.get_SchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.AllInstances.SystemCollectionsGenericIEnumerableSystemXmlSchemaXmlSchemaGetEnumerator">
            <summary>设置 XmlSchemas.System.Collections.Generic.IEnumerable&lt;System.Xml.Schema.XmlSchema&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSchemas.Bind(System.Collections.Generic.IEnumerable{System.Xml.Schema.XmlSchema})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.CompileValidationEventHandlerBoolean">
            <summary>设置 XmlSchemas.Compile(ValidationEventHandler handler, Boolean fullCompile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.Constructor">
            <summary>设置 XmlSchemas.XmlSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ContainsString">
            <summary>设置 XmlSchemas.Contains(String targetNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ContainsXmlSchema">
            <summary>设置 XmlSchemas.Contains(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.CopyToXmlSchemaArrayInt32">
            <summary>设置 XmlSchemas.CopyTo(XmlSchema[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.CreateValidationExceptionXmlSchemaExceptionString">
            <summary>设置 XmlSchemas.CreateValidationException(XmlSchemaException exception, String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.FindXmlQualifiedNameType">
            <summary>设置 XmlSchemas.Find(XmlQualifiedName name, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.FindXmlQualifiedNameTypeBoolean">
            <summary>设置 XmlSchemas.Find(XmlQualifiedName name, Type type, Boolean checkCache) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.FindXmlSchemaObjectIList">
            <summary>设置 XmlSchemas.Find(XmlSchemaObject o, IList originals) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.GetParentNameXmlSchemaObject">
            <summary>设置 XmlSchemas.GetParentName(XmlSchemaObject item) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.GetSchemasString">
            <summary>设置 XmlSchemas.GetSchemas(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.IgnoreCompileErrorsObjectValidationEventArgs">
            <summary>设置 XmlSchemas.IgnoreCompileErrors(Object sender, ValidationEventArgs args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.IndexOfXmlSchema">
            <summary>设置 XmlSchemas.IndexOf(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.InsertInt32XmlSchema">
            <summary>设置 XmlSchemas.Insert(Int32 index, XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.IsCompiledGet">
            <summary>设置 XmlSchemas.get_IsCompiled() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.IsDataSetXmlSchema">
            <summary>设置 XmlSchemas.IsDataSet(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.IsReferenceXmlSchemaObject">
            <summary>设置 XmlSchemas.IsReference(XmlSchemaObject type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ItemGetInt32">
            <summary>设置 XmlSchemas.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ItemGetString">
            <summary>设置 XmlSchemas.get_Item(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ItemSetInt32XmlSchema">
            <summary>设置 XmlSchemas.set_Item(Int32 index, XmlSchema value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.MergedSchemasGet">
            <summary>设置 XmlSchemas.get_MergedSchemas() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.OnClear">
            <summary>设置 XmlSchemas.OnClear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.OnInsertInt32Object">
            <summary>设置 XmlSchemas.OnInsert(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.OnRemoveInt32Object">
            <summary>设置 XmlSchemas.OnRemove(Int32 index, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemas.OnSet(Int32 index, Object oldValue, Object newValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.PreprocessXmlSchema">
            <summary>设置 XmlSchemas.Preprocess(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.ReferencesGet">
            <summary>设置 XmlSchemas.get_References() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.RemoveXmlSchema">
            <summary>设置 XmlSchemas.Remove(XmlSchema schema) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.SchemaSetGet">
            <summary>设置 XmlSchemas.get_SchemaSet() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.SystemCollectionsGenericIEnumerableSystemXmlSchemaXmlSchemaGetEnumerator">
            <summary>设置 XmlSchemas.System.Collections.Generic.IEnumerable&lt;System.Xml.Schema.XmlSchema&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.XmlSchemaGet">
            <summary>设置 XmlSchemas.get_XmlSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSchemas.XsdSchemaGet">
            <summary>设置 XmlSchemas.get_XsdSchema() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode">
            <summary>System.Xml.Serialization.XmlSerializationGeneratedCode 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.#ctor(System.Xml.Serialization.XmlSerializationGeneratedCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.AllInstances.Dispose">
            <summary>设置 XmlSerializationGeneratedCode.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.AllInstances.OnAssemblyResolveObjectResolveEventArgs">
            <summary>设置 XmlSerializationGeneratedCode.OnAssemblyResolve(Object sender, ResolveEventArgs args) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.Constructor">
            <summary>设置 XmlSerializationGeneratedCode.XmlSerializationGeneratedCode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.Dispose">
            <summary>设置 XmlSerializationGeneratedCode.Dispose() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationGeneratedCode.OnAssemblyResolveObjectResolveEventArgs">
            <summary>设置 XmlSerializationGeneratedCode.OnAssemblyResolve(Object sender, ResolveEventArgs args) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationReader">
            <summary>System.Xml.Serialization.XmlSerializationReader 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.#ctor(System.Xml.Serialization.XmlSerializationReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AddReadCallbackStringStringTypeXmlSerializationReadCallback">
            <summary>设置 XmlSerializationReader.AddReadCallback(String name, String ns, Type type, XmlSerializationReadCallback read) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AddTargetStringObject">
            <summary>设置 XmlSerializationReader.AddTarget(String id, Object o) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.AddReadCallbackStringStringTypeXmlSerializationReadCallback">
            <summary>设置 XmlSerializationReader.AddReadCallback(String name, String ns, Type type, XmlSerializationReadCallback read) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.AddTargetStringObject">
            <summary>设置 XmlSerializationReader.AddTarget(String id, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CheckReaderCountInt32RefInt32Ref">
            <summary>设置 XmlSerializationReader.CheckReaderCount(Int32&amp; whileIterations, Int32&amp; readerCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CollapseWhitespaceString">
            <summary>设置 XmlSerializationReader.CollapseWhitespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateAbstractTypeExceptionStringString">
            <summary>设置 XmlSerializationReader.CreateAbstractTypeException(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateBadDerivationExceptionStringStringStringStringStringString">
            <summary>设置 XmlSerializationReader.CreateBadDerivationException(String xsdDerived, String nsDerived, String xsdBase, String nsBase, String clrDerived, String clrBase) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateCtorHasSecurityExceptionString">
            <summary>设置 XmlSerializationReader.CreateCtorHasSecurityException(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateInaccessibleConstructorExceptionString">
            <summary>设置 XmlSerializationReader.CreateInaccessibleConstructorException(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateInvalidCastExceptionTypeObject">
            <summary>设置 XmlSerializationReader.CreateInvalidCastException(Type type, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateInvalidCastExceptionTypeObjectString">
            <summary>设置 XmlSerializationReader.CreateInvalidCastException(Type type, Object value, String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateMissingIXmlSerializableTypeStringStringString">
            <summary>设置 XmlSerializationReader.CreateMissingIXmlSerializableType(String name, String ns, String clrType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateReadOnlyCollectionExceptionString">
            <summary>设置 XmlSerializationReader.CreateReadOnlyCollectionException(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateUnknownConstantExceptionStringType">
            <summary>设置 XmlSerializationReader.CreateUnknownConstantException(String value, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateUnknownNodeException">
            <summary>设置 XmlSerializationReader.CreateUnknownNodeException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.CreateUnknownTypeExceptionXmlQualifiedName">
            <summary>设置 XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.DecodeNameGet">
            <summary>设置 XmlSerializationReader.get_DecodeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.DecodeNameSetBoolean">
            <summary>设置 XmlSerializationReader.set_DecodeName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.DocumentGet">
            <summary>设置 XmlSerializationReader.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.EnsureArrayIndexArrayInt32Type">
            <summary>设置 XmlSerializationReader.EnsureArrayIndex(Array a, Int32 index, Type elementType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.FixupArrayRefsObject">
            <summary>设置 XmlSerializationReader.FixupArrayRefs(Object fixup) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.GetArrayLengthStringString">
            <summary>设置 XmlSerializationReader.GetArrayLength(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.GetNullAttr">
            <summary>设置 XmlSerializationReader.GetNullAttr() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.GetTargetString">
            <summary>设置 XmlSerializationReader.GetTarget(String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.GetXsiType">
            <summary>设置 XmlSerializationReader.GetXsiType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.IsReturnValueGet">
            <summary>设置 XmlSerializationReader.get_IsReturnValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.IsReturnValueSetBoolean">
            <summary>设置 XmlSerializationReader.set_IsReturnValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.IsXmlnsAttributeString">
            <summary>设置 XmlSerializationReader.IsXmlnsAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ParseWsdlArrayTypeXmlAttribute">
            <summary>设置 XmlSerializationReader.ParseWsdlArrayType(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadElementQualifiedName">
            <summary>设置 XmlSerializationReader.ReadElementQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadEndElement">
            <summary>设置 XmlSerializationReader.ReadEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadNull">
            <summary>设置 XmlSerializationReader.ReadNull() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadNullableQualifiedName">
            <summary>设置 XmlSerializationReader.ReadNullableQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadNullableString">
            <summary>设置 XmlSerializationReader.ReadNullableString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferenceStringOut">
            <summary>设置 XmlSerializationReader.ReadReference(String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencedElement">
            <summary>设置 XmlSerializationReader.ReadReferencedElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencedElementStringString">
            <summary>设置 XmlSerializationReader.ReadReferencedElement(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencedElements">
            <summary>设置 XmlSerializationReader.ReadReferencedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencingElementStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencingElementStringStringBooleanStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String name, String ns, Boolean elementCanBeType, String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadReferencingElementStringStringStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String name, String ns, String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadSerializableIXmlSerializable">
            <summary>设置 XmlSerializationReader.ReadSerializable(IXmlSerializable serializable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadSerializableIXmlSerializableBoolean">
            <summary>设置 XmlSerializationReader.ReadSerializable(IXmlSerializable serializable, Boolean wrappedAny) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadStringString">
            <summary>设置 XmlSerializationReader.ReadString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadStringStringBoolean">
            <summary>设置 XmlSerializationReader.ReadString(String value, Boolean trim) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadTypedNullXmlQualifiedName">
            <summary>设置 XmlSerializationReader.ReadTypedNull(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadTypedPrimitiveXmlQualifiedName">
            <summary>设置 XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadXmlDocumentBoolean">
            <summary>设置 XmlSerializationReader.ReadXmlDocument(Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReadXmlNodeBoolean">
            <summary>设置 XmlSerializationReader.ReadXmlNode(Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReaderCountGet">
            <summary>设置 XmlSerializationReader.get_ReaderCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReaderGet">
            <summary>设置 XmlSerializationReader.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ReferencedObject">
            <summary>设置 XmlSerializationReader.Referenced(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ShrinkArrayArrayInt32TypeBoolean">
            <summary>设置 XmlSerializationReader.ShrinkArray(Array a, Int32 length, Type elementType, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ToByteArrayBase64Boolean">
            <summary>设置 XmlSerializationReader.ToByteArrayBase64(Boolean isNull) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ToByteArrayHexBoolean">
            <summary>设置 XmlSerializationReader.ToByteArrayHex(Boolean isNull) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ToXmlQualifiedNameString">
            <summary>设置 XmlSerializationReader.ToXmlQualifiedName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.ToXmlQualifiedNameStringBoolean">
            <summary>设置 XmlSerializationReader.ToXmlQualifiedName(String value, Boolean decodeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownAttributeObjectXmlAttribute">
            <summary>设置 XmlSerializationReader.UnknownAttribute(Object o, XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownAttributeObjectXmlAttributeString">
            <summary>设置 XmlSerializationReader.UnknownAttribute(Object o, XmlAttribute attr, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownElementObjectXmlElement">
            <summary>设置 XmlSerializationReader.UnknownElement(Object o, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownElementObjectXmlElementString">
            <summary>设置 XmlSerializationReader.UnknownElement(Object o, XmlElement elem, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownNodeObject">
            <summary>设置 XmlSerializationReader.UnknownNode(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnknownNodeObjectString">
            <summary>设置 XmlSerializationReader.UnknownNode(Object o, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.AllInstances.UnreferencedObjectStringObject">
            <summary>设置 XmlSerializationReader.UnreferencedObject(String id, Object o) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CheckReaderCountInt32RefInt32Ref">
            <summary>设置 XmlSerializationReader.CheckReaderCount(Int32&amp; whileIterations, Int32&amp; readerCount) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CollapseWhitespaceString">
            <summary>设置 XmlSerializationReader.CollapseWhitespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.Constructor">
            <summary>设置 XmlSerializationReader.XmlSerializationReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateAbstractTypeExceptionStringString">
            <summary>设置 XmlSerializationReader.CreateAbstractTypeException(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateBadDerivationExceptionStringStringStringStringStringString">
            <summary>设置 XmlSerializationReader.CreateBadDerivationException(String xsdDerived, String nsDerived, String xsdBase, String nsBase, String clrDerived, String clrBase) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateCtorHasSecurityExceptionString">
            <summary>设置 XmlSerializationReader.CreateCtorHasSecurityException(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateInaccessibleConstructorExceptionString">
            <summary>设置 XmlSerializationReader.CreateInaccessibleConstructorException(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateInvalidCastExceptionTypeObject">
            <summary>设置 XmlSerializationReader.CreateInvalidCastException(Type type, Object value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateInvalidCastExceptionTypeObjectString">
            <summary>设置 XmlSerializationReader.CreateInvalidCastException(Type type, Object value, String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateMissingIXmlSerializableTypeStringStringString">
            <summary>设置 XmlSerializationReader.CreateMissingIXmlSerializableType(String name, String ns, String clrType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateReadOnlyCollectionExceptionString">
            <summary>设置 XmlSerializationReader.CreateReadOnlyCollectionException(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateUnknownConstantExceptionStringType">
            <summary>设置 XmlSerializationReader.CreateUnknownConstantException(String value, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateUnknownNodeException">
            <summary>设置 XmlSerializationReader.CreateUnknownNodeException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.CreateUnknownTypeExceptionXmlQualifiedName">
            <summary>设置 XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.DecodeNameGet">
            <summary>设置 XmlSerializationReader.get_DecodeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.DecodeNameSetBoolean">
            <summary>设置 XmlSerializationReader.set_DecodeName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.DocumentGet">
            <summary>设置 XmlSerializationReader.get_Document() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.EnsureArrayIndexArrayInt32Type">
            <summary>设置 XmlSerializationReader.EnsureArrayIndex(Array a, Int32 index, Type elementType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.FixupArrayRefsObject">
            <summary>设置 XmlSerializationReader.FixupArrayRefs(Object fixup) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.GetArrayLengthStringString">
            <summary>设置 XmlSerializationReader.GetArrayLength(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.GetNullAttr">
            <summary>设置 XmlSerializationReader.GetNullAttr() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.GetTargetString">
            <summary>设置 XmlSerializationReader.GetTarget(String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.GetXsiType">
            <summary>设置 XmlSerializationReader.GetXsiType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.IsReturnValueGet">
            <summary>设置 XmlSerializationReader.get_IsReturnValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.IsReturnValueSetBoolean">
            <summary>设置 XmlSerializationReader.set_IsReturnValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.IsXmlnsAttributeString">
            <summary>设置 XmlSerializationReader.IsXmlnsAttribute(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ParseWsdlArrayTypeXmlAttribute">
            <summary>设置 XmlSerializationReader.ParseWsdlArrayType(XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadElementQualifiedName">
            <summary>设置 XmlSerializationReader.ReadElementQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadEndElement">
            <summary>设置 XmlSerializationReader.ReadEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadNull">
            <summary>设置 XmlSerializationReader.ReadNull() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadNullableQualifiedName">
            <summary>设置 XmlSerializationReader.ReadNullableQualifiedName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadNullableString">
            <summary>设置 XmlSerializationReader.ReadNullableString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferenceStringOut">
            <summary>设置 XmlSerializationReader.ReadReference(String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencedElement">
            <summary>设置 XmlSerializationReader.ReadReferencedElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencedElementStringString">
            <summary>设置 XmlSerializationReader.ReadReferencedElement(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencedElements">
            <summary>设置 XmlSerializationReader.ReadReferencedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencingElementStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencingElementStringStringBooleanStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String name, String ns, Boolean elementCanBeType, String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadReferencingElementStringStringStringOut">
            <summary>设置 XmlSerializationReader.ReadReferencingElement(String name, String ns, String&amp; fixupReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadSerializableIXmlSerializable">
            <summary>设置 XmlSerializationReader.ReadSerializable(IXmlSerializable serializable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadSerializableIXmlSerializableBoolean">
            <summary>设置 XmlSerializationReader.ReadSerializable(IXmlSerializable serializable, Boolean wrappedAny) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadStringString">
            <summary>设置 XmlSerializationReader.ReadString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadStringStringBoolean">
            <summary>设置 XmlSerializationReader.ReadString(String value, Boolean trim) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadTypedNullXmlQualifiedName">
            <summary>设置 XmlSerializationReader.ReadTypedNull(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadTypedPrimitiveXmlQualifiedName">
            <summary>设置 XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadXmlDocumentBoolean">
            <summary>设置 XmlSerializationReader.ReadXmlDocument(Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReadXmlNodeBoolean">
            <summary>设置 XmlSerializationReader.ReadXmlNode(Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReaderCountGet">
            <summary>设置 XmlSerializationReader.get_ReaderCount() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReaderGet">
            <summary>设置 XmlSerializationReader.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ReferencedObject">
            <summary>设置 XmlSerializationReader.Referenced(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ResolveDynamicAssemblyString">
            <summary>设置 XmlSerializationReader.ResolveDynamicAssembly(String assemblyFullName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ShrinkArrayArrayInt32TypeBoolean">
            <summary>设置 XmlSerializationReader.ShrinkArray(Array a, Int32 length, Type elementType, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.StaticConstructor">
            <summary>设置 XmlSerializationReader.XmlSerializationReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToByteArrayBase64Boolean">
            <summary>设置 XmlSerializationReader.ToByteArrayBase64(Boolean isNull) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToByteArrayBase64String">
            <summary>设置 XmlSerializationReader.ToByteArrayBase64(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToByteArrayHexBoolean">
            <summary>设置 XmlSerializationReader.ToByteArrayHex(Boolean isNull) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToByteArrayHexString">
            <summary>设置 XmlSerializationReader.ToByteArrayHex(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToCharString">
            <summary>设置 XmlSerializationReader.ToChar(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToDateString">
            <summary>设置 XmlSerializationReader.ToDate(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToDateTimeString">
            <summary>设置 XmlSerializationReader.ToDateTime(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToEnumStringHashtableString">
            <summary>设置 XmlSerializationReader.ToEnum(String value, Hashtable h, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToTimeString">
            <summary>设置 XmlSerializationReader.ToTime(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlNCNameString">
            <summary>设置 XmlSerializationReader.ToXmlNCName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlNameString">
            <summary>设置 XmlSerializationReader.ToXmlName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlNmTokenString">
            <summary>设置 XmlSerializationReader.ToXmlNmToken(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlNmTokensString">
            <summary>设置 XmlSerializationReader.ToXmlNmTokens(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlQualifiedNameString">
            <summary>设置 XmlSerializationReader.ToXmlQualifiedName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.ToXmlQualifiedNameStringBoolean">
            <summary>设置 XmlSerializationReader.ToXmlQualifiedName(String value, Boolean decodeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownAttributeObjectXmlAttribute">
            <summary>设置 XmlSerializationReader.UnknownAttribute(Object o, XmlAttribute attr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownAttributeObjectXmlAttributeString">
            <summary>设置 XmlSerializationReader.UnknownAttribute(Object o, XmlAttribute attr, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownElementObjectXmlElement">
            <summary>设置 XmlSerializationReader.UnknownElement(Object o, XmlElement elem) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownElementObjectXmlElementString">
            <summary>设置 XmlSerializationReader.UnknownElement(Object o, XmlElement elem, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownNodeObject">
            <summary>设置 XmlSerializationReader.UnknownNode(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnknownNodeObjectString">
            <summary>设置 XmlSerializationReader.UnknownNode(Object o, String qnames) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationReader.UnreferencedObjectStringObject">
            <summary>设置 XmlSerializationReader.UnreferencedObject(String id, Object o) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter">
            <summary>System.Xml.Serialization.XmlSerializationWriter 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.#ctor(System.Xml.Serialization.XmlSerializationWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AddWriteCallbackTypeStringStringXmlSerializationWriteCallback">
            <summary>设置 XmlSerializationWriter.AddWriteCallback(Type type, String typeName, String typeNs, XmlSerializationWriteCallback callback) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.AddWriteCallbackTypeStringStringXmlSerializationWriteCallback">
            <summary>设置 XmlSerializationWriter.AddWriteCallback(Type type, String typeName, String typeNs, XmlSerializationWriteCallback callback) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateChoiceIdentifierValueExceptionStringStringStringString">
            <summary>设置 XmlSerializationWriter.CreateChoiceIdentifierValueException(String value, String identifier, String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateInvalidAnyTypeExceptionObject">
            <summary>设置 XmlSerializationWriter.CreateInvalidAnyTypeException(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateInvalidAnyTypeExceptionType">
            <summary>设置 XmlSerializationWriter.CreateInvalidAnyTypeException(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateInvalidChoiceIdentifierValueExceptionStringString">
            <summary>设置 XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String type, String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateInvalidEnumValueExceptionObjectString">
            <summary>设置 XmlSerializationWriter.CreateInvalidEnumValueException(Object value, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateMismatchChoiceExceptionStringStringString">
            <summary>设置 XmlSerializationWriter.CreateMismatchChoiceException(String value, String elementName, String enumValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateUnknownAnyElementExceptionStringString">
            <summary>设置 XmlSerializationWriter.CreateUnknownAnyElementException(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateUnknownTypeExceptionObject">
            <summary>设置 XmlSerializationWriter.CreateUnknownTypeException(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.CreateUnknownTypeExceptionType">
            <summary>设置 XmlSerializationWriter.CreateUnknownTypeException(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.EscapeNameGet">
            <summary>设置 XmlSerializationWriter.get_EscapeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.EscapeNameSetBoolean">
            <summary>设置 XmlSerializationWriter.set_EscapeName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.FromXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName xmlQualifiedName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.FromXmlQualifiedNameXmlQualifiedNameBoolean">
            <summary>设置 XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName xmlQualifiedName, Boolean ignoreEmpty) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.NamespacesGet">
            <summary>设置 XmlSerializationWriter.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.NamespacesSetArrayList">
            <summary>设置 XmlSerializationWriter.set_Namespaces(ArrayList value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.TopLevelElement">
            <summary>设置 XmlSerializationWriter.TopLevelElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteAttributeStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteAttributeStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteAttributeStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteAttributeStringStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteAttributeStringStringStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementEncodedXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteElementEncoded(XmlNode node, String name, String ns, Boolean isNullable, Boolean any) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementLiteralXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteElementLiteral(XmlNode node, String name, String ns, Boolean isNullable, Boolean any) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementQualifiedNameStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, String ns, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementQualifiedNameStringStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, String ns, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementQualifiedNameStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementQualifiedNameStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringString">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringRawStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteElementStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteEmptyTagString">
            <summary>设置 XmlSerializationWriter.WriteEmptyTag(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteEmptyTagStringString">
            <summary>设置 XmlSerializationWriter.WriteEmptyTag(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteEndElement">
            <summary>设置 XmlSerializationWriter.WriteEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteEndElementObject">
            <summary>设置 XmlSerializationWriter.WriteEndElement(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteIdObject">
            <summary>设置 XmlSerializationWriter.WriteId(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNamespaceDeclarationsXmlSerializerNamespaces">
            <summary>设置 XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces xmlns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullTagEncodedString">
            <summary>设置 XmlSerializationWriter.WriteNullTagEncoded(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullTagEncodedStringString">
            <summary>设置 XmlSerializationWriter.WriteNullTagEncoded(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullTagLiteralString">
            <summary>设置 XmlSerializationWriter.WriteNullTagLiteral(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullTagLiteralStringString">
            <summary>设置 XmlSerializationWriter.WriteNullTagLiteral(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableQualifiedNameEncodedStringStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String name, String ns, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableQualifiedNameLiteralStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String name, String ns, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringEncodedRawStringStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncodedRaw(String name, String ns, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringEncodedRawStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncodedRaw(String name, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringEncodedStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncoded(String name, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringLiteralRawStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteralRaw(String name, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringLiteralRawStringStringString">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteralRaw(String name, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteNullableStringLiteralStringStringString">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteral(String name, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WritePotentiallyReferencingElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WritePotentiallyReferencingElementStringStringObjectType">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WritePotentiallyReferencingElementStringStringObjectTypeBoolean">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType, Boolean suppressReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WritePotentiallyReferencingElementStringStringObjectTypeBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType, Boolean suppressReference, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteReferencedElements">
            <summary>设置 XmlSerializationWriter.WriteReferencedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteReferencingElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WriteReferencingElement(String n, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteReferencingElementStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteReferencingElement(String n, String ns, Object o, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteRpcResultStringString">
            <summary>设置 XmlSerializationWriter.WriteRpcResult(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteSerializableIXmlSerializableStringStringBoolean">
            <summary>设置 XmlSerializationWriter.WriteSerializable(IXmlSerializable serializable, String name, String ns, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteSerializableIXmlSerializableStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteSerializable(IXmlSerializable serializable, String name, String ns, Boolean isNullable, Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartDocument">
            <summary>设置 XmlSerializationWriter.WriteStartDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementString">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementStringString">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementStringStringBoolean">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Boolean writePrefixed) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o, Boolean writePrefixed) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteStartElementStringStringObjectBooleanXmlSerializerNamespaces">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o, Boolean writePrefixed, XmlSerializerNamespaces xmlns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteTypedPrimitiveStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteTypedPrimitive(String name, String ns, Object o, Boolean xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteValueByteArray">
            <summary>设置 XmlSerializationWriter.WriteValue(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteValueString">
            <summary>设置 XmlSerializationWriter.WriteValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteXmlAttributeXmlNode">
            <summary>设置 XmlSerializationWriter.WriteXmlAttribute(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteXmlAttributeXmlNodeObject">
            <summary>设置 XmlSerializationWriter.WriteXmlAttribute(XmlNode node, Object container) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriteXsiTypeStringString">
            <summary>设置 XmlSerializationWriter.WriteXsiType(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriterGet">
            <summary>设置 XmlSerializationWriter.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.AllInstances.WriterSetXmlWriter">
            <summary>设置 XmlSerializationWriter.set_Writer(XmlWriter value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.Constructor">
            <summary>设置 XmlSerializationWriter.XmlSerializationWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateChoiceIdentifierValueExceptionStringStringStringString">
            <summary>设置 XmlSerializationWriter.CreateChoiceIdentifierValueException(String value, String identifier, String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateInvalidAnyTypeExceptionObject">
            <summary>设置 XmlSerializationWriter.CreateInvalidAnyTypeException(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateInvalidAnyTypeExceptionType">
            <summary>设置 XmlSerializationWriter.CreateInvalidAnyTypeException(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateInvalidChoiceIdentifierValueExceptionStringString">
            <summary>设置 XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String type, String identifier) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateInvalidEnumValueExceptionObjectString">
            <summary>设置 XmlSerializationWriter.CreateInvalidEnumValueException(Object value, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateMismatchChoiceExceptionStringStringString">
            <summary>设置 XmlSerializationWriter.CreateMismatchChoiceException(String value, String elementName, String enumValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateUnknownAnyElementExceptionStringString">
            <summary>设置 XmlSerializationWriter.CreateUnknownAnyElementException(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateUnknownTypeExceptionObject">
            <summary>设置 XmlSerializationWriter.CreateUnknownTypeException(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.CreateUnknownTypeExceptionType">
            <summary>设置 XmlSerializationWriter.CreateUnknownTypeException(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.EscapeNameGet">
            <summary>设置 XmlSerializationWriter.get_EscapeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.EscapeNameSetBoolean">
            <summary>设置 XmlSerializationWriter.set_EscapeName(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromByteArrayBase64ByteArray">
            <summary>设置 XmlSerializationWriter.FromByteArrayBase64(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromByteArrayHexByteArray">
            <summary>设置 XmlSerializationWriter.FromByteArrayHex(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromCharChar">
            <summary>设置 XmlSerializationWriter.FromChar(Char value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromDateDateTime">
            <summary>设置 XmlSerializationWriter.FromDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromDateTimeDateTime">
            <summary>设置 XmlSerializationWriter.FromDateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromEnumInt64StringArrayInt64Array">
            <summary>设置 XmlSerializationWriter.FromEnum(Int64 value, String[] values, Int64[] ids) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromEnumInt64StringArrayInt64ArrayString">
            <summary>设置 XmlSerializationWriter.FromEnum(Int64 value, String[] values, Int64[] ids, String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromTimeDateTime">
            <summary>设置 XmlSerializationWriter.FromTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlNCNameString">
            <summary>设置 XmlSerializationWriter.FromXmlNCName(String ncName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlNameString">
            <summary>设置 XmlSerializationWriter.FromXmlName(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlNmTokenString">
            <summary>设置 XmlSerializationWriter.FromXmlNmToken(String nmToken) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlNmTokensString">
            <summary>设置 XmlSerializationWriter.FromXmlNmTokens(String nmTokens) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName xmlQualifiedName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.FromXmlQualifiedNameXmlQualifiedNameBoolean">
            <summary>设置 XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName xmlQualifiedName, Boolean ignoreEmpty) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.GetPrimitiveTypeNameInternalType">
            <summary>设置 XmlSerializationWriter.GetPrimitiveTypeNameInternal(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.NamespacesGet">
            <summary>设置 XmlSerializationWriter.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.NamespacesSetArrayList">
            <summary>设置 XmlSerializationWriter.set_Namespaces(ArrayList value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.ResolveDynamicAssemblyString">
            <summary>设置 XmlSerializationWriter.ResolveDynamicAssembly(String assemblyFullName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.TopLevelElement">
            <summary>设置 XmlSerializationWriter.TopLevelElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteAttributeStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteAttributeStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteAttributeStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteAttributeStringStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteAttributeStringStringStringString">
            <summary>设置 XmlSerializationWriter.WriteAttribute(String prefix, String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementEncodedXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteElementEncoded(XmlNode node, String name, String ns, Boolean isNullable, Boolean any) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementLiteralXmlNodeStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteElementLiteral(XmlNode node, String name, String ns, Boolean isNullable, Boolean any) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementQualifiedNameStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, String ns, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementQualifiedNameStringStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, String ns, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementQualifiedNameStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementQualifiedNameStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementQualifiedName(String localName, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringString">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringRawStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementStringRaw(String localName, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringStringStringString">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteElementStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteElementString(String localName, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteEmptyTagString">
            <summary>设置 XmlSerializationWriter.WriteEmptyTag(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteEmptyTagStringString">
            <summary>设置 XmlSerializationWriter.WriteEmptyTag(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteEndElement">
            <summary>设置 XmlSerializationWriter.WriteEndElement() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteEndElementObject">
            <summary>设置 XmlSerializationWriter.WriteEndElement(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteIdObject">
            <summary>设置 XmlSerializationWriter.WriteId(Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNamespaceDeclarationsXmlSerializerNamespaces">
            <summary>设置 XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces xmlns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullTagEncodedString">
            <summary>设置 XmlSerializationWriter.WriteNullTagEncoded(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullTagEncodedStringString">
            <summary>设置 XmlSerializationWriter.WriteNullTagEncoded(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullTagLiteralString">
            <summary>设置 XmlSerializationWriter.WriteNullTagLiteral(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullTagLiteralStringString">
            <summary>设置 XmlSerializationWriter.WriteNullTagLiteral(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableQualifiedNameEncodedStringStringXmlQualifiedNameXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String name, String ns, XmlQualifiedName value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableQualifiedNameLiteralStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String name, String ns, XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringEncodedRawStringStringByteArrayXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncodedRaw(String name, String ns, Byte[] value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringEncodedRawStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncodedRaw(String name, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringEncodedStringStringStringXmlQualifiedName">
            <summary>设置 XmlSerializationWriter.WriteNullableStringEncoded(String name, String ns, String value, XmlQualifiedName xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringLiteralRawStringStringByteArray">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteralRaw(String name, String ns, Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringLiteralRawStringStringString">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteralRaw(String name, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteNullableStringLiteralStringStringString">
            <summary>设置 XmlSerializationWriter.WriteNullableStringLiteral(String name, String ns, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WritePotentiallyReferencingElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WritePotentiallyReferencingElementStringStringObjectType">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WritePotentiallyReferencingElementStringStringObjectTypeBoolean">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType, Boolean suppressReference) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WritePotentiallyReferencingElementStringStringObjectTypeBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WritePotentiallyReferencingElement(String n, String ns, Object o, Type ambientType, Boolean suppressReference, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteReferencedElements">
            <summary>设置 XmlSerializationWriter.WriteReferencedElements() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteReferencingElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WriteReferencingElement(String n, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteReferencingElementStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteReferencingElement(String n, String ns, Object o, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteRpcResultStringString">
            <summary>设置 XmlSerializationWriter.WriteRpcResult(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteSerializableIXmlSerializableStringStringBoolean">
            <summary>设置 XmlSerializationWriter.WriteSerializable(IXmlSerializable serializable, String name, String ns, Boolean isNullable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteSerializableIXmlSerializableStringStringBooleanBoolean">
            <summary>设置 XmlSerializationWriter.WriteSerializable(IXmlSerializable serializable, String name, String ns, Boolean isNullable, Boolean wrapped) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartDocument">
            <summary>设置 XmlSerializationWriter.WriteStartDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementString">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementStringString">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementStringStringBoolean">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Boolean writePrefixed) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementStringStringObject">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o, Boolean writePrefixed) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteStartElementStringStringObjectBooleanXmlSerializerNamespaces">
            <summary>设置 XmlSerializationWriter.WriteStartElement(String name, String ns, Object o, Boolean writePrefixed, XmlSerializerNamespaces xmlns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteTypedPrimitiveStringStringObjectBoolean">
            <summary>设置 XmlSerializationWriter.WriteTypedPrimitive(String name, String ns, Object o, Boolean xsiType) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteValueByteArray">
            <summary>设置 XmlSerializationWriter.WriteValue(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteValueString">
            <summary>设置 XmlSerializationWriter.WriteValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteXmlAttributeXmlNode">
            <summary>设置 XmlSerializationWriter.WriteXmlAttribute(XmlNode node) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteXmlAttributeXmlNodeObject">
            <summary>设置 XmlSerializationWriter.WriteXmlAttribute(XmlNode node, Object container) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriteXsiTypeStringString">
            <summary>设置 XmlSerializationWriter.WriteXsiType(String name, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriterGet">
            <summary>设置 XmlSerializationWriter.get_Writer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializationWriter.WriterSetXmlWriter">
            <summary>设置 XmlSerializationWriter.set_Writer(XmlWriter value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializer">
            <summary>System.Xml.Serialization.XmlSerializer 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializer.#ctor(System.Xml.Serialization.XmlSerializer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.CanDeserializeXmlReader">
            <summary>设置 XmlSerializer.CanDeserialize(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.CreateReader">
            <summary>设置 XmlSerializer.CreateReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.CreateWriter">
            <summary>设置 XmlSerializer.CreateWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeStream">
            <summary>设置 XmlSerializer.Deserialize(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeTextReader">
            <summary>设置 XmlSerializer.Deserialize(TextReader textReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeXmlReader">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeXmlReaderString">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeXmlReaderStringXmlDeserializationEvents">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeXmlReaderXmlDeserializationEvents">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, XmlDeserializationEvents events) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.DeserializeXmlSerializationReader">
            <summary>设置 XmlSerializer.Deserialize(XmlSerializationReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeObjectXmlSerializationWriter">
            <summary>设置 XmlSerializer.Serialize(Object o, XmlSerializationWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeStreamObject">
            <summary>设置 XmlSerializer.Serialize(Stream stream, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeStreamObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(Stream stream, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeTextWriterObject">
            <summary>设置 XmlSerializer.Serialize(TextWriter textWriter, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeTextWriterObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(TextWriter textWriter, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeXmlWriterObject">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeXmlWriterObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeXmlWriterObjectXmlSerializerNamespacesString">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.SerializeXmlWriterObjectXmlSerializerNamespacesStringString">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownAttributeAddXmlAttributeEventHandler">
            <summary>设置 XmlSerializer.add_UnknownAttribute(XmlAttributeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownAttributeRemoveXmlAttributeEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownAttribute(XmlAttributeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownElementAddXmlElementEventHandler">
            <summary>设置 XmlSerializer.add_UnknownElement(XmlElementEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownElementRemoveXmlElementEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownElement(XmlElementEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownNodeAddXmlNodeEventHandler">
            <summary>设置 XmlSerializer.add_UnknownNode(XmlNodeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnknownNodeRemoveXmlNodeEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownNode(XmlNodeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnreferencedObjectAddUnreferencedObjectEventHandler">
            <summary>设置 XmlSerializer.add_UnreferencedObject(UnreferencedObjectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.AllInstances.UnreferencedObjectRemoveUnreferencedObjectEventHandler">
            <summary>设置 XmlSerializer.remove_UnreferencedObject(UnreferencedObjectEventHandler value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.CanDeserializeXmlReader">
            <summary>设置 XmlSerializer.CanDeserialize(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.Constructor">
            <summary>设置 XmlSerializer.XmlSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorType">
            <summary>设置 XmlSerializer.XmlSerializer(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeString">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeTypeArray">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, Type[] extraTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeXmlAttributeOverrides">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, XmlAttributeOverrides overrides) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeXmlAttributeOverridesTypeArrayXmlRootAttributeString">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringString">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringStringEvidence">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location, Evidence evidence) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorTypeXmlRootAttribute">
            <summary>设置 XmlSerializer.XmlSerializer(Type type, XmlRootAttribute root) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.ConstructorXmlTypeMapping">
            <summary>设置 XmlSerializer.XmlSerializer(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.CreateReader">
            <summary>设置 XmlSerializer.CreateReader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.CreateWriter">
            <summary>设置 XmlSerializer.CreateWriter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeStream">
            <summary>设置 XmlSerializer.Deserialize(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeTextReader">
            <summary>设置 XmlSerializer.Deserialize(TextReader textReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeXmlReader">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeXmlReaderString">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeXmlReaderStringXmlDeserializationEvents">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, String encodingStyle, XmlDeserializationEvents events) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeXmlReaderXmlDeserializationEvents">
            <summary>设置 XmlSerializer.Deserialize(XmlReader xmlReader, XmlDeserializationEvents events) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.DeserializeXmlSerializationReader">
            <summary>设置 XmlSerializer.Deserialize(XmlSerializationReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.FromMappingsXmlMappingArray">
            <summary>设置 XmlSerializer.FromMappings(XmlMapping[] mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.FromMappingsXmlMappingArrayEvidence">
            <summary>设置 XmlSerializer.FromMappings(XmlMapping[] mappings, Evidence evidence) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.FromMappingsXmlMappingArrayType">
            <summary>设置 XmlSerializer.FromMappings(XmlMapping[] mappings, Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.FromTypesTypeArray">
            <summary>设置 XmlSerializer.FromTypes(Type[] types) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.GenerateSerializerTypeArrayXmlMappingArray">
            <summary>设置 XmlSerializer.GenerateSerializer(Type[] types, XmlMapping[] mappings) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.GenerateSerializerTypeArrayXmlMappingArrayCompilerParameters">
            <summary>设置 XmlSerializer.GenerateSerializer(Type[] types, XmlMapping[] mappings, CompilerParameters parameters) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.GetXmlSerializerAssemblyNameType">
            <summary>设置 XmlSerializer.GetXmlSerializerAssemblyName(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.GetXmlSerializerAssemblyNameTypeString">
            <summary>设置 XmlSerializer.GetXmlSerializerAssemblyName(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeObjectXmlSerializationWriter">
            <summary>设置 XmlSerializer.Serialize(Object o, XmlSerializationWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeStreamObject">
            <summary>设置 XmlSerializer.Serialize(Stream stream, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeStreamObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(Stream stream, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeTextWriterObject">
            <summary>设置 XmlSerializer.Serialize(TextWriter textWriter, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeTextWriterObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(TextWriter textWriter, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeXmlWriterObject">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeXmlWriterObjectXmlSerializerNamespaces">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeXmlWriterObjectXmlSerializerNamespacesString">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.SerializeXmlWriterObjectXmlSerializerNamespacesStringString">
            <summary>设置 XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.StaticConstructor">
            <summary>设置 XmlSerializer.XmlSerializer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownAttributeAddXmlAttributeEventHandler">
            <summary>设置 XmlSerializer.add_UnknownAttribute(XmlAttributeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownAttributeRemoveXmlAttributeEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownAttribute(XmlAttributeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownElementAddXmlElementEventHandler">
            <summary>设置 XmlSerializer.add_UnknownElement(XmlElementEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownElementRemoveXmlElementEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownElement(XmlElementEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownNodeAddXmlNodeEventHandler">
            <summary>设置 XmlSerializer.add_UnknownNode(XmlNodeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnknownNodeRemoveXmlNodeEventHandler">
            <summary>设置 XmlSerializer.remove_UnknownNode(XmlNodeEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnreferencedObjectAddUnreferencedObjectEventHandler">
            <summary>设置 XmlSerializer.add_UnreferencedObject(UnreferencedObjectEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializer.UnreferencedObjectRemoveUnreferencedObjectEventHandler">
            <summary>设置 XmlSerializer.remove_UnreferencedObject(UnreferencedObjectEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute">
            <summary>System.Xml.Serialization.XmlSerializerAssemblyAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.#ctor(System.Xml.Serialization.XmlSerializerAssemblyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AllInstances.AssemblyNameGet">
            <summary>设置 XmlSerializerAssemblyAttribute.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AllInstances.AssemblyNameSetString">
            <summary>设置 XmlSerializerAssemblyAttribute.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AllInstances.CodeBaseGet">
            <summary>设置 XmlSerializerAssemblyAttribute.get_CodeBase() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AllInstances.CodeBaseSetString">
            <summary>设置 XmlSerializerAssemblyAttribute.set_CodeBase(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AssemblyNameGet">
            <summary>设置 XmlSerializerAssemblyAttribute.get_AssemblyName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.AssemblyNameSetString">
            <summary>设置 XmlSerializerAssemblyAttribute.set_AssemblyName(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.CodeBaseGet">
            <summary>设置 XmlSerializerAssemblyAttribute.get_CodeBase() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.CodeBaseSetString">
            <summary>设置 XmlSerializerAssemblyAttribute.set_CodeBase(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.Constructor">
            <summary>设置 XmlSerializerAssemblyAttribute.XmlSerializerAssemblyAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.ConstructorString">
            <summary>设置 XmlSerializerAssemblyAttribute.XmlSerializerAssemblyAttribute(String assemblyName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerAssemblyAttribute.ConstructorStringString">
            <summary>设置 XmlSerializerAssemblyAttribute.XmlSerializerAssemblyAttribute(String assemblyName, String codeBase) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory">
            <summary>System.Xml.Serialization.XmlSerializerFactory 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.#ctor(System.Xml.Serialization.XmlSerializerFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerType">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeTypeArray">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, Type[] extraTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeXmlAttributeOverrides">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringStringEvidence">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location, Evidence evidence) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerTypeXmlRootAttribute">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlRootAttribute root) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.AllInstances.CreateSerializerXmlTypeMapping">
            <summary>设置 XmlSerializerFactory.CreateSerializer(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.Constructor">
            <summary>设置 XmlSerializerFactory.XmlSerializerFactory() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerType">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeTypeArray">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, Type[] extraTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeXmlAttributeOverrides">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringString">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeXmlAttributeOverridesTypeArrayXmlRootAttributeStringStringEvidence">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, String defaultNamespace, String location, Evidence evidence) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerTypeXmlRootAttribute">
            <summary>设置 XmlSerializerFactory.CreateSerializer(Type type, XmlRootAttribute root) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.CreateSerializerXmlTypeMapping">
            <summary>设置 XmlSerializerFactory.CreateSerializer(XmlTypeMapping xmlTypeMapping) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerFactory.StaticConstructor">
            <summary>设置 XmlSerializerFactory.XmlSerializerFactory() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation">
            <summary>System.Xml.Serialization.XmlSerializerImplementation 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.#ctor(System.Xml.Serialization.XmlSerializerImplementation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.CanSerializeType">
            <summary>设置 XmlSerializerImplementation.CanSerialize(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.GetSerializerType">
            <summary>设置 XmlSerializerImplementation.GetSerializer(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.ReadMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_ReadMethods() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.ReaderGet">
            <summary>设置 XmlSerializerImplementation.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.TypedSerializersGet">
            <summary>设置 XmlSerializerImplementation.get_TypedSerializers() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.WriteMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_WriteMethods() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.AllInstances.WriterGet">
            <summary>设置 XmlSerializerImplementation.get_Writer() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.CanSerializeType">
            <summary>设置 XmlSerializerImplementation.CanSerialize(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.Constructor">
            <summary>设置 XmlSerializerImplementation.XmlSerializerImplementation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.GetSerializerType">
            <summary>设置 XmlSerializerImplementation.GetSerializer(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.ReadMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_ReadMethods() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.ReaderGet">
            <summary>设置 XmlSerializerImplementation.get_Reader() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.TypedSerializersGet">
            <summary>设置 XmlSerializerImplementation.get_TypedSerializers() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.WriteMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_WriteMethods() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerImplementation.WriterGet">
            <summary>设置 XmlSerializerImplementation.get_Writer() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces">
            <summary>System.Xml.Serialization.XmlSerializerNamespaces 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AddInternalStringString">
            <summary>设置 XmlSerializerNamespaces.AddInternal(String prefix, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AddStringString">
            <summary>设置 XmlSerializerNamespaces.Add(String prefix, String ns) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.AddInternalStringString">
            <summary>设置 XmlSerializerNamespaces.AddInternal(String prefix, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.AddStringString">
            <summary>设置 XmlSerializerNamespaces.Add(String prefix, String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.CountGet">
            <summary>设置 XmlSerializerNamespaces.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.LookupPrefixString">
            <summary>设置 XmlSerializerNamespaces.LookupPrefix(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.NamespaceListGet">
            <summary>设置 XmlSerializerNamespaces.get_NamespaceList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.NamespacesGet">
            <summary>设置 XmlSerializerNamespaces.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.NamespacesSetHashtable">
            <summary>设置 XmlSerializerNamespaces.set_Namespaces(Hashtable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.AllInstances.ToArray">
            <summary>设置 XmlSerializerNamespaces.ToArray() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.Constructor">
            <summary>设置 XmlSerializerNamespaces.XmlSerializerNamespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.ConstructorXmlQualifiedNameArray">
            <summary>设置 XmlSerializerNamespaces.XmlSerializerNamespaces(XmlQualifiedName[] namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.ConstructorXmlSerializerNamespaces">
            <summary>设置 XmlSerializerNamespaces.XmlSerializerNamespaces(XmlSerializerNamespaces namespaces) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.CountGet">
            <summary>设置 XmlSerializerNamespaces.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.LookupPrefixString">
            <summary>设置 XmlSerializerNamespaces.LookupPrefix(String ns) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.NamespaceListGet">
            <summary>设置 XmlSerializerNamespaces.get_NamespaceList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.NamespacesGet">
            <summary>设置 XmlSerializerNamespaces.get_Namespaces() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.NamespacesSetHashtable">
            <summary>设置 XmlSerializerNamespaces.set_Namespaces(Hashtable value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerNamespaces.ToArray">
            <summary>设置 XmlSerializerNamespaces.ToArray() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute">
            <summary>System.Xml.Serialization.XmlSerializerVersionAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.#ctor(System.Xml.Serialization.XmlSerializerVersionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.ParentAssemblyIdGet">
            <summary>设置 XmlSerializerVersionAttribute.get_ParentAssemblyId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.ParentAssemblyIdSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_ParentAssemblyId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.TypeGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlSerializerVersionAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.VersionGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.AllInstances.VersionSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.Constructor">
            <summary>设置 XmlSerializerVersionAttribute.XmlSerializerVersionAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.ConstructorType">
            <summary>设置 XmlSerializerVersionAttribute.XmlSerializerVersionAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.NamespaceGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.NamespaceSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.ParentAssemblyIdGet">
            <summary>设置 XmlSerializerVersionAttribute.get_ParentAssemblyId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.ParentAssemblyIdSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_ParentAssemblyId(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.TypeGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.TypeSetType">
            <summary>设置 XmlSerializerVersionAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.VersionGet">
            <summary>设置 XmlSerializerVersionAttribute.get_Version() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlSerializerVersionAttribute.VersionSetString">
            <summary>设置 XmlSerializerVersionAttribute.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTextAttribute">
            <summary>System.Xml.Serialization.XmlTextAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.#ctor(System.Xml.Serialization.XmlTextAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.AllInstances.DataTypeGet">
            <summary>设置 XmlTextAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.AllInstances.DataTypeSetString">
            <summary>设置 XmlTextAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.AllInstances.TypeGet">
            <summary>设置 XmlTextAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.AllInstances.TypeSetType">
            <summary>设置 XmlTextAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.Constructor">
            <summary>设置 XmlTextAttribute.XmlTextAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.ConstructorType">
            <summary>设置 XmlTextAttribute.XmlTextAttribute(Type type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.DataTypeGet">
            <summary>设置 XmlTextAttribute.get_DataType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.DataTypeSetString">
            <summary>设置 XmlTextAttribute.set_DataType(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.TypeGet">
            <summary>设置 XmlTextAttribute.get_Type() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTextAttribute.TypeSetType">
            <summary>设置 XmlTextAttribute.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute">
            <summary>System.Xml.Serialization.XmlTypeAttribute 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.#ctor(System.Xml.Serialization.XmlTypeAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.AnonymousTypeGet">
            <summary>设置 XmlTypeAttribute.get_AnonymousType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.AnonymousTypeSetBoolean">
            <summary>设置 XmlTypeAttribute.set_AnonymousType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.IncludeInSchemaGet">
            <summary>设置 XmlTypeAttribute.get_IncludeInSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.IncludeInSchemaSetBoolean">
            <summary>设置 XmlTypeAttribute.set_IncludeInSchema(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.NamespaceGet">
            <summary>设置 XmlTypeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.NamespaceSetString">
            <summary>设置 XmlTypeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.TypeNameGet">
            <summary>设置 XmlTypeAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AllInstances.TypeNameSetString">
            <summary>设置 XmlTypeAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AnonymousTypeGet">
            <summary>设置 XmlTypeAttribute.get_AnonymousType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.AnonymousTypeSetBoolean">
            <summary>设置 XmlTypeAttribute.set_AnonymousType(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.Constructor">
            <summary>设置 XmlTypeAttribute.XmlTypeAttribute() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.ConstructorString">
            <summary>设置 XmlTypeAttribute.XmlTypeAttribute(String typeName) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.IncludeInSchemaGet">
            <summary>设置 XmlTypeAttribute.get_IncludeInSchema() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.IncludeInSchemaSetBoolean">
            <summary>设置 XmlTypeAttribute.set_IncludeInSchema(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.NamespaceGet">
            <summary>设置 XmlTypeAttribute.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.NamespaceSetString">
            <summary>设置 XmlTypeAttribute.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.TypeNameGet">
            <summary>设置 XmlTypeAttribute.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeAttribute.TypeNameSetString">
            <summary>设置 XmlTypeAttribute.set_TypeName(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTypeMapping">
            <summary>System.Xml.Serialization.XmlTypeMapping 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.#ctor(System.Xml.Serialization.XmlTypeMapping)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.AllInstances.TypeFullNameGet">
            <summary>设置 XmlTypeMapping.get_TypeFullName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.AllInstances.TypeNameGet">
            <summary>设置 XmlTypeMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.AllInstances.XsdTypeNameGet">
            <summary>设置 XmlTypeMapping.get_XsdTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.AllInstances.XsdTypeNamespaceGet">
            <summary>设置 XmlTypeMapping.get_XsdTypeNamespace() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.TypeFullNameGet">
            <summary>设置 XmlTypeMapping.get_TypeFullName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.TypeNameGet">
            <summary>设置 XmlTypeMapping.get_TypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.XsdTypeNameGet">
            <summary>设置 XmlTypeMapping.get_XsdTypeName() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.ShimXmlTypeMapping.XsdTypeNamespaceGet">
            <summary>设置 XmlTypeMapping.get_XsdTypeNamespace() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubCodeIdentifier">
            <summary>System.Xml.Serialization.CodeIdentifier 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubCodeIdentifier.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifier.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubCodeIdentifier.InitializeStub">
            <summary>初始化 type StubCodeIdentifier 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifier.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifier.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubCodeIdentifiers">
            <summary>System.Xml.Serialization.CodeIdentifiers 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubCodeIdentifiers.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubCodeIdentifiers.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifiers.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubCodeIdentifiers.InitializeStub">
            <summary>初始化 type StubCodeIdentifiers 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifiers.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubCodeIdentifiers.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubIXmlSerializable">
            <summary>System.Xml.Serialization.IXmlSerializable 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlSerializable.#ctor">
            <summary>初始化 type StubIXmlSerializable 的新实例</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlSerializable.GetSchema">
            <summary>设置 IXmlSerializable.GetSchema() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlSerializable.ReadXmlXmlReader">
            <summary>设置 IXmlSerializable.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlSerializable.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>设置 IXmlSerializable.GetSchema() 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlSerializable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>设置 IXmlSerializable.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlSerializable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>设置 IXmlSerializable.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlSerializable.WriteXmlXmlWriter">
            <summary>设置 IXmlSerializable.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubIXmlTextParser">
            <summary>System.Xml.Serialization.IXmlTextParser 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlTextParser.#ctor">
            <summary>初始化 type StubIXmlTextParser 的新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlTextParser.AttachBackingFieldToNormalized">
            <summary>附加委托以将 StubIXmlTextParser.Normalized 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubIXmlTextParser.AttachBackingFieldToWhitespaceHandling">
            <summary>附加委托以将 StubIXmlTextParser.WhitespaceHandling 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubIXmlTextParser.System#Xml#Serialization#IXmlTextParser#Normalized">
            <summary>设置 IXmlTextParser.get_Normalized() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlTextParser.NormalizedGet">
            <summary>设置 IXmlTextParser.get_Normalized() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlTextParser.NormalizedSetBoolean">
            <summary>设置 IXmlTextParser.set_Normalized(Boolean value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubIXmlTextParser.System#Xml#Serialization#IXmlTextParser#WhitespaceHandling">
            <summary>设置 IXmlTextParser.get_WhitespaceHandling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlTextParser.WhitespaceHandlingGet">
            <summary>设置 IXmlTextParser.get_WhitespaceHandling() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubIXmlTextParser.WhitespaceHandlingSetWhitespaceHandling">
            <summary>设置 IXmlTextParser.set_WhitespaceHandling(WhitespaceHandling value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubImportContext">
            <summary>System.Xml.Serialization.ImportContext 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubImportContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubImportContext.InitializeStub">
            <summary>初始化 type StubImportContext 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubImportContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubImportContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute">
            <summary>System.Xml.Serialization.SoapAttributeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.InitializeStub">
            <summary>初始化 type StubSoapAttributeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapAttributeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides">
            <summary>System.Xml.Serialization.SoapAttributeOverrides 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides.InitializeStub">
            <summary>初始化 type StubSoapAttributeOverrides 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributeOverrides.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapAttributes">
            <summary>System.Xml.Serialization.SoapAttributes 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapAttributes.InitializeStub">
            <summary>初始化 type StubSoapAttributes 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapAttributes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapElementAttribute">
            <summary>System.Xml.Serialization.SoapElementAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapElementAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapElementAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapElementAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.InitializeStub">
            <summary>初始化 type StubSoapElementAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapElementAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapElementAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapElementAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapElementAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapElementAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapElementAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapElementAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapEnumAttribute">
            <summary>System.Xml.Serialization.SoapEnumAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.InitializeStub">
            <summary>初始化 type StubSoapEnumAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapEnumAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute">
            <summary>System.Xml.Serialization.SoapIgnoreAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.InitializeStub">
            <summary>初始化 type StubSoapIgnoreAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIgnoreAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute">
            <summary>System.Xml.Serialization.SoapIncludeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.InitializeStub">
            <summary>初始化 type StubSoapIncludeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapIncludeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapReflectionImporter">
            <summary>System.Xml.Serialization.SoapReflectionImporter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.InitializeStub">
            <summary>初始化 type StubSoapReflectionImporter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapReflectionImporter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapSchemaExporter">
            <summary>System.Xml.Serialization.SoapSchemaExporter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaExporter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapSchemaExporter.InitializeStub">
            <summary>初始化 type StubSoapSchemaExporter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaExporter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaExporter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapSchemaMember">
            <summary>System.Xml.Serialization.SoapSchemaMember 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapSchemaMember.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaMember.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapSchemaMember.InitializeStub">
            <summary>初始化 type StubSoapSchemaMember 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaMember.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapSchemaMember.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubSoapTypeAttribute">
            <summary>System.Xml.Serialization.SoapTypeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.InitializeStub">
            <summary>初始化 type StubSoapTypeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubSoapTypeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs">
            <summary>System.Xml.Serialization.UnreferencedObjectEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs.InitializeStub">
            <summary>初始化 type StubUnreferencedObjectEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubUnreferencedObjectEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute">
            <summary>System.Xml.Serialization.XmlAnyAttributeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.InitializeStub">
            <summary>初始化 type StubXmlAnyAttributeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyAttributeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute">
            <summary>System.Xml.Serialization.XmlAnyElementAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.InitializeStub">
            <summary>初始化 type StubXmlAnyElementAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes">
            <summary>System.Xml.Serialization.XmlAnyElementAttributes 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.InitializeStub">
            <summary>初始化 type StubXmlAnyElementAttributes 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAnyElementAttributes.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlArrayAttribute">
            <summary>System.Xml.Serialization.XmlArrayAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.InitializeStub">
            <summary>初始化 type StubXmlArrayAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute">
            <summary>System.Xml.Serialization.XmlArrayItemAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.#ctor(System.String,System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.InitializeStub">
            <summary>初始化 type StubXmlArrayItemAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes">
            <summary>System.Xml.Serialization.XmlArrayItemAttributes 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.InitializeStub">
            <summary>初始化 type StubXmlArrayItemAttributes 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlArrayItemAttributes.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute">
            <summary>System.Xml.Serialization.XmlAttributeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.#ctor(System.String,System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.InitializeStub">
            <summary>初始化 type StubXmlAttributeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlAttributeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides">
            <summary>System.Xml.Serialization.XmlAttributeOverrides 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides.InitializeStub">
            <summary>初始化 type StubXmlAttributeOverrides 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributeOverrides.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlAttributes">
            <summary>System.Xml.Serialization.XmlAttributes 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlAttributes.InitializeStub">
            <summary>初始化 type StubXmlAttributes 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlAttributes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute">
            <summary>System.Xml.Serialization.XmlChoiceIdentifierAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.InitializeStub">
            <summary>初始化 type StubXmlChoiceIdentifierAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlChoiceIdentifierAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlElementAttribute">
            <summary>System.Xml.Serialization.XmlElementAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.#ctor(System.String,System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.InitializeStub">
            <summary>初始化 type StubXmlElementAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlElementAttributes">
            <summary>System.Xml.Serialization.XmlElementAttributes 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttributes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.InitializeStub">
            <summary>初始化 type StubXmlElementAttributes 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttributes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlElementAttributes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnClear">
            <summary>设置 CollectionBase.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnClear01">
            <summary>设置 CollectionBase.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnInsert(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnInsertInt32Object">
            <summary>设置 CollectionBase.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnRemove(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnRemoveInt32Object">
            <summary>设置 CollectionBase.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnSetInt32ObjectObject">
            <summary>设置 CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlElementAttributes.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlEnumAttribute">
            <summary>System.Xml.Serialization.XmlEnumAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.InitializeStub">
            <summary>初始化 type StubXmlEnumAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlEnumAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute">
            <summary>System.Xml.Serialization.XmlIgnoreAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.InitializeStub">
            <summary>初始化 type StubXmlIgnoreAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIgnoreAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute">
            <summary>System.Xml.Serialization.XmlIncludeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.InitializeStub">
            <summary>初始化 type StubXmlIncludeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlIncludeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute">
            <summary>System.Xml.Serialization.XmlNamespaceDeclarationsAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.InitializeStub">
            <summary>初始化 type StubXmlNamespaceDeclarationsAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlNamespaceDeclarationsAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlReflectionImporter">
            <summary>System.Xml.Serialization.XmlReflectionImporter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.InitializeStub">
            <summary>初始化 type StubXmlReflectionImporter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionImporter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlReflectionMember">
            <summary>System.Xml.Serialization.XmlReflectionMember 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionMember.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionMember.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlReflectionMember.InitializeStub">
            <summary>初始化 type StubXmlReflectionMember 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionMember.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlReflectionMember.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlRootAttribute">
            <summary>System.Xml.Serialization.XmlRootAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlRootAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlRootAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlRootAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.InitializeStub">
            <summary>初始化 type StubXmlRootAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlRootAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlRootAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlRootAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlRootAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlRootAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlRootAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlRootAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator">
            <summary>System.Xml.Serialization.XmlSchemaEnumerator 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator.InitializeStub">
            <summary>初始化 type StubXmlSchemaEnumerator 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaEnumerator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSchemaExporter">
            <summary>System.Xml.Serialization.XmlSchemaExporter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaExporter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemaExporter.InitializeStub">
            <summary>初始化 type StubXmlSchemaExporter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaExporter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemaExporter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSchemas">
            <summary>System.Xml.Serialization.XmlSchemas 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemas.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.InitializeStub">
            <summary>初始化 type StubXmlSchemas 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemas.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSchemas.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnClear">
            <summary>设置 XmlSchemas.OnClear() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnClear01">
            <summary>设置 XmlSchemas.OnClear() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnClearComplete">
            <summary>设置 CollectionBase.OnClearComplete() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnClearComplete01">
            <summary>设置 CollectionBase.OnClearComplete() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnInsert(System.Int32,System.Object)">
            <summary>设置 XmlSchemas.OnInsert(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnInsertComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnInsertCompleteInt32Object">
            <summary>设置 CollectionBase.OnInsertComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnInsertInt32Object">
            <summary>设置 XmlSchemas.OnInsert(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnRemove(System.Int32,System.Object)">
            <summary>设置 XmlSchemas.OnRemove(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnRemoveComplete(System.Int32,System.Object)">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnRemoveCompleteInt32Object">
            <summary>设置 CollectionBase.OnRemoveComplete(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnRemoveInt32Object">
            <summary>设置 XmlSchemas.OnRemove(Int32 index, Object value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
            <summary>设置 XmlSchemas.OnSet(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnSetCompleteInt32ObjectObject">
            <summary>设置 CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnSetInt32ObjectObject">
            <summary>设置 XmlSchemas.OnSet(Int32 index, Object oldValue, Object newValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSchemas.OnValidate(System.Object)">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSchemas.OnValidateObject">
            <summary>设置 CollectionBase.OnValidate(Object value) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode">
            <summary>System.Xml.Serialization.XmlSerializationGeneratedCode 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode.InitializeStub">
            <summary>初始化 type StubXmlSerializationGeneratedCode 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationGeneratedCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializationReader">
            <summary>System.Xml.Serialization.XmlSerializationReader 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InitCallbacks">
            <summary>设置 XmlSerializationReader.InitCallbacks() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InitCallbacks01">
            <summary>设置 XmlSerializationReader.InitCallbacks() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InitIDs">
            <summary>设置 XmlSerializationReader.InitIDs() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InitIDs01">
            <summary>设置 XmlSerializationReader.InitIDs() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InitializeStub">
            <summary>初始化 type StubXmlSerializationReader 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializationWriter">
            <summary>System.Xml.Serialization.XmlSerializationWriter 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.InitCallbacks">
            <summary>设置 XmlSerializationWriter.InitCallbacks() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.InitCallbacks01">
            <summary>设置 XmlSerializationWriter.InitCallbacks() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.InitializeStub">
            <summary>初始化 type StubXmlSerializationWriter 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializationWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializer">
            <summary>System.Xml.Serialization.XmlSerializer 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Type[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.CanDeserialize(System.Xml.XmlReader)">
            <summary>设置 XmlSerializer.CanDeserialize(XmlReader xmlReader) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializer.CanDeserializeXmlReader">
            <summary>设置 XmlSerializer.CanDeserialize(XmlReader xmlReader) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.CreateReader">
            <summary>设置 XmlSerializer.CreateReader() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializer.CreateReader01">
            <summary>设置 XmlSerializer.CreateReader() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.CreateWriter">
            <summary>设置 XmlSerializer.CreateWriter() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializer.CreateWriter01">
            <summary>设置 XmlSerializer.CreateWriter() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
            <summary>设置 XmlSerializer.Deserialize(XmlSerializationReader reader) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializer.DeserializeXmlSerializationReader">
            <summary>设置 XmlSerializer.Deserialize(XmlSerializationReader reader) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.InitializeStub">
            <summary>初始化 type StubXmlSerializer 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
            <summary>设置 XmlSerializer.Serialize(Object o, XmlSerializationWriter writer) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializer.SerializeObjectXmlSerializationWriter">
            <summary>设置 XmlSerializer.Serialize(Object o, XmlSerializationWriter writer) 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializerFactory">
            <summary>System.Xml.Serialization.XmlSerializerFactory 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerFactory.InitializeStub">
            <summary>初始化 type StubXmlSerializerFactory 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation">
            <summary>System.Xml.Serialization.XmlSerializerImplementation 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.CanSerialize(System.Type)">
            <summary>设置 XmlSerializerImplementation.CanSerialize(Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.CanSerializeType">
            <summary>设置 XmlSerializerImplementation.CanSerialize(Type type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.GetSerializer(System.Type)">
            <summary>设置 XmlSerializerImplementation.GetSerializer(Type type) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.GetSerializerType">
            <summary>设置 XmlSerializerImplementation.GetSerializer(Type type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.InitializeStub">
            <summary>初始化 type StubXmlSerializerImplementation 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.ReadMethods">
            <summary>设置 XmlSerializerImplementation.get_ReadMethods() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.ReadMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_ReadMethods() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.Reader">
            <summary>设置 XmlSerializerImplementation.get_Reader() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.ReaderGet">
            <summary>设置 XmlSerializerImplementation.get_Reader() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.TypedSerializers">
            <summary>设置 XmlSerializerImplementation.get_TypedSerializers() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.TypedSerializersGet">
            <summary>设置 XmlSerializerImplementation.get_TypedSerializers() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.WriteMethods">
            <summary>设置 XmlSerializerImplementation.get_WriteMethods() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.WriteMethodsGet">
            <summary>设置 XmlSerializerImplementation.get_WriteMethods() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.Writer">
            <summary>设置 XmlSerializerImplementation.get_Writer() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlSerializerImplementation.WriterGet">
            <summary>设置 XmlSerializerImplementation.get_Writer() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces">
            <summary>System.Xml.Serialization.XmlSerializerNamespaces 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.InitializeStub">
            <summary>初始化 type StubXmlSerializerNamespaces 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlSerializerNamespaces.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlTextAttribute">
            <summary>System.Xml.Serialization.XmlTextAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTextAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTextAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTextAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.InitializeStub">
            <summary>初始化 type StubXmlTextAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTextAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTextAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTextAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTextAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTextAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTextAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTextAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Serialization.Fakes.StubXmlTypeAttribute">
            <summary>System.Xml.Serialization.XmlTypeAttribute 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.InitializeStub">
            <summary>初始化 type StubXmlTypeAttribute 的新实例</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Serialization.Fakes.StubXmlTypeAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathDocument">
            <summary>System.Xml.XPath.XPathDocument 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathDocument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathDocument.#ctor(System.Xml.XPath.XPathDocument)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathDocument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.AllInstances.CreateNavigator">
            <summary>设置 XPathDocument.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.AllInstances.HasLineInfoGet">
            <summary>设置 XPathDocument.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.AllInstances.LoadFromReaderXmlReaderXmlSpace">
            <summary>设置 XPathDocument.LoadFromReader(XmlReader reader, XmlSpace space) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.AllInstances.NameTableGet">
            <summary>设置 XPathDocument.get_NameTable() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathDocument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathDocument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathDocument.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.Constructor">
            <summary>设置 XPathDocument.XPathDocument() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorStream">
            <summary>设置 XPathDocument.XPathDocument(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorString">
            <summary>设置 XPathDocument.XPathDocument(String uri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorStringXmlSpace">
            <summary>设置 XPathDocument.XPathDocument(String uri, XmlSpace space) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorTextReader">
            <summary>设置 XPathDocument.XPathDocument(TextReader textReader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorXmlNameTable">
            <summary>设置 XPathDocument.XPathDocument(XmlNameTable nameTable) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorXmlReader">
            <summary>设置 XPathDocument.XPathDocument(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.ConstructorXmlReaderXmlSpace">
            <summary>设置 XPathDocument.XPathDocument(XmlReader reader, XmlSpace space) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.CreateNavigator">
            <summary>设置 XPathDocument.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.HasLineInfoGet">
            <summary>设置 XPathDocument.get_HasLineInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.LoadFromReaderXmlReaderXmlSpace">
            <summary>设置 XPathDocument.LoadFromReader(XmlReader reader, XmlSpace space) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathDocument.NameTableGet">
            <summary>设置 XPathDocument.get_NameTable() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathException">
            <summary>System.Xml.XPath.XPathException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathException.#ctor(System.Xml.XPath.XPathException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XPathException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.AllInstances.MessageGet">
            <summary>设置 XPathException.get_Message() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.Constructor">
            <summary>设置 XPathException.XPathException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XPathException.XPathException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.ConstructorString">
            <summary>设置 XPathException.XPathException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.ConstructorStringException">
            <summary>设置 XPathException.XPathException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.CreateString">
            <summary>设置 XPathException.Create(String res) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.CreateStringString">
            <summary>设置 XPathException.Create(String res, String arg) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.CreateStringStringException">
            <summary>设置 XPathException.Create(String res, String arg, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.CreateStringStringString">
            <summary>设置 XPathException.Create(String res, String arg, String arg2) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XPathException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathException.MessageGet">
            <summary>设置 XPathException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathExpression">
            <summary>System.Xml.XPath.XPathExpression 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathExpression.#ctor(System.Xml.XPath.XPathExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathExpression.CompileString">
            <summary>设置 XPathExpression.Compile(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathExpression.CompileStringIXmlNamespaceResolver">
            <summary>设置 XPathExpression.Compile(String xpath, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathExpression.Constructor">
            <summary>设置 XPathExpression.XPathExpression() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathItem">
            <summary>System.Xml.XPath.XPathItem 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathItem.#ctor(System.Xml.XPath.XPathItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathItem.AllInstances.ValueAsType">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathItem.Constructor">
            <summary>设置 XPathItem.XPathItem() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathItem.ValueAsType">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathNavigator">
            <summary>System.Xml.XPath.XPathNavigator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.AppendChild">
            <summary>设置 XPathNavigator.AppendChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.AppendChildElementStringStringStringString">
            <summary>设置 XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.AppendChildString">
            <summary>设置 XPathNavigator.AppendChild(String newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.AppendChildXPathNavigator">
            <summary>设置 XPathNavigator.AppendChild(XPathNavigator newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.AppendChildXmlReader">
            <summary>设置 XPathNavigator.AppendChild(XmlReader newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.BuildSubtreeXmlReaderXmlWriter">
            <summary>设置 XPathNavigator.BuildSubtree(XmlReader reader, XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CanEditGet">
            <summary>设置 XPathNavigator.get_CanEdit() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CheckValidityXmlSchemaSetValidationEventHandler">
            <summary>设置 XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ComparePositionXPathNavigator">
            <summary>设置 XPathNavigator.ComparePosition(XPathNavigator nav) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CompileString">
            <summary>设置 XPathNavigator.Compile(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CreateAttributeStringStringStringString">
            <summary>设置 XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CreateAttributes">
            <summary>设置 XPathNavigator.CreateAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.CreateNavigator">
            <summary>设置 XPathNavigator.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.DeleteRangeXPathNavigator">
            <summary>设置 XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.DeleteSelf">
            <summary>设置 XPathNavigator.DeleteSelf() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.EvaluateString">
            <summary>设置 XPathNavigator.Evaluate(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.EvaluateStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.EvaluateXPathExpression">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.EvaluateXPathExpressionXPathNodeIterator">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.GetAttributeStringString">
            <summary>设置 XPathNavigator.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.GetNamespaceString">
            <summary>设置 XPathNavigator.GetNamespace(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.HasAttributesGet">
            <summary>设置 XPathNavigator.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.HasChildrenGet">
            <summary>设置 XPathNavigator.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.IndexInParentGet">
            <summary>设置 XPathNavigator.get_IndexInParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InnerXmlGet">
            <summary>设置 XPathNavigator.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InnerXmlSetString">
            <summary>设置 XPathNavigator.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertAfter">
            <summary>设置 XPathNavigator.InsertAfter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertAfterString">
            <summary>设置 XPathNavigator.InsertAfter(String newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertAfterXPathNavigator">
            <summary>设置 XPathNavigator.InsertAfter(XPathNavigator newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertAfterXmlReader">
            <summary>设置 XPathNavigator.InsertAfter(XmlReader newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertBefore">
            <summary>设置 XPathNavigator.InsertBefore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertBeforeString">
            <summary>设置 XPathNavigator.InsertBefore(String newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertBeforeXPathNavigator">
            <summary>设置 XPathNavigator.InsertBefore(XPathNavigator newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertBeforeXmlReader">
            <summary>设置 XPathNavigator.InsertBefore(XmlReader newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertElementAfterStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.InsertElementBeforeStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.IsDescendantXPathNavigator">
            <summary>设置 XPathNavigator.IsDescendant(XPathNavigator nav) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.IsNodeGet">
            <summary>设置 XPathNavigator.get_IsNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.LookupNamespaceString">
            <summary>设置 XPathNavigator.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.LookupPrefixString">
            <summary>设置 XPathNavigator.LookupPrefix(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MatchesString">
            <summary>设置 XPathNavigator.Matches(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MatchesXPathExpression">
            <summary>设置 XPathNavigator.Matches(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToAttributeStringString">
            <summary>设置 XPathNavigator.MoveToAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToChildStringString">
            <summary>设置 XPathNavigator.MoveToChild(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToChildXPathNodeType">
            <summary>设置 XPathNavigator.MoveToChild(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFirst">
            <summary>设置 XPathNavigator.MoveToFirst() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFirstNamespace">
            <summary>设置 XPathNavigator.MoveToFirstNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFollowingStringString">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFollowingStringStringXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFollowingXPathNodeType">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToFollowingXPathNodeTypeXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToNamespaceString">
            <summary>设置 XPathNavigator.MoveToNamespace(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToNextNamespace">
            <summary>设置 XPathNavigator.MoveToNextNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToNextStringString">
            <summary>设置 XPathNavigator.MoveToNext(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToNextXPathNodeType">
            <summary>设置 XPathNavigator.MoveToNext(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToNonDescendant">
            <summary>设置 XPathNavigator.MoveToNonDescendant() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToPreviousStringString">
            <summary>设置 XPathNavigator.MoveToPrevious(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToPreviousXPathNodeType">
            <summary>设置 XPathNavigator.MoveToPrevious(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.MoveToRoot">
            <summary>设置 XPathNavigator.MoveToRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.OuterXmlGet">
            <summary>设置 XPathNavigator.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.OuterXmlSetString">
            <summary>设置 XPathNavigator.set_OuterXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.PrependChild">
            <summary>设置 XPathNavigator.PrependChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.PrependChildElementStringStringStringString">
            <summary>设置 XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.PrependChildString">
            <summary>设置 XPathNavigator.PrependChild(String newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.PrependChildXPathNavigator">
            <summary>设置 XPathNavigator.PrependChild(XPathNavigator newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.PrependChildXmlReader">
            <summary>设置 XPathNavigator.PrependChild(XmlReader newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ReadSubtree">
            <summary>设置 XPathNavigator.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ReplaceRangeXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ReplaceSelfString">
            <summary>设置 XPathNavigator.ReplaceSelf(String newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ReplaceSelfXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceSelf(XPathNavigator newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ReplaceSelfXmlReader">
            <summary>设置 XPathNavigator.ReplaceSelf(XmlReader newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SchemaInfoGet">
            <summary>设置 XPathNavigator.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectAncestorsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectAncestorsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectChildrenStringString">
            <summary>设置 XPathNavigator.SelectChildren(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectChildrenXPathNodeType">
            <summary>设置 XPathNavigator.SelectChildren(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectDescendantsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectDescendantsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectSingleNodeString">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectSingleNodeStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectSingleNodeXPathExpression">
            <summary>设置 XPathNavigator.SelectSingleNode(XPathExpression expression) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectString">
            <summary>设置 XPathNavigator.Select(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SelectXPathExpression">
            <summary>设置 XPathNavigator.Select(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SetTypedValueObject">
            <summary>设置 XPathNavigator.SetTypedValue(Object typedValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SetValueString">
            <summary>设置 XPathNavigator.SetValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.SystemICloneableClone">
            <summary>设置 XPathNavigator.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ToString01">
            <summary>设置 XPathNavigator.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.TypedValueGet">
            <summary>设置 XPathNavigator.get_TypedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.UnderlyingObjectGet">
            <summary>设置 XPathNavigator.get_UnderlyingObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.UniqueIdGet">
            <summary>设置 XPathNavigator.get_UniqueId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsBooleanGet">
            <summary>设置 XPathNavigator.get_ValueAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsDateTimeGet">
            <summary>设置 XPathNavigator.get_ValueAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsDoubleGet">
            <summary>设置 XPathNavigator.get_ValueAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsIntGet">
            <summary>设置 XPathNavigator.get_ValueAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsLongGet">
            <summary>设置 XPathNavigator.get_ValueAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.ValueTypeGet">
            <summary>设置 XPathNavigator.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.WriteSubtreeXmlWriter">
            <summary>设置 XPathNavigator.WriteSubtree(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.XmlLangGet">
            <summary>设置 XPathNavigator.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AllInstances.XmlTypeGet">
            <summary>设置 XPathNavigator.get_XmlType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AppendChild">
            <summary>设置 XPathNavigator.AppendChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AppendChildElementStringStringStringString">
            <summary>设置 XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AppendChildString">
            <summary>设置 XPathNavigator.AppendChild(String newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AppendChildXPathNavigator">
            <summary>设置 XPathNavigator.AppendChild(XPathNavigator newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.AppendChildXmlReader">
            <summary>设置 XPathNavigator.AppendChild(XmlReader newChild) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.Bind(System.Xml.XPath.IXPathNavigable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNavigator.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.BuildSubtreeXmlReaderXmlWriter">
            <summary>设置 XPathNavigator.BuildSubtree(XmlReader reader, XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CanEditGet">
            <summary>设置 XPathNavigator.get_CanEdit() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CheckValidityXmlSchemaSetValidationEventHandler">
            <summary>设置 XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ComparePositionXPathNavigator">
            <summary>设置 XPathNavigator.ComparePosition(XPathNavigator nav) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CompileString">
            <summary>设置 XPathNavigator.Compile(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.Constructor">
            <summary>设置 XPathNavigator.XPathNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CreateAttributeStringStringStringString">
            <summary>设置 XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CreateAttributes">
            <summary>设置 XPathNavigator.CreateAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.CreateNavigator">
            <summary>设置 XPathNavigator.CreateNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.DeleteRangeXPathNavigator">
            <summary>设置 XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.DeleteSelf">
            <summary>设置 XPathNavigator.DeleteSelf() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.EvaluateString">
            <summary>设置 XPathNavigator.Evaluate(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.EvaluateStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.EvaluateXPathExpression">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.EvaluateXPathExpressionXPathNodeIterator">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetAttributeStringString">
            <summary>设置 XPathNavigator.GetAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetContentKindMaskXPathNodeType">
            <summary>设置 XPathNavigator.GetContentKindMask(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetKindMaskXPathNodeType">
            <summary>设置 XPathNavigator.GetKindMask(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetNamespaceString">
            <summary>设置 XPathNavigator.GetNamespace(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetNamespacesIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.GetNamespaces(IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.HasAttributesGet">
            <summary>设置 XPathNavigator.get_HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.HasChildrenGet">
            <summary>设置 XPathNavigator.get_HasChildren() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.IndexInParentGet">
            <summary>设置 XPathNavigator.get_IndexInParent() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InnerXmlGet">
            <summary>设置 XPathNavigator.get_InnerXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InnerXmlSetString">
            <summary>设置 XPathNavigator.set_InnerXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertAfter">
            <summary>设置 XPathNavigator.InsertAfter() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertAfterString">
            <summary>设置 XPathNavigator.InsertAfter(String newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertAfterXPathNavigator">
            <summary>设置 XPathNavigator.InsertAfter(XPathNavigator newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertAfterXmlReader">
            <summary>设置 XPathNavigator.InsertAfter(XmlReader newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertBefore">
            <summary>设置 XPathNavigator.InsertBefore() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertBeforeString">
            <summary>设置 XPathNavigator.InsertBefore(String newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertBeforeXPathNavigator">
            <summary>设置 XPathNavigator.InsertBefore(XPathNavigator newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertBeforeXmlReader">
            <summary>设置 XPathNavigator.InsertBefore(XmlReader newSibling) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertElementAfterStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.InsertElementBeforeStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.IsDescendantXPathNavigator">
            <summary>设置 XPathNavigator.IsDescendant(XPathNavigator nav) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.IsNodeGet">
            <summary>设置 XPathNavigator.get_IsNode() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.IsTextXPathNodeType">
            <summary>设置 XPathNavigator.IsText(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.LookupNamespaceString">
            <summary>设置 XPathNavigator.LookupNamespace(String prefix) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.LookupPrefixString">
            <summary>设置 XPathNavigator.LookupPrefix(String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MatchesString">
            <summary>设置 XPathNavigator.Matches(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MatchesXPathExpression">
            <summary>设置 XPathNavigator.Matches(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToAttributeStringString">
            <summary>设置 XPathNavigator.MoveToAttribute(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToChildStringString">
            <summary>设置 XPathNavigator.MoveToChild(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToChildXPathNodeType">
            <summary>设置 XPathNavigator.MoveToChild(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFirst">
            <summary>设置 XPathNavigator.MoveToFirst() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFirstNamespace">
            <summary>设置 XPathNavigator.MoveToFirstNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFollowingStringString">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFollowingStringStringXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFollowingXPathNodeType">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToFollowingXPathNodeTypeXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToNamespaceString">
            <summary>设置 XPathNavigator.MoveToNamespace(String name) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToNextNamespace">
            <summary>设置 XPathNavigator.MoveToNextNamespace() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToNextStringString">
            <summary>设置 XPathNavigator.MoveToNext(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToNextXPathNodeType">
            <summary>设置 XPathNavigator.MoveToNext(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToNonDescendant">
            <summary>设置 XPathNavigator.MoveToNonDescendant() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToPreviousStringString">
            <summary>设置 XPathNavigator.MoveToPrevious(String localName, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToPreviousXPathNodeType">
            <summary>设置 XPathNavigator.MoveToPrevious(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.MoveToRoot">
            <summary>设置 XPathNavigator.MoveToRoot() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.NavigatorComparerGet">
            <summary>设置 XPathNavigator.get_NavigatorComparer() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.OuterXmlGet">
            <summary>设置 XPathNavigator.get_OuterXml() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.OuterXmlSetString">
            <summary>设置 XPathNavigator.set_OuterXml(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.PrependChild">
            <summary>设置 XPathNavigator.PrependChild() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.PrependChildElementStringStringStringString">
            <summary>设置 XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.PrependChildString">
            <summary>设置 XPathNavigator.PrependChild(String newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.PrependChildXPathNavigator">
            <summary>设置 XPathNavigator.PrependChild(XPathNavigator newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.PrependChildXmlReader">
            <summary>设置 XPathNavigator.PrependChild(XmlReader newChild) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ReadSubtree">
            <summary>设置 XPathNavigator.ReadSubtree() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ReplaceRangeXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ReplaceSelfString">
            <summary>设置 XPathNavigator.ReplaceSelf(String newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ReplaceSelfXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceSelf(XPathNavigator newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ReplaceSelfXmlReader">
            <summary>设置 XPathNavigator.ReplaceSelf(XmlReader newNode) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SchemaInfoGet">
            <summary>设置 XPathNavigator.get_SchemaInfo() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectAncestorsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectAncestorsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectChildrenStringString">
            <summary>设置 XPathNavigator.SelectChildren(String name, String namespaceURI) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectChildrenXPathNodeType">
            <summary>设置 XPathNavigator.SelectChildren(XPathNodeType type) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectDescendantsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectDescendantsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectSingleNodeString">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectSingleNodeStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectSingleNodeXPathExpression">
            <summary>设置 XPathNavigator.SelectSingleNode(XPathExpression expression) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectString">
            <summary>设置 XPathNavigator.Select(String xpath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SelectXPathExpression">
            <summary>设置 XPathNavigator.Select(XPathExpression expr) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SetTypedValueObject">
            <summary>设置 XPathNavigator.SetTypedValue(Object typedValue) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SetValueString">
            <summary>设置 XPathNavigator.SetValue(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.StaticConstructor">
            <summary>设置 XPathNavigator.XPathNavigator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.SystemICloneableClone">
            <summary>设置 XPathNavigator.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ToString">
            <summary>设置 XPathNavigator.ToString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.TypedValueGet">
            <summary>设置 XPathNavigator.get_TypedValue() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.UnderlyingObjectGet">
            <summary>设置 XPathNavigator.get_UnderlyingObject() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.UniqueIdGet">
            <summary>设置 XPathNavigator.get_UniqueId() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsBooleanGet">
            <summary>设置 XPathNavigator.get_ValueAsBoolean() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsDateTimeGet">
            <summary>设置 XPathNavigator.get_ValueAsDateTime() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsDoubleGet">
            <summary>设置 XPathNavigator.get_ValueAsDouble() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsIntGet">
            <summary>设置 XPathNavigator.get_ValueAsInt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsLongGet">
            <summary>设置 XPathNavigator.get_ValueAsLong() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.ValueTypeGet">
            <summary>设置 XPathNavigator.get_ValueType() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.WriteSubtreeXmlWriter">
            <summary>设置 XPathNavigator.WriteSubtree(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.XmlLangGet">
            <summary>设置 XPathNavigator.get_XmlLang() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNavigator.XmlTypeGet">
            <summary>设置 XPathNavigator.get_XmlType() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathNodeIterator">
            <summary>System.Xml.XPath.XPathNodeIterator 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNodeIterator.#ctor(System.Xml.XPath.XPathNodeIterator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.ShimXPathNodeIterator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.AllInstances.CountGet">
            <summary>设置 XPathNodeIterator.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.AllInstances.GetEnumerator">
            <summary>设置 XPathNodeIterator.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.AllInstances.SystemICloneableClone">
            <summary>设置 XPathNodeIterator.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNodeIterator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNodeIterator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNodeIterator.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.ShimXPathNodeIterator.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.Constructor">
            <summary>设置 XPathNodeIterator.XPathNodeIterator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.CountGet">
            <summary>设置 XPathNodeIterator.get_Count() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.GetEnumerator">
            <summary>设置 XPathNodeIterator.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.ShimXPathNodeIterator.SystemICloneableClone">
            <summary>设置 XPathNodeIterator.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubIXPathNavigable">
            <summary>System.Xml.XPath.IXPathNavigable 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubIXPathNavigable.#ctor">
            <summary>初始化 type StubIXPathNavigable 的新实例</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubIXPathNavigable.CreateNavigator">
            <summary>设置 IXPathNavigable.CreateNavigator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubIXPathNavigable.System#Xml#XPath#IXPathNavigable#CreateNavigator">
            <summary>设置 IXPathNavigable.CreateNavigator() 的 存根</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubXPathDocument">
            <summary>System.Xml.XPath.XPathDocument 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.Xml.XmlReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.#ctor(System.String,System.Xml.XmlSpace)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathDocument.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathDocument.InitializeStub">
            <summary>初始化 type StubXPathDocument 的新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathDocument.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathDocument.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubXPathException">
            <summary>System.Xml.XPath.XPathException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXPathException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXPathException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XPathException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XPathException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.InitializeStub">
            <summary>初始化 type StubXPathException 的新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.Message">
            <summary>设置 XPathException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.MessageGet">
            <summary>设置 XPathException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubXPathItem">
            <summary>System.Xml.XPath.XPathItem 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathItem.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathItem.InitializeStub">
            <summary>初始化 type StubXPathItem 的新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.IsNode">
            <summary>设置 XPathItem.get_IsNode() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.IsNodeGet">
            <summary>设置 XPathItem.get_IsNode() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.TypedValue">
            <summary>设置 XPathItem.get_TypedValue() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.TypedValueGet">
            <summary>设置 XPathItem.get_TypedValue() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.Value">
            <summary>设置 XPathItem.get_Value() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathItem.ValueAs(System.Type)">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XPathItem.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 存根</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueAsBoolean">
            <summary>设置 XPathItem.get_ValueAsBoolean() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsBooleanGet">
            <summary>设置 XPathItem.get_ValueAsBoolean() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueAsDateTime">
            <summary>设置 XPathItem.get_ValueAsDateTime() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsDateTimeGet">
            <summary>设置 XPathItem.get_ValueAsDateTime() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueAsDouble">
            <summary>设置 XPathItem.get_ValueAsDouble() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsDoubleGet">
            <summary>设置 XPathItem.get_ValueAsDouble() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueAsInt">
            <summary>设置 XPathItem.get_ValueAsInt() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsIntGet">
            <summary>设置 XPathItem.get_ValueAsInt() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueAsLong">
            <summary>设置 XPathItem.get_ValueAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsLongGet">
            <summary>设置 XPathItem.get_ValueAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsType">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XPathItem.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueGet">
            <summary>设置 XPathItem.get_Value() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.ValueType">
            <summary>设置 XPathItem.get_ValueType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.ValueTypeGet">
            <summary>设置 XPathItem.get_ValueType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathItem.XmlType">
            <summary>设置 XPathItem.get_XmlType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathItem.XmlTypeGet">
            <summary>设置 XPathItem.get_XmlType() 的 stub</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubXPathNavigator">
            <summary>System.Xml.XPath.XPathNavigator 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.AppendChild(XPathNavigator newChild) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChild(System.String)">
            <summary>设置 XPathNavigator.AppendChild(String newChild) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChild">
            <summary>设置 XPathNavigator.AppendChild() 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChild(System.Xml.XmlReader)">
            <summary>设置 XPathNavigator.AppendChild(XmlReader newChild) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChild01">
            <summary>设置 XPathNavigator.AppendChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
            <summary>设置 XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChildElementStringStringStringString">
            <summary>设置 XPathNavigator.AppendChildElement(String prefix, String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChildString">
            <summary>设置 XPathNavigator.AppendChild(String newChild) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChildXPathNavigator">
            <summary>设置 XPathNavigator.AppendChild(XPathNavigator newChild) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.AppendChildXmlReader">
            <summary>设置 XPathNavigator.AppendChild(XmlReader newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AttachBackingFieldToInnerXml">
            <summary>附加委托以将 StubXPathNavigator.InnerXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.AttachBackingFieldToOuterXml">
            <summary>附加委托以将 StubXPathNavigator.OuterXml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.BaseURI">
            <summary>设置 XPathNavigator.get_BaseURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.BaseURIGet">
            <summary>设置 XPathNavigator.get_BaseURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.CanEdit">
            <summary>设置 XPathNavigator.get_CanEdit() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CanEditGet">
            <summary>设置 XPathNavigator.get_CanEdit() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
            <summary>设置 XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CheckValidityXmlSchemaSetValidationEventHandler">
            <summary>设置 XPathNavigator.CheckValidity(XmlSchemaSet schemas, ValidationEventHandler validationEventHandler) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Clone">
            <summary>设置 XPathNavigator.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.Clone01">
            <summary>设置 XPathNavigator.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.ComparePosition(XPathNavigator nav) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ComparePositionXPathNavigator">
            <summary>设置 XPathNavigator.ComparePosition(XPathNavigator nav) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Compile(System.String)">
            <summary>设置 XPathNavigator.Compile(String xpath) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CompileString">
            <summary>设置 XPathNavigator.Compile(String xpath) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
            <summary>设置 XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CreateAttributeStringStringStringString">
            <summary>设置 XPathNavigator.CreateAttribute(String prefix, String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.CreateAttributes">
            <summary>设置 XPathNavigator.CreateAttributes() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CreateAttributes01">
            <summary>设置 XPathNavigator.CreateAttributes() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.CreateNavigator">
            <summary>设置 XPathNavigator.CreateNavigator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.CreateNavigator01">
            <summary>设置 XPathNavigator.CreateNavigator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.DeleteRangeXPathNavigator">
            <summary>设置 XPathNavigator.DeleteRange(XPathNavigator lastSiblingToDelete) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.DeleteSelf">
            <summary>设置 XPathNavigator.DeleteSelf() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.DeleteSelf01">
            <summary>设置 XPathNavigator.DeleteSelf() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Evaluate(System.String)">
            <summary>设置 XPathNavigator.Evaluate(String xpath) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.EvaluateString">
            <summary>设置 XPathNavigator.Evaluate(String xpath) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.EvaluateStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Evaluate(String xpath, IXmlNamespaceResolver resolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.EvaluateXPathExpression">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.EvaluateXPathExpressionXPathNodeIterator">
            <summary>设置 XPathNavigator.Evaluate(XPathExpression expr, XPathNodeIterator context) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.GetAttribute(System.String,System.String)">
            <summary>设置 XPathNavigator.GetAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.GetAttributeStringString">
            <summary>设置 XPathNavigator.GetAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.GetNamespace(System.String)">
            <summary>设置 XPathNavigator.GetNamespace(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.GetNamespaceString">
            <summary>设置 XPathNavigator.GetNamespace(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>设置 XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XPathNavigator.GetNamespacesInScope(XmlNamespaceScope scope) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.HasAttributes">
            <summary>设置 XPathNavigator.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.HasAttributesGet">
            <summary>设置 XPathNavigator.get_HasAttributes() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.HasChildren">
            <summary>设置 XPathNavigator.get_HasChildren() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.HasChildrenGet">
            <summary>设置 XPathNavigator.get_HasChildren() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InitializeStub">
            <summary>初始化 type StubXPathNavigator 的新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.InnerXml">
            <summary>设置 XPathNavigator.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InnerXmlGet">
            <summary>设置 XPathNavigator.get_InnerXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InnerXmlSetString">
            <summary>设置 XPathNavigator.set_InnerXml(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfter(System.Xml.XmlReader)">
            <summary>设置 XPathNavigator.InsertAfter(XmlReader newSibling) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.InsertAfter(XPathNavigator newSibling) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfter(System.String)">
            <summary>设置 XPathNavigator.InsertAfter(String newSibling) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfter">
            <summary>设置 XPathNavigator.InsertAfter() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfter01">
            <summary>设置 XPathNavigator.InsertAfter() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfterString">
            <summary>设置 XPathNavigator.InsertAfter(String newSibling) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfterXPathNavigator">
            <summary>设置 XPathNavigator.InsertAfter(XPathNavigator newSibling) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertAfterXmlReader">
            <summary>设置 XPathNavigator.InsertAfter(XmlReader newSibling) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBefore(System.Xml.XmlReader)">
            <summary>设置 XPathNavigator.InsertBefore(XmlReader newSibling) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.InsertBefore(XPathNavigator newSibling) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBefore">
            <summary>设置 XPathNavigator.InsertBefore() 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBefore(System.String)">
            <summary>设置 XPathNavigator.InsertBefore(String newSibling) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBefore01">
            <summary>设置 XPathNavigator.InsertBefore() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBeforeString">
            <summary>设置 XPathNavigator.InsertBefore(String newSibling) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBeforeXPathNavigator">
            <summary>设置 XPathNavigator.InsertBefore(XPathNavigator newSibling) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertBeforeXmlReader">
            <summary>设置 XPathNavigator.InsertBefore(XmlReader newSibling) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
            <summary>设置 XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertElementAfterStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementAfter(String prefix, String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
            <summary>设置 XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.InsertElementBeforeStringStringStringString">
            <summary>设置 XPathNavigator.InsertElementBefore(String prefix, String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.IsDescendant(XPathNavigator nav) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.IsDescendantXPathNavigator">
            <summary>设置 XPathNavigator.IsDescendant(XPathNavigator nav) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.IsEmptyElement">
            <summary>设置 XPathNavigator.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.IsEmptyElementGet">
            <summary>设置 XPathNavigator.get_IsEmptyElement() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.IsSamePosition(XPathNavigator other) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.IsSamePositionXPathNavigator">
            <summary>设置 XPathNavigator.IsSamePosition(XPathNavigator other) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.LocalName">
            <summary>设置 XPathNavigator.get_LocalName() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.LocalNameGet">
            <summary>设置 XPathNavigator.get_LocalName() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.LookupNamespace(System.String)">
            <summary>设置 XPathNavigator.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.LookupNamespaceString">
            <summary>设置 XPathNavigator.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.LookupPrefix(System.String)">
            <summary>设置 XPathNavigator.LookupPrefix(String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.LookupPrefixString">
            <summary>设置 XPathNavigator.LookupPrefix(String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
            <summary>设置 XPathNavigator.Matches(XPathExpression expr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Matches(System.String)">
            <summary>设置 XPathNavigator.Matches(String xpath) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MatchesString">
            <summary>设置 XPathNavigator.Matches(String xpath) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MatchesXPathExpression">
            <summary>设置 XPathNavigator.Matches(XPathExpression expr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.MoveTo(XPathNavigator other) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToAttribute(System.String,System.String)">
            <summary>设置 XPathNavigator.MoveToAttribute(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToAttributeStringString">
            <summary>设置 XPathNavigator.MoveToAttribute(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
            <summary>设置 XPathNavigator.MoveToChild(XPathNodeType type) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToChild(System.String,System.String)">
            <summary>设置 XPathNavigator.MoveToChild(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToChildStringString">
            <summary>设置 XPathNavigator.MoveToChild(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToChildXPathNodeType">
            <summary>设置 XPathNavigator.MoveToChild(XPathNodeType type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirst">
            <summary>设置 XPathNavigator.MoveToFirst() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirst01">
            <summary>设置 XPathNavigator.MoveToFirst() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstAttribute">
            <summary>设置 XPathNavigator.MoveToFirstAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstAttribute01">
            <summary>设置 XPathNavigator.MoveToFirstAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstChild">
            <summary>设置 XPathNavigator.MoveToFirstChild() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstChild01">
            <summary>设置 XPathNavigator.MoveToFirstChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>设置 XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope namespaceScope) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFirstNamespaceXPathNamespaceScope">
            <summary>设置 XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope namespaceScope) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowing(System.String,System.String)">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowingStringString">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowingStringStringXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(String localName, String namespaceURI, XPathNavigator end) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowingXPathNodeType">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToFollowingXPathNodeTypeXPathNavigator">
            <summary>设置 XPathNavigator.MoveToFollowing(XPathNodeType type, XPathNavigator end) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToId(System.String)">
            <summary>设置 XPathNavigator.MoveToId(String id) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToIdString">
            <summary>设置 XPathNavigator.MoveToId(String id) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNamespace(System.String)">
            <summary>设置 XPathNavigator.MoveToNamespace(String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNamespaceString">
            <summary>设置 XPathNavigator.MoveToNamespace(String name) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNext">
            <summary>设置 XPathNavigator.MoveToNext() 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
            <summary>设置 XPathNavigator.MoveToNext(XPathNodeType type) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNext(System.String,System.String)">
            <summary>设置 XPathNavigator.MoveToNext(String localName, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNext01">
            <summary>设置 XPathNavigator.MoveToNext() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextAttribute">
            <summary>设置 XPathNavigator.MoveToNextAttribute() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextAttribute01">
            <summary>设置 XPathNavigator.MoveToNextAttribute() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>设置 XPathNavigator.MoveToNextNamespace(XPathNamespaceScope namespaceScope) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextNamespaceXPathNamespaceScope">
            <summary>设置 XPathNavigator.MoveToNextNamespace(XPathNamespaceScope namespaceScope) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextStringString">
            <summary>设置 XPathNavigator.MoveToNext(String localName, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToNextXPathNodeType">
            <summary>设置 XPathNavigator.MoveToNext(XPathNodeType type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToParent">
            <summary>设置 XPathNavigator.MoveToParent() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToParent01">
            <summary>设置 XPathNavigator.MoveToParent() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToPrevious">
            <summary>设置 XPathNavigator.MoveToPrevious() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToPrevious01">
            <summary>设置 XPathNavigator.MoveToPrevious() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToRoot">
            <summary>设置 XPathNavigator.MoveToRoot() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToRoot01">
            <summary>设置 XPathNavigator.MoveToRoot() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.MoveToXPathNavigator">
            <summary>设置 XPathNavigator.MoveTo(XPathNavigator other) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.Name">
            <summary>设置 XPathNavigator.get_Name() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.NameGet">
            <summary>设置 XPathNavigator.get_Name() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.NameTable">
            <summary>设置 XPathNavigator.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.NameTableGet">
            <summary>设置 XPathNavigator.get_NameTable() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.NamespaceURI">
            <summary>设置 XPathNavigator.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.NamespaceURIGet">
            <summary>设置 XPathNavigator.get_NamespaceURI() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.NodeType">
            <summary>设置 XPathNavigator.get_NodeType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.NodeTypeGet">
            <summary>设置 XPathNavigator.get_NodeType() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.OuterXml">
            <summary>设置 XPathNavigator.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.OuterXmlGet">
            <summary>设置 XPathNavigator.get_OuterXml() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.OuterXmlSetString">
            <summary>设置 XPathNavigator.set_OuterXml(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.Prefix">
            <summary>设置 XPathNavigator.get_Prefix() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrefixGet">
            <summary>设置 XPathNavigator.get_Prefix() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChild(System.Xml.XmlReader)">
            <summary>设置 XPathNavigator.PrependChild(XmlReader newChild) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.PrependChild(XPathNavigator newChild) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChild(System.String)">
            <summary>设置 XPathNavigator.PrependChild(String newChild) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChild">
            <summary>设置 XPathNavigator.PrependChild() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChild01">
            <summary>设置 XPathNavigator.PrependChild() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
            <summary>设置 XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChildElementStringStringStringString">
            <summary>设置 XPathNavigator.PrependChildElement(String prefix, String localName, String namespaceURI, String value) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChildString">
            <summary>设置 XPathNavigator.PrependChild(String newChild) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChildXPathNavigator">
            <summary>设置 XPathNavigator.PrependChild(XPathNavigator newChild) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.PrependChildXmlReader">
            <summary>设置 XPathNavigator.PrependChild(XmlReader newChild) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ReadSubtree">
            <summary>设置 XPathNavigator.ReadSubtree() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ReadSubtree01">
            <summary>设置 XPathNavigator.ReadSubtree() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceRangeXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceRange(XPathNavigator lastSiblingToReplace) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
            <summary>设置 XPathNavigator.ReplaceSelf(XmlReader newNode) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XPathNavigator.ReplaceSelf(XPathNavigator newNode) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelf(System.String)">
            <summary>设置 XPathNavigator.ReplaceSelf(String newNode) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelfString">
            <summary>设置 XPathNavigator.ReplaceSelf(String newNode) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelfXPathNavigator">
            <summary>设置 XPathNavigator.ReplaceSelf(XPathNavigator newNode) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ReplaceSelfXmlReader">
            <summary>设置 XPathNavigator.ReplaceSelf(XmlReader newNode) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.SchemaInfo">
            <summary>设置 XPathNavigator.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SchemaInfoGet">
            <summary>设置 XPathNavigator.get_SchemaInfo() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Select(System.Xml.XPath.XPathExpression)">
            <summary>设置 XPathNavigator.Select(XPathExpression expr) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Select(System.String)">
            <summary>设置 XPathNavigator.Select(String xpath) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
            <summary>设置 XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
            <summary>设置 XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectAncestorsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(String name, String namespaceURI, Boolean matchSelf) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectAncestorsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectAncestors(XPathNodeType type, Boolean matchSelf) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
            <summary>设置 XPathNavigator.SelectChildren(XPathNodeType type) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectChildren(System.String,System.String)">
            <summary>设置 XPathNavigator.SelectChildren(String name, String namespaceURI) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectChildrenStringString">
            <summary>设置 XPathNavigator.SelectChildren(String name, String namespaceURI) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectChildrenXPathNodeType">
            <summary>设置 XPathNavigator.SelectChildren(XPathNodeType type) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
            <summary>设置 XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
            <summary>设置 XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectDescendantsStringStringBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(String name, String namespaceURI, Boolean matchSelf) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectDescendantsXPathNodeTypeBoolean">
            <summary>设置 XPathNavigator.SelectDescendants(XPathNodeType type, Boolean matchSelf) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
            <summary>设置 XPathNavigator.SelectSingleNode(XPathExpression expression) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNode(System.String)">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNodeString">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNodeStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.SelectSingleNode(String xpath, IXmlNamespaceResolver resolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectSingleNodeXPathExpression">
            <summary>设置 XPathNavigator.SelectSingleNode(XPathExpression expression) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectString">
            <summary>设置 XPathNavigator.Select(String xpath) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectStringIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.Select(String xpath, IXmlNamespaceResolver resolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SelectXPathExpression">
            <summary>设置 XPathNavigator.Select(XPathExpression expr) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SetTypedValue(System.Object)">
            <summary>设置 XPathNavigator.SetTypedValue(Object typedValue) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SetTypedValueObject">
            <summary>设置 XPathNavigator.SetTypedValue(Object typedValue) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.SetValue(System.String)">
            <summary>设置 XPathNavigator.SetValue(String value) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.SetValueString">
            <summary>设置 XPathNavigator.SetValue(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ToString">
            <summary>设置 XPathNavigator.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ToString01">
            <summary>设置 XPathNavigator.ToString() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.TypedValue">
            <summary>设置 XPathNavigator.get_TypedValue() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.TypedValueGet">
            <summary>设置 XPathNavigator.get_TypedValue() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.UnderlyingObject">
            <summary>设置 XPathNavigator.get_UnderlyingObject() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.UnderlyingObjectGet">
            <summary>设置 XPathNavigator.get_UnderlyingObject() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.Value">
            <summary>设置 XPathItem.get_Value() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAs(System.Type)">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 存根</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>设置 XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 存根</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsBoolean">
            <summary>设置 XPathNavigator.get_ValueAsBoolean() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsBooleanGet">
            <summary>设置 XPathNavigator.get_ValueAsBoolean() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsDateTime">
            <summary>设置 XPathNavigator.get_ValueAsDateTime() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsDateTimeGet">
            <summary>设置 XPathNavigator.get_ValueAsDateTime() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsDouble">
            <summary>设置 XPathNavigator.get_ValueAsDouble() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsDoubleGet">
            <summary>设置 XPathNavigator.get_ValueAsDouble() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsInt">
            <summary>设置 XPathNavigator.get_ValueAsInt() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsIntGet">
            <summary>设置 XPathNavigator.get_ValueAsInt() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsLong">
            <summary>设置 XPathNavigator.get_ValueAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsLongGet">
            <summary>设置 XPathNavigator.get_ValueAsLong() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsType">
            <summary>设置 XPathItem.ValueAs(Type returnType) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueAsTypeIXmlNamespaceResolver">
            <summary>设置 XPathNavigator.ValueAs(Type returnType, IXmlNamespaceResolver nsResolver) 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueGet">
            <summary>设置 XPathItem.get_Value() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.ValueType">
            <summary>设置 XPathNavigator.get_ValueType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.ValueTypeGet">
            <summary>设置 XPathNavigator.get_ValueType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
            <summary>设置 XPathNavigator.WriteSubtree(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.WriteSubtreeXmlWriter">
            <summary>设置 XPathNavigator.WriteSubtree(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.XmlLang">
            <summary>设置 XPathNavigator.get_XmlLang() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.XmlLangGet">
            <summary>设置 XPathNavigator.get_XmlLang() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNavigator.XmlType">
            <summary>设置 XPathNavigator.get_XmlType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNavigator.XmlTypeGet">
            <summary>设置 XPathNavigator.get_XmlType() 的 stub</summary>
        </member>
        <member name="T:System.Xml.XPath.Fakes.StubXPathNodeIterator">
            <summary>System.Xml.XPath.XPathNodeIterator 的存根类型</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNodeIterator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNodeIterator.Clone">
            <summary>设置 XPathNodeIterator.Clone() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.Clone01">
            <summary>设置 XPathNodeIterator.Clone() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.Count">
            <summary>设置 XPathNodeIterator.get_Count() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.CountGet">
            <summary>设置 XPathNodeIterator.get_Count() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.Current">
            <summary>设置 XPathNodeIterator.get_Current() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.CurrentGet">
            <summary>设置 XPathNodeIterator.get_Current() 的 stub</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.CurrentPosition">
            <summary>设置 XPathNodeIterator.get_CurrentPosition() 的 stub</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.CurrentPositionGet">
            <summary>设置 XPathNodeIterator.get_CurrentPosition() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNodeIterator.GetEnumerator">
            <summary>设置 XPathNodeIterator.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.GetEnumerator01">
            <summary>设置 XPathNodeIterator.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNodeIterator.InitializeStub">
            <summary>初始化 type StubXPathNodeIterator 的新实例</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.XPath.Fakes.StubXPathNodeIterator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.XPath.Fakes.StubXPathNodeIterator.MoveNext">
            <summary>设置 XPathNodeIterator.MoveNext() 的 存根</summary>
        </member>
        <member name="F:System.Xml.XPath.Fakes.StubXPathNodeIterator.MoveNext01">
            <summary>设置 XPathNodeIterator.MoveNext() 的 stub</summary>
        </member>
        <member name="T:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection">
            <summary>System.Xml.XmlConfiguration.XmlReaderSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.#ctor(System.Xml.XmlConfiguration.XmlReaderSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.AllInstances.ProhibitDefaultResolverStringGet">
            <summary>设置 XmlReaderSection.get_ProhibitDefaultResolverString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.AllInstances.ProhibitDefaultResolverStringSetString">
            <summary>设置 XmlReaderSection.set_ProhibitDefaultResolverString(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.Constructor">
            <summary>设置 XmlReaderSection.XmlReaderSection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.CreateDefaultResolver">
            <summary>设置 XmlReaderSection.CreateDefaultResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.ProhibitDefaultResolverStringGet">
            <summary>设置 XmlReaderSection.get_ProhibitDefaultResolverString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.ProhibitDefaultResolverStringSetString">
            <summary>设置 XmlReaderSection.set_ProhibitDefaultResolverString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXmlReaderSection.ProhibitDefaultUrlResolverGet">
            <summary>设置 XmlReaderSection.get_ProhibitDefaultUrlResolver() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection">
            <summary>System.Xml.XmlConfiguration.XsltConfigSection 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.#ctor(System.Xml.XmlConfiguration.XsltConfigSection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.EnableMemberAccessForXslCompiledTransformStringGet">
            <summary>设置 XsltConfigSection.get_EnableMemberAccessForXslCompiledTransformString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.EnableMemberAccessForXslCompiledTransformStringSetString">
            <summary>设置 XsltConfigSection.set_EnableMemberAccessForXslCompiledTransformString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.LimitXPathComplexityStringGet">
            <summary>设置 XsltConfigSection.get_LimitXPathComplexityString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.LimitXPathComplexityStringSetString">
            <summary>设置 XsltConfigSection.set_LimitXPathComplexityString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.ProhibitDefaultResolverStringGet">
            <summary>设置 XsltConfigSection.get_ProhibitDefaultResolverString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.AllInstances.ProhibitDefaultResolverStringSetString">
            <summary>设置 XsltConfigSection.set_ProhibitDefaultResolverString(String value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.Constructor">
            <summary>设置 XsltConfigSection.XsltConfigSection() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.CreateDefaultResolver">
            <summary>设置 XsltConfigSection.CreateDefaultResolver() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.EnableMemberAccessForXslCompiledTransformGet">
            <summary>设置 XsltConfigSection.get_EnableMemberAccessForXslCompiledTransform() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.EnableMemberAccessForXslCompiledTransformStringGet">
            <summary>设置 XsltConfigSection.get_EnableMemberAccessForXslCompiledTransformString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.EnableMemberAccessForXslCompiledTransformStringSetString">
            <summary>设置 XsltConfigSection.set_EnableMemberAccessForXslCompiledTransformString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.LimitXPathComplexityGet">
            <summary>设置 XsltConfigSection.get_LimitXPathComplexity() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.LimitXPathComplexityStringGet">
            <summary>设置 XsltConfigSection.get_LimitXPathComplexityString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.LimitXPathComplexityStringSetString">
            <summary>设置 XsltConfigSection.set_LimitXPathComplexityString(String value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.ProhibitDefaultResolverStringGet">
            <summary>设置 XsltConfigSection.get_ProhibitDefaultResolverString() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.XmlConfiguration.Fakes.ShimXsltConfigSection.ProhibitDefaultResolverStringSetString">
            <summary>设置 XsltConfigSection.set_ProhibitDefaultResolverString(String value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXslCompiledTransform">
            <summary>System.Xml.Xsl.XslCompiledTransform 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.#ctor(System.Xml.Xsl.XslCompiledTransform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.ErrorsGet">
            <summary>设置 XslCompiledTransform.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadIXPathNavigable">
            <summary>设置 XslCompiledTransform.Load(IXPathNavigable stylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadIXPathNavigableXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(IXPathNavigable stylesheet, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadMethodInfoByteArrayTypeArray">
            <summary>设置 XslCompiledTransform.Load(MethodInfo executeMethod, Byte[] queryData, Type[] earlyBoundTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadString">
            <summary>设置 XslCompiledTransform.Load(String stylesheetUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadStringXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(String stylesheetUri, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadType">
            <summary>设置 XslCompiledTransform.Load(Type compiledStylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadXmlReader">
            <summary>设置 XslCompiledTransform.Load(XmlReader stylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.LoadXmlReaderXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(XmlReader stylesheet, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.OutputSettingsGet">
            <summary>设置 XslCompiledTransform.get_OutputSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TemporaryFilesGet">
            <summary>设置 XslCompiledTransform.get_TemporaryFiles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformIXPathNavigableXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformIXPathNavigableXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformIXPathNavigableXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformIXPathNavigableXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformIXPathNavigableXsltArgumentListXmlWriterXmlResolver">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, XmlWriter results, XmlResolver documentResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformStringString">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, String resultsFile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformStringXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformStringXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformStringXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformStringXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformXmlReaderXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformXmlReaderXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformXmlReaderXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformXmlReaderXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.AllInstances.TransformXmlReaderXsltArgumentListXmlWriterXmlResolver">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, XmlWriter results, XmlResolver documentResolver) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.CompileToTypeXmlReaderXsltSettingsXmlResolverBooleanTypeBuilderString">
            <summary>设置 XslCompiledTransform.CompileToType(XmlReader stylesheet, XsltSettings settings, XmlResolver stylesheetResolver, Boolean debug, TypeBuilder typeBuilder, String scriptAssemblyPath) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.Constructor">
            <summary>设置 XslCompiledTransform.XslCompiledTransform() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.ConstructorBoolean">
            <summary>设置 XslCompiledTransform.XslCompiledTransform(Boolean enableDebug) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.ErrorsGet">
            <summary>设置 XslCompiledTransform.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadIXPathNavigable">
            <summary>设置 XslCompiledTransform.Load(IXPathNavigable stylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadIXPathNavigableXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(IXPathNavigable stylesheet, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadMethodInfoByteArrayTypeArray">
            <summary>设置 XslCompiledTransform.Load(MethodInfo executeMethod, Byte[] queryData, Type[] earlyBoundTypes) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadString">
            <summary>设置 XslCompiledTransform.Load(String stylesheetUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadStringXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(String stylesheetUri, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadType">
            <summary>设置 XslCompiledTransform.Load(Type compiledStylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadXmlReader">
            <summary>设置 XslCompiledTransform.Load(XmlReader stylesheet) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.LoadXmlReaderXsltSettingsXmlResolver">
            <summary>设置 XslCompiledTransform.Load(XmlReader stylesheet, XsltSettings settings, XmlResolver stylesheetResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.OutputSettingsGet">
            <summary>设置 XslCompiledTransform.get_OutputSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.PrintQilObjectXmlWriterBooleanBooleanBoolean">
            <summary>设置 XslCompiledTransform.PrintQil(Object qil, XmlWriter xw, Boolean printComments, Boolean printTypes, Boolean printLineInfo) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.StaticConstructor">
            <summary>设置 XslCompiledTransform.XslCompiledTransform() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TemporaryFilesGet">
            <summary>设置 XslCompiledTransform.get_TemporaryFiles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformIXPathNavigableXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformIXPathNavigableXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformIXPathNavigableXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformIXPathNavigableXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformIXPathNavigableXsltArgumentListXmlWriterXmlResolver">
            <summary>设置 XslCompiledTransform.Transform(IXPathNavigable input, XsltArgumentList arguments, XmlWriter results, XmlResolver documentResolver) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformStringString">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, String resultsFile) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformStringXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformStringXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformStringXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformStringXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(String inputUri, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformXmlReaderXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformXmlReaderXsltArgumentListStream">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, Stream results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformXmlReaderXsltArgumentListTextWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, TextWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformXmlReaderXsltArgumentListXmlWriter">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, XmlWriter results) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXslCompiledTransform.TransformXmlReaderXsltArgumentListXmlWriterXmlResolver">
            <summary>设置 XslCompiledTransform.Transform(XmlReader input, XsltArgumentList arguments, XmlWriter results, XmlResolver documentResolver) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltArgumentList">
            <summary>System.Xml.Xsl.XsltArgumentList 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltArgumentList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltArgumentList.#ctor(System.Xml.Xsl.XsltArgumentList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AddExtensionObjectStringObject">
            <summary>设置 XsltArgumentList.AddExtensionObject(String namespaceUri, Object extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AddParamStringStringObject">
            <summary>设置 XsltArgumentList.AddParam(String name, String namespaceUri, Object parameter) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.AddExtensionObjectStringObject">
            <summary>设置 XsltArgumentList.AddExtensionObject(String namespaceUri, Object extension) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.AddParamStringStringObject">
            <summary>设置 XsltArgumentList.AddParam(String name, String namespaceUri, Object parameter) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.Clear">
            <summary>设置 XsltArgumentList.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.GetExtensionObjectString">
            <summary>设置 XsltArgumentList.GetExtensionObject(String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.GetParamStringString">
            <summary>设置 XsltArgumentList.GetParam(String name, String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.RemoveExtensionObjectString">
            <summary>设置 XsltArgumentList.RemoveExtensionObject(String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.RemoveParamStringString">
            <summary>设置 XsltArgumentList.RemoveParam(String name, String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.XsltMessageEncounteredAddXsltMessageEncounteredEventHandler">
            <summary>设置 XsltArgumentList.add_XsltMessageEncountered(XsltMessageEncounteredEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.AllInstances.XsltMessageEncounteredRemoveXsltMessageEncounteredEventHandler">
            <summary>设置 XsltArgumentList.remove_XsltMessageEncountered(XsltMessageEncounteredEventHandler value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltArgumentList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltArgumentList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.Clear">
            <summary>设置 XsltArgumentList.Clear() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.Constructor">
            <summary>设置 XsltArgumentList.XsltArgumentList() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.GetExtensionObjectString">
            <summary>设置 XsltArgumentList.GetExtensionObject(String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.GetParamStringString">
            <summary>设置 XsltArgumentList.GetParam(String name, String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.RemoveExtensionObjectString">
            <summary>设置 XsltArgumentList.RemoveExtensionObject(String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.RemoveParamStringString">
            <summary>设置 XsltArgumentList.RemoveParam(String name, String namespaceUri) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.XsltMessageEncounteredAddXsltMessageEncounteredEventHandler">
            <summary>设置 XsltArgumentList.add_XsltMessageEncountered(XsltMessageEncounteredEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltArgumentList.XsltMessageEncounteredRemoveXsltMessageEncounteredEventHandler">
            <summary>设置 XsltArgumentList.remove_XsltMessageEncountered(XsltMessageEncounteredEventHandler value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltCompileException">
            <summary>System.Xml.Xsl.XsltCompileException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltCompileException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltCompileException.#ctor(System.Xml.Xsl.XsltCompileException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltCompileException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltCompileException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltCompileException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltCompileException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltCompileException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.Constructor">
            <summary>设置 XsltCompileException.XsltCompileException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.ConstructorExceptionStringInt32Int32">
            <summary>设置 XsltCompileException.XsltCompileException(Exception inner, String sourceUri, Int32 lineNumber, Int32 linePosition) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XsltCompileException.XsltCompileException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.ConstructorString">
            <summary>设置 XsltCompileException.XsltCompileException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.ConstructorStringException">
            <summary>设置 XsltCompileException.XsltCompileException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltCompileException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltCompileException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltContext">
            <summary>System.Xml.Xsl.XsltContext 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltContext.#ctor(System.Xml.Xsl.XsltContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltContext.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltContext.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltContext.Constructor">
            <summary>设置 XsltContext.XsltContext() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltContext.ConstructorBoolean">
            <summary>设置 XsltContext.XsltContext(Boolean dummy) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltContext.ConstructorNameTable">
            <summary>设置 XsltContext.XsltContext(NameTable table) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltException">
            <summary>System.Xml.Xsl.XsltException 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltException.#ctor(System.Xml.Xsl.XsltException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances.LineNumberGet">
            <summary>设置 XsltException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances.LinePositionGet">
            <summary>设置 XsltException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances.MessageGet">
            <summary>设置 XsltException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.AllInstances.SourceUriGet">
            <summary>设置 XsltException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.Constructor">
            <summary>设置 XsltException.XsltException() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 XsltException.XsltException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.ConstructorString">
            <summary>设置 XsltException.XsltException(String message) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.ConstructorStringException">
            <summary>设置 XsltException.XsltException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.ConstructorStringStringArrayStringInt32Int32Exception">
            <summary>设置 XsltException.XsltException(String res, String[] args, String sourceUri, Int32 lineNumber, Int32 linePosition, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.CreateStringStringArray">
            <summary>设置 XsltException.Create(String res, String[] args) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.CreateStringStringArrayException">
            <summary>设置 XsltException.Create(String res, String[] args, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.LineNumberGet">
            <summary>设置 XsltException.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.LinePositionGet">
            <summary>设置 XsltException.get_LinePosition() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.MessageGet">
            <summary>设置 XsltException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltException.SourceUriGet">
            <summary>设置 XsltException.get_SourceUri() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs">
            <summary>System.Xml.Xsl.XsltMessageEncounteredEventArgs 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.#ctor(System.Xml.Xsl.XsltMessageEncounteredEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltMessageEncounteredEventArgs.Constructor">
            <summary>设置 XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs() 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltSettings">
            <summary>System.Xml.Xsl.XsltSettings 的填充码类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltSettings.#ctor(System.Xml.Xsl.XsltSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.CheckOnlyGet">
            <summary>设置 XsltSettings.get_CheckOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.CheckOnlySetBoolean">
            <summary>设置 XsltSettings.set_CheckOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.EnableDocumentFunctionGet">
            <summary>设置 XsltSettings.get_EnableDocumentFunction() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.EnableDocumentFunctionSetBoolean">
            <summary>设置 XsltSettings.set_EnableDocumentFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.EnableScriptGet">
            <summary>设置 XsltSettings.get_EnableScript() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.EnableScriptSetBoolean">
            <summary>设置 XsltSettings.set_EnableScript(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.IncludeDebugInformationGet">
            <summary>设置 XsltSettings.get_IncludeDebugInformation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.IncludeDebugInformationSetBoolean">
            <summary>设置 XsltSettings.set_IncludeDebugInformation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.TempFilesGet">
            <summary>设置 XsltSettings.get_TempFiles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.TempFilesSetTempFileCollection">
            <summary>设置 XsltSettings.set_TempFiles(TempFileCollection value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.TreatWarningsAsErrorsGet">
            <summary>设置 XsltSettings.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.TreatWarningsAsErrorsSetBoolean">
            <summary>设置 XsltSettings.set_TreatWarningsAsErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.WarningLevelGet">
            <summary>设置 XsltSettings.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.AllInstances.WarningLevelSetInt32">
            <summary>设置 XsltSettings.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.ShimXsltSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.CheckOnlyGet">
            <summary>设置 XsltSettings.get_CheckOnly() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.CheckOnlySetBoolean">
            <summary>设置 XsltSettings.set_CheckOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.Constructor">
            <summary>设置 XsltSettings.XsltSettings() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.ConstructorBooleanBoolean">
            <summary>设置 XsltSettings.XsltSettings(Boolean enableDocumentFunction, Boolean enableScript) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.DefaultGet">
            <summary>设置 XsltSettings.get_Default() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.EnableDocumentFunctionGet">
            <summary>设置 XsltSettings.get_EnableDocumentFunction() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.EnableDocumentFunctionSetBoolean">
            <summary>设置 XsltSettings.set_EnableDocumentFunction(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.EnableScriptGet">
            <summary>设置 XsltSettings.get_EnableScript() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.EnableScriptSetBoolean">
            <summary>设置 XsltSettings.set_EnableScript(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.IncludeDebugInformationGet">
            <summary>设置 XsltSettings.get_IncludeDebugInformation() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.IncludeDebugInformationSetBoolean">
            <summary>设置 XsltSettings.set_IncludeDebugInformation(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.TempFilesGet">
            <summary>设置 XsltSettings.get_TempFiles() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.TempFilesSetTempFileCollection">
            <summary>设置 XsltSettings.set_TempFiles(TempFileCollection value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.TreatWarningsAsErrorsGet">
            <summary>设置 XsltSettings.get_TreatWarningsAsErrors() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.TreatWarningsAsErrorsSetBoolean">
            <summary>设置 XsltSettings.set_TreatWarningsAsErrors(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.TrustedXsltGet">
            <summary>设置 XsltSettings.get_TrustedXslt() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.WarningLevelGet">
            <summary>设置 XsltSettings.get_WarningLevel() 的 填充码</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.ShimXsltSettings.WarningLevelSetInt32">
            <summary>设置 XsltSettings.set_WarningLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubIXsltContextFunction">
            <summary>System.Xml.Xsl.IXsltContextFunction 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubIXsltContextFunction.#ctor">
            <summary>初始化 type StubIXsltContextFunction 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextFunction.System#Xml#Xsl#IXsltContextFunction#ArgTypes">
            <summary>设置 IXsltContextFunction.get_ArgTypes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextFunction.ArgTypesGet">
            <summary>设置 IXsltContextFunction.get_ArgTypes() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextFunction.InvokeXsltContextObjectArrayXPathNavigator">
            <summary>设置 IXsltContextFunction.Invoke(XsltContext xsltContext, Object[] args, XPathNavigator docContext) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextFunction.System#Xml#Xsl#IXsltContextFunction#Maxargs">
            <summary>设置 IXsltContextFunction.get_Maxargs() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextFunction.MaxargsGet">
            <summary>设置 IXsltContextFunction.get_Maxargs() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextFunction.System#Xml#Xsl#IXsltContextFunction#Minargs">
            <summary>设置 IXsltContextFunction.get_Minargs() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextFunction.MinargsGet">
            <summary>设置 IXsltContextFunction.get_Minargs() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextFunction.System#Xml#Xsl#IXsltContextFunction#ReturnType">
            <summary>设置 IXsltContextFunction.get_ReturnType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextFunction.ReturnTypeGet">
            <summary>设置 IXsltContextFunction.get_ReturnType() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubIXsltContextFunction.System#Xml#Xsl#IXsltContextFunction#Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
            <summary>设置 IXsltContextFunction.Invoke(XsltContext xsltContext, Object[] args, XPathNavigator docContext) 的 存根</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubIXsltContextVariable">
            <summary>System.Xml.Xsl.IXsltContextVariable 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubIXsltContextVariable.#ctor">
            <summary>初始化 type StubIXsltContextVariable 的新实例</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextVariable.EvaluateXsltContext">
            <summary>设置 IXsltContextVariable.Evaluate(XsltContext xsltContext) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextVariable.System#Xml#Xsl#IXsltContextVariable#IsLocal">
            <summary>设置 IXsltContextVariable.get_IsLocal() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextVariable.IsLocalGet">
            <summary>设置 IXsltContextVariable.get_IsLocal() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextVariable.System#Xml#Xsl#IXsltContextVariable#IsParam">
            <summary>设置 IXsltContextVariable.get_IsParam() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextVariable.IsParamGet">
            <summary>设置 IXsltContextVariable.get_IsParam() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubIXsltContextVariable.System#Xml#Xsl#IXsltContextVariable#Evaluate(System.Xml.Xsl.XsltContext)">
            <summary>设置 IXsltContextVariable.Evaluate(XsltContext xsltContext) 的 存根</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubIXsltContextVariable.System#Xml#Xsl#IXsltContextVariable#VariableType">
            <summary>设置 IXsltContextVariable.get_VariableType() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubIXsltContextVariable.VariableTypeGet">
            <summary>设置 IXsltContextVariable.get_VariableType() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubXsltArgumentList">
            <summary>System.Xml.Xsl.XsltArgumentList 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltArgumentList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltArgumentList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltArgumentList.InitializeStub">
            <summary>初始化 type StubXsltArgumentList 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltArgumentList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltArgumentList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubXsltCompileException">
            <summary>System.Xml.Xsl.XsltCompileException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXsltCompileException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXsltCompileException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XsltCompileException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltCompileException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.InitializeStub">
            <summary>初始化 type StubXsltCompileException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.LineNumber">
            <summary>设置 XsltException.get_LineNumber() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.LineNumberGet">
            <summary>设置 XsltException.get_LineNumber() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.LinePosition">
            <summary>设置 XsltException.get_LinePosition() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.LinePositionGet">
            <summary>设置 XsltException.get_LinePosition() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.Message">
            <summary>设置 XsltException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.MessageGet">
            <summary>设置 XsltException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.SourceUri">
            <summary>设置 XsltException.get_SourceUri() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.SourceUriGet">
            <summary>设置 XsltException.get_SourceUri() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltCompileException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltCompileException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltCompileException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubXsltContext">
            <summary>System.Xml.Xsl.XsltContext 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.#ctor(System.Xml.NameTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.AddNamespace(System.String,System.String)">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.AddNamespaceStringString">
            <summary>设置 XmlNamespaceManager.AddNamespace(String prefix, String uri) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.CompareDocument(System.String,System.String)">
            <summary>设置 XsltContext.CompareDocument(String baseUri, String nextbaseUri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.CompareDocumentStringString">
            <summary>设置 XsltContext.CompareDocument(String baseUri, String nextbaseUri) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.DefaultNamespace">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.DefaultNamespaceGet">
            <summary>设置 XmlNamespaceManager.get_DefaultNamespace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.GetEnumerator">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.GetEnumerator01">
            <summary>设置 XmlNamespaceManager.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.GetNamespacesInScopeXmlNamespaceScope">
            <summary>设置 XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.HasNamespace(System.String)">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.HasNamespaceString">
            <summary>设置 XmlNamespaceManager.HasNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.InitializeStub">
            <summary>初始化 type StubXsltContext 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.LookupNamespace(System.String)">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.LookupNamespaceString">
            <summary>设置 XmlNamespaceManager.LookupNamespace(String prefix) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.LookupPrefix(System.String)">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.LookupPrefixString">
            <summary>设置 XmlNamespaceManager.LookupPrefix(String uri) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.NameTable">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.NameTableGet">
            <summary>设置 XmlNamespaceManager.get_NameTable() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.PopScope">
            <summary>设置 XmlNamespaceManager.PopScope() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.PopScope01">
            <summary>设置 XmlNamespaceManager.PopScope() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
            <summary>设置 XsltContext.PreserveWhitespace(XPathNavigator node) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.PreserveWhitespaceXPathNavigator">
            <summary>设置 XsltContext.PreserveWhitespace(XPathNavigator node) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.PushScope">
            <summary>设置 XmlNamespaceManager.PushScope() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.PushScope01">
            <summary>设置 XmlNamespaceManager.PushScope() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.RemoveNamespace(System.String,System.String)">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.RemoveNamespaceStringString">
            <summary>设置 XmlNamespaceManager.RemoveNamespace(String prefix, String uri) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
            <summary>设置 XsltContext.ResolveFunction(String prefix, String name, XPathResultType[] ArgTypes) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.ResolveFunctionStringStringXPathResultTypeArray">
            <summary>设置 XsltContext.ResolveFunction(String prefix, String name, XPathResultType[] ArgTypes) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltContext.ResolveVariable(System.String,System.String)">
            <summary>设置 XsltContext.ResolveVariable(String prefix, String name) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.ResolveVariableStringString">
            <summary>设置 XsltContext.ResolveVariable(String prefix, String name) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltContext.Whitespace">
            <summary>设置 XsltContext.get_Whitespace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltContext.WhitespaceGet">
            <summary>设置 XsltContext.get_Whitespace() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubXsltException">
            <summary>System.Xml.Xsl.XsltException 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubXsltException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubXsltException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 XsltException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 XsltException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.InitializeStub">
            <summary>初始化 type StubXsltException 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.LineNumber">
            <summary>设置 XsltException.get_LineNumber() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.LineNumberGet">
            <summary>设置 XsltException.get_LineNumber() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.LinePosition">
            <summary>设置 XsltException.get_LinePosition() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.LinePositionGet">
            <summary>设置 XsltException.get_LinePosition() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.Message">
            <summary>设置 XsltException.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.MessageGet">
            <summary>设置 XsltException.get_Message() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.SourceUri">
            <summary>设置 XsltException.get_SourceUri() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.SourceUriGet">
            <summary>设置 XsltException.get_SourceUri() 的 stub</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs">
            <summary>System.Xml.Xsl.XsltMessageEncounteredEventArgs 的存根类型</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.InitializeStub">
            <summary>初始化 type StubXsltMessageEncounteredEventArgs 的新实例</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.Message">
            <summary>设置 XsltMessageEncounteredEventArgs.get_Message() 的 stub</summary>
        </member>
        <member name="F:System.Xml.Xsl.Fakes.StubXsltMessageEncounteredEventArgs.MessageGet">
            <summary>设置 XsltMessageEncounteredEventArgs.get_Message() 的 stub</summary>
        </member>
    </members>
</doc>
